<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 10:34:24 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8340146] ZGC: TestAllocateHeapAt.java should not run with UseLargePages</title>
                <link>https://bugs.openjdk.org/browse/JDK-8340146</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>TestAllocateHeapAt.java expects that creating the heap file works in the current director (`.`). But when using persistent hugepages (-XX:+UseLargePages) this would require the filesystem to be a HugeTLBFS. &lt;br/&gt;
&lt;br/&gt;
I propose that we do not allow running these tests with persistent hugepages.&lt;br/&gt;
&lt;br/&gt;
The following two tests fail in the JDK24 CI:&lt;br/&gt;
&lt;br/&gt;
gc/z/TestAllocateHeapAt.java&lt;br/&gt;
gc/x/TestAllocateHeapAt.java&lt;br/&gt;
&lt;br/&gt;
This is seen with hugepages testing. We see warnings in the output then the VM fails to start:&lt;br/&gt;
&lt;br/&gt;
----------System.err:(36/2261)----------&lt;br/&gt;
Java HotSpot(TM) 64-Bit Server VM warning: Failed to reserve and commit memory using large pages. req_addr: 0x0000000399000000 bytes: 18907922432&lt;br/&gt;
&amp;nbsp;stdout: [[0.005s][info][gc,init] Initializing The Z Garbage Collector&lt;br/&gt;
[0.005s][info][gc,init] Version: 24-ea+16-1680 (fastdebug)&lt;br/&gt;
[0.005s][info][gc,init] Using deprecated non-generational mode&lt;br/&gt;
[0.005s][info][gc,init] NUMA Support: Disabled&lt;br/&gt;
[0.005s][info][gc,init] CPUs: 12 total, 12 available&lt;br/&gt;
[0.005s][info][gc,init] Memory: 72098M&lt;br/&gt;
[0.005s][info][gc,init] Large Page Support: Enabled (Explicit)&lt;br/&gt;
[0.005s][info][gc,init] GC Workers: 1 (dynamic)&lt;br/&gt;
[0.005s][info][gc,init] Address Space Type: Contiguous/Unrestricted/Complete&lt;br/&gt;
[0.005s][info][gc,init] Address Space Size: 512M x 3 = 1536M&lt;br/&gt;
[0.005s][info][gc,init] Heap Backing File: ./#506511511&lt;br/&gt;
[0.005s][info][gc,init] Heap Backing Filesystem: other (0x58465342)&lt;br/&gt;
[0.005s][error][gc     ] -XX:+UseLargePages (without -XX:+UseTransparentHugePages) can only be enabled when using a hugetlbfs filesystem&lt;br/&gt;
[0.006s][info ][gc,init] Runtime Workers: 1&lt;br/&gt;
[0.006s][info ][gc     ] Using The Z Garbage Collector&lt;br/&gt;
];&lt;br/&gt;
&amp;nbsp;stderr: [Java HotSpot(TM) 64-Bit Server VM warning: Option ZGenerational was deprecated in version 23.0 and will likely be removed in a future release.&lt;br/&gt;
Java HotSpot(TM) 64-Bit Server VM warning: Non-generational ZGC is deprecated.&lt;br/&gt;
Error: Could not create the Java Virtual Machine.&lt;br/&gt;
Error: A fatal exception has occurred. Program will exit.&lt;br/&gt;
]&lt;br/&gt;
&amp;nbsp;exitValue = 1</description>
                <environment></environment>
        <key id="5139105">JDK-8340146</key>
            <summary>ZGC: TestAllocateHeapAt.java should not run with UseLargePages</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="aboldtch">Axel Boldt-Christmas</assignee>
                                    <reporter username="dholmes">David Holmes</reporter>
                        <labels>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>noreg-self</label>
                            <label>tier8</label>
                            <label>zgc</label>
                    </labels>
                <created>Sun, 15 Sep 2024 14:24:37 -0700</created>
                <updated>Mon, 14 Jul 2025 01:53:33 -0700</updated>
                            <resolved>Mon, 23 Sep 2024 22:39:19 -0700</resolved>
                                    <version>24</version>
                                    <fixVersion>24</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                                                                <comments>
                            <comment id="14796692" author="roboduke" created="Tue, 8 Jul 2025 23:54:27 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/3724&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/3724&lt;/a&gt;&lt;br/&gt;
Date: 2025-07-09 06:46:20 +0000</comment>
                            <comment id="14796689" author="goetz" created="Tue, 8 Jul 2025 23:47:40 -0700"  >Fix request [17u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 17.0.17-oracle.&lt;br/&gt;
No risk, only a test change.&lt;br/&gt;
Omitted test for generational ZGC&lt;br/&gt;
Test passes. SAP nightly testing passed.</comment>
                            <comment id="14780705" author="roboduke" created="Fri, 16 May 2025 04:07:23 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1794&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1794&lt;/a&gt;&lt;br/&gt;
Date: 2025-05-16 11:00:58 +0000</comment>
                            <comment id="14780704" author="goetz" created="Fri, 16 May 2025 03:57:45 -0700"  >Fix request [21u]&lt;br/&gt;
&lt;br/&gt;
I would like to fix this test issue in 21.&lt;br/&gt;
No risk, only a test change&lt;br/&gt;
Clean backport.&lt;br/&gt;
Tests pass. SAP nightly testing passed.</comment>
                            <comment id="14707608" author="dcubed" created="Tue, 24 Sep 2024 12:48:22 -0700"  >The fix for this bug is integrated in jdk-24+17-1880.&lt;br/&gt;
That&amp;#39;s 130 build-IDs from where Tier8 is currently executing... sigh...</comment>
                            <comment id="14707161" author="dukebot" created="Mon, 23 Sep 2024 22:39:18 -0700"  >Changeset: 4098acc2&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Axel Boldt-Christmas &amp;lt;&lt;a href=&apos;mailto:aboldtch@openjdk.org&apos;&gt;aboldtch@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-09-24 05:35:12 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/4098acc200e608369ac1631dcc8513ea797bd59e&quot;&gt;https://git.openjdk.org/jdk/commit/4098acc200e608369ac1631dcc8513ea797bd59e&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14706876" author="roboduke" created="Mon, 23 Sep 2024 00:28:50 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/21127&quot;&gt;https://git.openjdk.org/jdk/pull/21127&lt;/a&gt;&lt;br/&gt;
Date: 2024-09-23 07:22:44 +0000</comment>
                            <comment id="14706151" author="JIRAUSER20303" created="Wed, 18 Sep 2024 23:27:04 -0700"  >There is a similar issue with transparent hugepages. Fixing this test for THP will require a more intrusive change, regardless if we put it on a test level or a test framework level, as if THP is always we cannot simply check the flag, but must read from the OS. Will create a separate issue for this.</comment>
                            <comment id="14705425" author="JIRAUSER20303" created="Mon, 16 Sep 2024 23:24:21 -0700"  >Maybe I should look at fixing up and integrating my improvements w.r.t. logging when we fail to get explicit/persistent huge pages.&lt;br/&gt;
&lt;br/&gt;
My WIP from earlier this year:&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/compare/master...xmas92:jdk:zgc-better-explicit-huge-pages-messages&quot;&gt;https://github.com/openjdk/jdk/compare/master...xmas92:jdk:zgc-better-explicit-huge-pages-messages&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
`vm_exit_during_initialization` / `vm_shutdown_during_initialization` should probably also be added for ZGC. We seem to be the only GC that actually returns from `CollectedHeap::initialize` with a none JNI_OK without calling  `vm_shutdown_during_initialization`.</comment>
                            <comment id="14705332" author="dholmes" created="Mon, 16 Sep 2024 13:46:25 -0700"  >[~stefank] - thanks for that I obviously missed the &amp;quot;error&amp;quot; amongst the &amp;quot;info&amp;quot; lines.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; Do you think we should change this and call vm_exit_during_initialization instead?&lt;br/&gt;
&lt;br/&gt;
It would certainly make the cause of the problem more obvious, and we do this for a lot of other error conditions.</comment>
                            <comment id="14705262" author="stefank" created="Mon, 16 Sep 2024 07:39:47 -0700"  >[~dholmes] re:&lt;br/&gt;
&lt;br/&gt;
&amp;gt;&amp;gt; Error: A fatal exception has occurred. Program will exit.&lt;br/&gt;
&lt;br/&gt;
&amp;gt;There should be something from the VM to indicate what this &amp;quot;fatal error&amp;quot; was. This message indicates that JNI CreateJavaVM returned JNI_ERR. A `vm_exit_during_initialization` may be more appropriate, but at a minimum the &amp;quot;error&amp;quot; should be logged, but all we see are warnings. &lt;br/&gt;
&lt;br/&gt;
This is the error message:&lt;br/&gt;
[0.005s][error][gc ] -XX:+UseLargePages (without -XX:+UseTransparentHugePages) can only be enabled when using a hugetlbfs filesystem &lt;br/&gt;
&lt;br/&gt;
and the code:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;if (ZLargePages::is_explicit() &amp;amp;&amp;amp; !is_hugetlbfs()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;log_error_p(gc)(&amp;quot;-XX:+UseLargePages (without -XX:+UseTransparentHugePages) can only be enabled &amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;when using a %s filesystem&amp;quot;, ZFILESYSTEM_HUGETLBFS);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
This is intended to explain the fatal error. Do you think we should change this and call vm_exit_during_initialization instead?</comment>
                            <comment id="14705171" author="dholmes" created="Mon, 16 Sep 2024 01:57:14 -0700"  >&amp;gt; Error: A fatal exception has occurred. Program will exit. &lt;br/&gt;
&lt;br/&gt;
There should be something from the VM to indicate what this &amp;quot;fatal error&amp;quot; was. This message indicates that JNI CreateJavaVM returned JNI_ERR. A `vm_exit_during_initialization` may be more appropriate, but at a minimum the &amp;quot;error&amp;quot; should be logged, but all we see are warnings.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5159195">JDK-8357391</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5163947">JDK-8361651</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5163948">JDK-8361652</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5164486">JDK-8362137</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5139412">JDK-8340422</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5139409">JDK-8340419</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i37x5f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17417"><![CDATA[b17]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="209"><![CDATA[gc]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>