<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 10:31:01 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8339148] Make os::Linux::active_processor_count() public</title>
                <link>https://bugs.openjdk.org/browse/JDK-8339148</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>During review of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8322420&quot; title=&quot;[Linux] cgroup v2: Limits in parent nested control groups are not detected&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8322420&quot;&gt;&lt;strike&gt;JDK-8322420&lt;/strike&gt;&lt;/a&gt; it was mentioned that some use-cases for the container code need the host active CPU count and not only the containerized value (which might be equal or less). I therefore, propose to make os::Linux::active_processor_count() public, which provides this info currently. It would be useful to report the host active cpus in JFR events too - if they differ to the containerized value - like we do for memory.&lt;br/&gt;
&lt;br/&gt;
Some code that works around this issue currently, then needs to be cleaned up once this bug is fixed.</description>
                <environment></environment>
        <key id="5137698">JDK-8339148</key>
            <summary>Make os::Linux::active_processor_count() public</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="sgehwolf">Severin Gehwolf</assignee>
                                    <reporter username="sgehwolf">Severin Gehwolf</reporter>
                        <labels>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>os</label>
                    </labels>
                <created>Wed, 28 Aug 2024 02:12:14 -0700</created>
                <updated>Mon, 7 Apr 2025 08:20:04 -0700</updated>
                            <resolved>Wed, 4 Sep 2024 09:23:17 -0700</resolved>
                                                    <fixVersion>24</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14767154" author="roboduke" created="Fri, 4 Apr 2025 07:07:04 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/3439&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/3439&lt;/a&gt;&lt;br/&gt;
Date: 2025-04-04 13:57:06 +0000</comment>
                            <comment id="14767149" author="goetz" created="Fri, 4 Apr 2025 06:56:35 -0700"  >Fix request [17u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 17.0.16-oracle.&lt;br/&gt;
Low risk, changes visibility of a method. &lt;br/&gt;
Trivial resolves, probably clean anyways.&lt;br/&gt;
SAP nighlty testing passed.&lt;br/&gt;
</comment>
                            <comment id="14765344" author="roboduke" created="Mon, 31 Mar 2025 07:18:41 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1553&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1553&lt;/a&gt;&lt;br/&gt;
Date: 2025-03-31 14:07:34 +0000</comment>
                            <comment id="14765341" author="goetz" created="Mon, 31 Mar 2025 07:09:29 -0700"  >Fix request [21u]&lt;br/&gt;
&lt;br/&gt;
Low risk, changes visibility of a method.&lt;br/&gt;
Trivial resolve, clean anyways.&lt;br/&gt;
SAP nightly testing passed.</comment>
                            <comment id="14702859" author="dukebot" created="Wed, 4 Sep 2024 09:23:16 -0700"  >Changeset: 12d060a2&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Severin Gehwolf &amp;lt;&lt;a href=&apos;mailto:sgehwolf@openjdk.org&apos;&gt;sgehwolf@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-09-04 16:21:19 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/12d060a255b9b783488714c6c2cb73a899d3f708&quot;&gt;https://git.openjdk.org/jdk/commit/12d060a255b9b783488714c6c2cb73a899d3f708&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14702491" author="roboduke" created="Tue, 3 Sep 2024 03:43:01 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/20833&quot;&gt;https://git.openjdk.org/jdk/pull/20833&lt;/a&gt;&lt;br/&gt;
Date: 2024-09-03 10:16:06 +0000</comment>
                            <comment id="14702475" author="sgehwolf" created="Tue, 3 Sep 2024 02:40:02 -0700"  >OK, I&amp;#39;ve changed the bug to make os::Linux::active_processor_count() public (as it&amp;#39;s currently protected).</comment>
                            <comment id="14702130" author="dholmes" created="Sun, 1 Sep 2024 22:09:49 -0700"  >So if the code that wants this is Linux-only then just use os::Linux::active_processor_count().&lt;br/&gt;
&lt;br/&gt;
I don&amp;#39;t see any point in introducing a new API that purports to be platform independent when in reality it only makes snse, and is needed, on Linux.</comment>
                            <comment id="14701751" author="sgehwolf" created="Fri, 30 Aug 2024 01:43:20 -0700"  >You are right. --cpuset-cpus affect sched_getaffinity. So I agree, we need to find a better name. In essence we want to expose what currently os::Linux::active_processor_count() returns.&lt;br/&gt;
&lt;br/&gt;
What problem is this trying to solve? Popular frameworks like Kubernetes use CPU quota/period for CPU throttling.&lt;br/&gt;
&lt;br/&gt;
Let&amp;#39;s assume we run on a 12 core host and then we use the following container switches when we run them:&lt;br/&gt;
&lt;br/&gt;
--cpuset-cpus 0,1 =&amp;gt; os::Linux::active_processor_count() == 2&lt;br/&gt;
--cpus 2 =&amp;gt; os::Linux::active_processor_count() == 12&lt;br/&gt;
--cpu-period 100000 --cpu-quota 200000 =&amp;gt; os::Linux::active_processor_count() == 12&lt;br/&gt;
&lt;br/&gt;
When determining the CPU limit value in container code we are looking at whether or not we find a lower or equal CPU count value than what os::Linux::active_processor_count() returns. Thus a value X where X &amp;lt;= N (where N is the current result os::Linux::active_processor_count() gives). In the above two examples we cover cases 2 and 3. In &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8336881&quot; title=&quot;[Linux] Support for hierarchical limits for Metrics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8336881&quot;&gt;JDK-8336881&lt;/a&gt; it would be useful to have that info available to the JDK code so it can match hotspot&amp;#39;s version of the container detection.&lt;br/&gt;
</comment>
                            <comment id="14701685" author="dholmes" created="Thu, 29 Aug 2024 16:24:37 -0700"  >As per my PR comment this is not getting the &amp;quot;physical&amp;quot; count at all. It seems to be you want &amp;quot;available processors according to the OS not the container&amp;quot;, but it isn&amp;#39;t obvious that such an API is guaranteed to exist as a container technology could affect other API&amp;#39;s like sched_getaffinity.</comment>
                            <comment id="14701612" author="roboduke" created="Thu, 29 Aug 2024 09:34:34 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/20768&quot;&gt;https://git.openjdk.org/jdk/pull/20768&lt;/a&gt;&lt;br/&gt;
Date: 2024-08-29 12:38:40 +0000</comment>
                            <comment id="14701491" author="sgehwolf" created="Thu, 29 Aug 2024 02:04:12 -0700"  >[~dholmes] Patch would be this:&lt;br/&gt;
&lt;br/&gt;
+int os::physical_active_processor_count() {&lt;br/&gt;
+#ifdef LINUX&lt;br/&gt;
+  // Use the Linux namespaced version, since we want&lt;br/&gt;
+  // the active host CPU value, not the containerized&lt;br/&gt;
+  // value.&lt;br/&gt;
+  return os::Linux::active_processor_count();&lt;br/&gt;
+#else&lt;br/&gt;
+  return os::active_processor_count();&lt;br/&gt;
+#endif&lt;br/&gt;
+}&lt;br/&gt;
&lt;br/&gt;
Does that clarify it?&lt;br/&gt;
&lt;br/&gt;
&amp;gt; Are we guaranteed that this gives physical host information and not modified container information?&lt;br/&gt;
&lt;br/&gt;
Yes. Current container code caps the CPU count on &amp;#39;os::Linux::active_processor_count()&amp;#39;.&lt;br/&gt;
&lt;br/&gt;
The idea would be to have this info be more widely available. E.g. &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8322420&quot; title=&quot;[Linux] cgroup v2: Limits in parent nested control groups are not detected&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8322420&quot;&gt;&lt;strike&gt;JDK-8322420&lt;/strike&gt;&lt;/a&gt;,  &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8336881&quot; title=&quot;[Linux] Support for hierarchical limits for Metrics&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8336881&quot;&gt;JDK-8336881&lt;/a&gt; and &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8333446&quot; title=&quot;Add tests for hierarchical container support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8333446&quot;&gt;&lt;strike&gt;JDK-8333446&lt;/strike&gt;&lt;/a&gt; could use this public &amp;#39;os::active_physical_processor_count()&amp;#39; api. Does that make sense?</comment>
                            <comment id="14701414" author="dholmes" created="Wed, 28 Aug 2024 18:19:08 -0700"  >What is the OS API for this? sysconf(_SC_NPROCESSORS_ONLN)? Are we guaranteed that this gives physical host information and not modified container information? Is this specific to the OS and container technology?</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5154016">JDK-8352943</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5154103">JDK-8353022</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5154104">JDK-8353023</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5154105">JDK-8353024</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5154666">JDK-8353522</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5155054">JDK-8353878</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i37pob:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17407"><![CDATA[b14]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>