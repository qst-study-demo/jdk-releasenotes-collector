<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Thu Sep 25 23:19:33 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8341779] [REDO BACKPORT] type annotations are not visible to javac plugins across compilation boundaries (JDK-8225377)</title>
                <link>https://bugs.openjdk.org/browse/JDK-8341779</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>javac fails to associate type annotations with TypeMirrors for some symbols loaded from the classpath, which prevents plugins from accessing those annotations across compilation boundaries. The annotations are present if the same symbol is compiled from source in the compilation where the plugin runs.&lt;br/&gt;
&lt;br/&gt;
=== ./test/B.java&lt;br/&gt;
abstract class B extends A {}&lt;br/&gt;
=== ./test/A.java&lt;br/&gt;
import java.lang.annotation.ElementType;&lt;br/&gt;
import java.util.List;&lt;br/&gt;
import java.lang.annotation.Retention;&lt;br/&gt;
import java.lang.annotation.RetentionPolicy;&lt;br/&gt;
import java.lang.annotation.Target;&lt;br/&gt;
&lt;br/&gt;
@Target(ElementType.TYPE_USE)&lt;br/&gt;
@Retention(RetentionPolicy.RUNTIME)&lt;br/&gt;
@interface TypeAnnotation {}&lt;br/&gt;
&lt;br/&gt;
abstract class A implements List&amp;lt;@TypeAnnotation String&amp;gt; {}&lt;br/&gt;
=== ./plugin/p/P.java&lt;br/&gt;
package p;&lt;br/&gt;
&lt;br/&gt;
import com.sun.source.util.JavacTask;&lt;br/&gt;
import com.sun.source.util.Plugin;&lt;br/&gt;
import com.sun.source.util.TaskEvent;&lt;br/&gt;
import com.sun.source.util.TaskListener;&lt;br/&gt;
import javax.lang.model.element.TypeElement;&lt;br/&gt;
import javax.lang.model.type.DeclaredType;&lt;br/&gt;
import javax.lang.model.type.TypeMirror;&lt;br/&gt;
&lt;br/&gt;
public class P implements Plugin {&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;@Override&lt;br/&gt;
&amp;nbsp;&amp;nbsp;public String getName() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return &amp;quot;P&amp;quot;;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;@Override&lt;br/&gt;
&amp;nbsp;&amp;nbsp;public void init(JavacTask javacTask, String... strings) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;javacTask.addTaskListener(&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new TaskListener() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public void finished(TaskEvent e) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (e.getKind() != TaskEvent.Kind.ENTER) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TypeElement b = javacTask.getElements().getTypeElement(&amp;quot;B&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (TypeMirror i :&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;((TypeElement) ((DeclaredType) b.getSuperclass()).asElement()).getInterfaces()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.err.printf(&amp;quot;%s %s\n&amp;quot;, i, i.getAnnotationMirrors());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
=== ./plugin/module-info.java&lt;br/&gt;
module p { &lt;br/&gt;
&amp;nbsp;&amp;nbsp;requires transitive jdk.compiler; &lt;br/&gt;
&amp;nbsp;&amp;nbsp;provides com.sun.source.util.Plugin with p.P; &lt;br/&gt;
} &lt;br/&gt;
===&lt;br/&gt;
&lt;br/&gt;
$ javac $(find plugin -name &amp;#39;*.java&amp;#39;)&lt;br/&gt;
&lt;br/&gt;
# when both compilation units are compiled from source, the type annotations are visible&lt;br/&gt;
&lt;br/&gt;
$ javac --processor-module-path plugin -Xplugin:P test/A.java test/B.java &lt;br/&gt;
java.util.List&amp;lt;@TypeAnnotation java.lang.String&amp;gt; &lt;br/&gt;
java.util.List&amp;lt;@TypeAnnotation java.lang.String&amp;gt; &lt;br/&gt;
&lt;br/&gt;
# when &amp;#39;A&amp;#39; is loaded from the classpath, the type annotations on its supertype are not visible&lt;br/&gt;
&lt;br/&gt;
$ javac --processor-module-path plugin -Xplugin:P -classpath test test/B.java &lt;br/&gt;
java.util.List&amp;lt;java.lang.String&amp;gt; &lt;br/&gt;
</description>
                <environment></environment>
        <key id="5141006">JDK-8341779</key>
            <summary>[REDO BACKPORT] type annotations are not visible to javac plugins across compilation boundaries (JDK-8225377)</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="cushon">Liam Miller-Cushon</assignee>
                                    <reporter username="cushon">Liam Miller-Cushon</reporter>
                        <labels>
                            <label>22-na</label>
                            <label>javac-plugin</label>
                            <label>jdk21u-fix-SQE-ok</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>type-annotations</label>
                    </labels>
                <created>Tue, 8 Oct 2024 11:20:48 -0700</created>
                <updated>Wed, 25 Jun 2025 09:42:23 -0700</updated>
                            <resolved>Wed, 16 Apr 2025 01:22:58 -0700</resolved>
                                    <version>13</version>
                    <version>21</version>
                                    <fixVersion>21.0.8</fixVersion>
                                    <component>tools</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                                                            <comments>
                            <comment id="14793042" author="sgehwolf" created="Wed, 25 Jun 2025 09:42:23 -0700"  >There was an issue discovered late in the 21.0.8 cycle and this change isn&amp;#39;t enabled by default. &amp;#39;-XDaddTypeAnnotationsToSymbol=true&amp;#39; needs to be added to enable it in JDK 21.0.8+. See &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8360406&quot; title=&quot;[21u] Disable logic for attaching type annotations to class files until 8359336 is fixed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8360406&quot;&gt;&lt;strike&gt;JDK-8360406&lt;/strike&gt;&lt;/a&gt;.</comment>
                            <comment id="14775156" author="dukebot" created="Wed, 30 Apr 2025 00:51:42 -0700"  >Changeset: 42165463&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Liam Miller-Cushon &amp;lt;&lt;a href=&apos;mailto:cushon@openjdk.org&apos;&gt;cushon@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Severin Gehwolf &amp;lt;&lt;a href=&apos;mailto:sgehwolf@openjdk.org&apos;&gt;sgehwolf@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2025-04-16 08:18:29 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk21u/commit/421654630dfcc4b697fdd61c8a46c1d2f899d8fb&quot;&gt;https://git.openjdk.org/jdk21u/commit/421654630dfcc4b697fdd61c8a46c1d2f899d8fb&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14770641" author="dukebot" created="Wed, 16 Apr 2025 01:22:57 -0700"  >Changeset: 42165463&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Liam Miller-Cushon &amp;lt;&lt;a href=&apos;mailto:cushon@openjdk.org&apos;&gt;cushon@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Severin Gehwolf &amp;lt;&lt;a href=&apos;mailto:sgehwolf@openjdk.org&apos;&gt;sgehwolf@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2025-04-16 08:18:29 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/commit/421654630dfcc4b697fdd61c8a46c1d2f899d8fb&quot;&gt;https://git.openjdk.org/jdk21u-dev/commit/421654630dfcc4b697fdd61c8a46c1d2f899d8fb&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14765072" author="sgehwolf" created="Fri, 28 Mar 2025 07:43:16 -0700"  >Adding 22-na since &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8225377&quot; title=&quot;type annotations are not visible to javac plugins across compilation boundaries&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8225377&quot;&gt;&lt;strike&gt;JDK-8225377&lt;/strike&gt;&lt;/a&gt; didn&amp;#39;t get backed out from JDK 22 and better. Therefore no redo necessary. It got backed out from JDK 21 and earlier releases with &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8322883&quot; title=&quot;[BACKOUT] 8225377: type annotations are not visible to javac plugins across compilation boundaries&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8322883&quot;&gt;&lt;strike&gt;JDK-8322883&lt;/strike&gt;&lt;/a&gt;.</comment>
                            <comment id="14764069" author="roboduke" created="Tue, 25 Mar 2025 17:52:45 -0700"  >[jdk21u-fix-request] Approval Request from Liam Miller-Cushon&lt;br/&gt;
for backport. Fixes a bug in javac&amp;#39;s implementation of TypeMirror to allow accessing type-use annotations on types loaded from class files.&lt;br/&gt;
&lt;br/&gt;
Risk: See discussion in CSR &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8346471&quot; title=&quot;[REDO BACKPORT] type annotations are not visible to javac plugins across compilation boundaries&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8346471&quot;&gt;&lt;strike&gt;JDK-8346471&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
Testing: Tier 1 tests pass. The fix is also present in JDK 22 and newer releases.&lt;br/&gt;
&lt;br/&gt;
Dependencies: If approved, &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8337795&quot; title=&quot;Type annotation attached to incorrect type during class reading&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8337795&quot;&gt;&lt;strike&gt;JDK-8337795&lt;/strike&gt;&lt;/a&gt; and &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8337998&quot; title=&quot;CompletionFailure in getEnclosingType attaching type annotations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8337998&quot;&gt;&lt;strike&gt;JDK-8337998&lt;/strike&gt;&lt;/a&gt; should also be backported.</comment>
                            <comment id="14733019" author="roboduke" created="Tue, 17 Dec 2024 14:25:50 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1251&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1251&lt;/a&gt;&lt;br/&gt;
Date: 2024-12-17 21:28:33 +0000</comment>
                            <comment id="14728458" author="cushon" created="Wed, 4 Dec 2024 08:40:22 -0800"  >There was some related discussion in:&lt;br/&gt;
&lt;a href=&quot;https://mail.openjdk.org/pipermail/compiler-dev/2024-July/027344.html&quot;&gt;https://mail.openjdk.org/pipermail/compiler-dev/2024-July/027344.html&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;https://mail.openjdk.org/pipermail/compiler-dev/2024-August/027446.html&quot;&gt;https://mail.openjdk.org/pipermail/compiler-dev/2024-August/027446.html&lt;/a&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10400">
                    <name>CSR</name>
                                            <outwardlinks description="csr for">
                                        <issuelink>
            <issuekey id="5146543">JDK-8346471</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10600">
                    <name>Causes</name>
                                            <outwardlinks description="causes">
                                        <issuelink>
            <issuekey id="5161389">JDK-8359336</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10001">
                    <name>Cloners</name>
                                            <outwardlinks description="clones">
                                        <issuelink>
            <issuekey id="4992387">JDK-8225377</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5156224">JDK-8354893</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5136349">JDK-8337998</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                                              <subtask id="5141007">JDK-8341780</subtask>
                                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i388gj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17304"><![CDATA[b01]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="212"><![CDATA[javac]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>