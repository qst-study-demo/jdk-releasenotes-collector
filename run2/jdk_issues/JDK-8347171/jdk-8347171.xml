<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 10:04:25 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8347171] (dc) java/nio/channels/DatagramChannel/InterruptibleOrNot.java fails with virtual thread factory</title>
                <link>https://bugs.openjdk.org/browse/JDK-8347171</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Test java/nio/channels/DatagramChannel/InterruptibleOrNot.java	fails with virtual thread factory because of wrong exception&lt;br/&gt;
&lt;br/&gt;
the log&lt;br/&gt;
org.opentest4j.AssertionFailedError: Unexpected exception type thrown, expected: &amp;lt;java.nio.channels.AsynchronousCloseException&amp;gt; but was: &amp;lt;java.io.InterruptedIOException&amp;gt;&lt;br/&gt;
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)&lt;br/&gt;
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:67)&lt;br/&gt;
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:35)&lt;br/&gt;
	at org.junit.jupiter.api.Assertions.assertThrows(Assertions.java:3115)&lt;br/&gt;
	at InterruptibleOrNot.testInterruptBeforeUninterruptibleReceive(InterruptibleOrNot.java:109)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)&lt;br/&gt;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)&lt;br/&gt;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1604)&lt;br/&gt;
Caused by: java.io.InterruptedIOException&lt;br/&gt;
	at java.base/sun.nio.ch.DatagramChannelImpl.park(DatagramChannelImpl.java:482)&lt;br/&gt;
	at java.base/sun.nio.ch.SelChImpl.park(SelChImpl.java:116)&lt;br/&gt;
	at java.base/sun.nio.ch.DatagramChannelImpl.receive(DatagramChannelImpl.java:571)&lt;br/&gt;
	at InterruptibleOrNot.lambda$testInterruptBeforeUninterruptibleReceive$1(InterruptibleOrNot.java:109)&lt;br/&gt;
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:53)&lt;br/&gt;
	... 6 more&lt;br/&gt;
FAILED     InterruptibleOrNot::testInterruptBeforeUninterruptibleReceive &amp;#39;testInterruptBeforeUninterruptibleReceive()&amp;#39;&lt;br/&gt;
STARTED    InterruptibleOrNot::testInterruptDuringUninterruptibleReceive &amp;#39;testInterruptDuringUninterruptibleReceive()&amp;#39;&lt;br/&gt;
SUCCESSFUL InterruptibleOrNot::testInterruptDuringUninterruptibleReceive &amp;#39;testInterruptDuringUninterruptibleReceive()&amp;#39;&lt;br/&gt;
STARTED    InterruptibleOrNot::testInterruptBeforeUninterruptibleSend &amp;#39;testInterruptBeforeUninterruptibleSend()&amp;#39;&lt;br/&gt;
SUCCESSFUL InterruptibleOrNot::testInterruptBeforeUninterruptibleSend &amp;#39;testInterruptBeforeUninterruptibleSend()&amp;#39;&lt;br/&gt;
STARTED    InterruptibleOrNot::testInterruptDuringInterruptibleReceive &amp;#39;testInterruptDuringInterruptibleReceive()&amp;#39;&lt;br/&gt;
SUCCESSFUL InterruptibleOrNot::testInterruptDuringInterruptibleReceive &amp;#39;testInterruptDuringInterruptibleReceive()&amp;#39;&lt;br/&gt;
JavaTest Message: JUnit Platform Failure(s): 1&lt;br/&gt;
&lt;br/&gt;
[ JUnit Containers: found 4, started 4, succeeded 4, failed 0, aborted 0, skipped 0]&lt;br/&gt;
[ JUnit Tests: found 6, started 6, succeeded 5, failed 1, aborted 0, skipped 0]&lt;br/&gt;
&lt;br/&gt;
java.lang.Exception: JUnit test failure&lt;br/&gt;
	at com.sun.javatest.regtest.agent.JUnitRunner.runWithJUnitPlatform(JUnitRunner.java:149)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.JUnitRunner.main(JUnitRunner.java:95)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run(MainActionHelper.java:333)&lt;br/&gt;
	at java.base/java.lang.VirtualThread.run(VirtualThread.java:466)&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test threw exception: java.lang.Exception&lt;br/&gt;
JavaTest Message: shutting down test&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5147419">JDK-8347171</key>
            <summary>(dc) java/nio/channels/DatagramChannel/InterruptibleOrNot.java fails with virtual thread factory</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="bpb">Brian Burkhalter</assignee>
                                    <reporter username="lmesnik">Leonid Mesnik</reporter>
                        <labels>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk24u-fix-SQE-ok-next</label>
                            <label>jdk24u-fix-request</label>
                            <label>jdk24u-fix-yes</label>
                            <label>noreg-self</label>
                            <label>sust-test-stabilization</label>
                    </labels>
                <created>Tue, 7 Jan 2025 22:48:50 -0800</created>
                <updated>Wed, 12 Mar 2025 04:13:13 -0700</updated>
                            <resolved>Thu, 9 Jan 2025 07:30:21 -0800</resolved>
                                    <version>21</version>
                    <version>24</version>
                    <version>25</version>
                                    <fixVersion>25</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14751580" author="roboduke" created="Wed, 12 Feb 2025 19:05:10 -0800"  >[jdk21u-fix-request] Approval Request from sendaoYan&lt;br/&gt;
Clean backport make test more robustness, which skip this test when enable virtual thread, test-fix only, no risk,</comment>
                            <comment id="14750818" author="roboduke" created="Mon, 10 Feb 2025 19:32:54 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1395&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1395&lt;/a&gt;&lt;br/&gt;
Date: 2025-02-11 03:26:56 +0000</comment>
                            <comment id="14750374" author="roboduke" created="Fri, 7 Feb 2025 17:29:00 -0800"  >[jdk24u-fix-request] Approval Request from sendaoYan&lt;br/&gt;
Clean backport make test more rubustness, test-fix only, no risk.</comment>
                            <comment id="14750271" author="roboduke" created="Fri, 7 Feb 2025 08:17:40 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk24u/pull/61&quot;&gt;https://git.openjdk.org/jdk24u/pull/61&lt;/a&gt;&lt;br/&gt;
Date: 2025-02-07 16:10:49 +0000</comment>
                            <comment id="14737629" author="roboduke" created="Sun, 12 Jan 2025 19:18:09 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: jdk24&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/23060&quot;&gt;https://git.openjdk.org/jdk/pull/23060&lt;/a&gt;&lt;br/&gt;
Date: 2025-01-13 03:13:48 +0000</comment>
                            <comment id="14737028" author="dukebot" created="Thu, 9 Jan 2025 07:30:20 -0800"  >Changeset: 1ef77cdd&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Brian Burkhalter &amp;lt;&lt;a href=&apos;mailto:bpb@openjdk.org&apos;&gt;bpb@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2025-01-09 15:26:38 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/1ef77cdd51b91f6d6d3367444a37a3f0f2e4bc99&quot;&gt;https://git.openjdk.org/jdk/commit/1ef77cdd51b91f6d6d3367444a37a3f0f2e4bc99&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14736811" author="roboduke" created="Wed, 8 Jan 2025 12:55:20 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/22981&quot;&gt;https://git.openjdk.org/jdk/pull/22981&lt;/a&gt;&lt;br/&gt;
Date: 2025-01-08 20:49:45 +0000</comment>
                            <comment id="14736781" author="bpb" created="Wed, 8 Jan 2025 10:10:18 -0800"  >Fix suggested by [~alanb] verified on macOS. Thanks.</comment>
                            <comment id="14736778" author="bpb" created="Wed, 8 Jan 2025 10:03:06 -0800"  >Reproduced locally on macOS.&lt;br/&gt;
&lt;br/&gt;
Thanks, [~lmesnik], for providing instructions on how to run the test locally.</comment>
                            <comment id="14736453" author="alanb" created="Tue, 7 Jan 2025 23:24:59 -0800"  >DatagramSocket.receive is specified to be interruptible when a virtual thread blocks on this method. This means that testInterruptBeforeUninterruptibleReceive is not appropriate for JTREG_TEST_THREAD_FACTORY=Virtual. We can get it to skip with:&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
&amp;nbsp;import org.junit.jupiter.api.BeforeAll;&lt;br/&gt;
&amp;nbsp;import org.junit.jupiter.api.function.Executable;&lt;br/&gt;
&amp;nbsp;import static org.junit.jupiter.api.Assertions.*;&lt;br/&gt;
+import static org.junit.jupiter.api.Assumptions.*;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;public class InterruptibleOrNot {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// DatagramChannel implementation class&lt;br/&gt;
@@ -98,6 +99,7 @@ public void testInterruptDuringInterruptibleReceive() throws Exception {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Test&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public void testInterruptBeforeUninterruptibleReceive() throws Exception {&lt;br/&gt;
+        assumeFalse(Thread.currentThread().isVirtual());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try (DatagramChannel dc = boundDatagramChannel(false)) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ByteBuffer buf = ByteBuffer.allocate(100);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;onReceive(() -&amp;gt; {&lt;br/&gt;
```</comment>
                            <comment id="14736440" author="lmesnik" created="Tue, 7 Jan 2025 22:55:53 -0800"  >Test fails if executed with virtual thread factory only. The main() is executed by virtual thread instead of kernel thread.&lt;br/&gt;
&lt;br/&gt;
The bug is failed for further investigation. If it is expected behavior, the bug could be just closed.&lt;br/&gt;
&lt;br/&gt;
Use&lt;br/&gt;
make run-test JTREG_TEST_THREAD_FACTORY=Virtual TEST=java/nio/channels/DatagramChannel/InterruptibleOrNot.java&lt;br/&gt;
to run locally.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5150338">JDK-8349765</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5150621">JDK-8349998</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5152572">JDK-8351697</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i39ah7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17334"><![CDATA[b06]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="228"><![CDATA[java.nio]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>