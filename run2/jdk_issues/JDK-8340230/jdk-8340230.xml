<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 09:20:18 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8340230] Tests crash: assert(is_in_encoding_range || k-&gt;is_interface() || k-&gt;is_abstract()) failed: sanity</title>
                <link>https://bugs.openjdk.org/browse/JDK-8340230</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Test compiler/arraycopy/TestObjectArrayClone.java&lt;br/&gt;
&lt;br/&gt;
CompileCommand: compileonly compiler/arraycopy/TestObjectArrayClone.testClone* bool compileonly = true&lt;br/&gt;
CompileCommand: compileonly jdk/internal/reflect/GeneratedMethodAccessor*.invoke bool compileonly = true&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/opt/mach5/mesos/work_dir/slaves/a4a7850a-7c35-410a-b879-d77fbb2f6087-S144935/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/1a4487ac-c1a9-48f2-a0e2-2fb14ee558dc/runs/2bb98958-12aa-4165-b8b3-ef1d44c4a59d/workspace/open/src/hotspot/share/ci/ciKlass.hpp:113), pid=1791476, tid=1791492&lt;br/&gt;
#  assert(is_in_encoding_range || k-&amp;gt;is_interface() || k-&amp;gt;is_abstract()) failed: sanity&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (24.0+16) (fastdebug build 24-ea+16-1711)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 24-ea+16-1711, mixed mode, compressed oops, g1 gc, linux-aarch64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x8b39c4]  Compile::final_graph_reshaping_main_switch(Node*, Final_Reshape_Counts&amp;amp;, unsigned int, Unique_Node_List&amp;amp;)+0x22b4&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x0000ffffa42a0da0):  JavaThread &amp;quot;C2 CompilerThread0&amp;quot; daemon [_thread_in_native, id=1791492, stack(0x0000ffff88aa8000,0x0000ffff88ca6000) (2040K)]&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C2:5081   29             compiler.arraycopy.TestObjectArrayClone::testCloneShortObjectArray (47 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x0000ffff88aa8000,0x0000ffff88ca6000],  sp=0x0000ffff88ca07c0,  free space=2017k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x8b39c4]  Compile::final_graph_reshaping_main_switch(Node*, Final_Reshape_Counts&amp;amp;, unsigned int, Unique_Node_List&amp;amp;)+0x22b4  (ciKlass.hpp:113)&lt;br/&gt;
V  [libjvm.so+0x8b4140]  Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;amp;, Unique_Node_List&amp;amp;) [clone .part.0]+0x160  (compile.cpp:3155)&lt;br/&gt;
V  [libjvm.so+0x8b49e8]  Compile::final_graph_reshaping_walk(Node_Stack&amp;amp;, Node*, Final_Reshape_Counts&amp;amp;, Unique_Node_List&amp;amp;)+0x148  (compile.cpp:3104)&lt;br/&gt;
V  [libjvm.so+0x8bfd08]  Compile::final_graph_reshaping()+0x4b8  (compile.cpp:4012)&lt;br/&gt;
V  [libjvm.so+0x8c1444]  Compile::Optimize()+0xb04  (compile.cpp:2486)&lt;br/&gt;
V  [libjvm.so+0x8c4150]  Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*)+0x14b0  (compile.cpp:852)&lt;br/&gt;
V  [libjvm.so+0x7187b0]  C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x17c  (c2compiler.cpp:142)&lt;br/&gt;
V  [libjvm.so+0x8cff94]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0x864  (compileBroker.cpp:2303)&lt;br/&gt;
V  [libjvm.so+0x8d0b44]  CompileBroker::compiler_thread_loop()+0x514  (compileBroker.cpp:1961)&lt;br/&gt;
V  [libjvm.so+0xd2ed70]  JavaThread::thread_main_inner()+0xcc  (javaThread.cpp:758)&lt;br/&gt;
V  [libjvm.so+0x15a9500]  Thread::call_run()+0xac  (thread.cpp:225)&lt;br/&gt;
V  [libjvm.so+0x12fc9f4]  thread_native_entry(Thread*)+0x130  (os_linux.cpp:858)&lt;br/&gt;
C  [libc.so.6+0x806b8]  start_thread+0x2d8</description>
                <environment></environment>
        <key id="5139201">JDK-8340230</key>
            <summary>Tests crash: assert(is_in_encoding_range || k-&gt;is_interface() || k-&gt;is_abstract()) failed: sanity</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mdoerr">Martin Doerr</assignee>
                                    <reporter username="dholmes">David Holmes</reporter>
                        <labels>
                            <label>c2</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk23u-fix-SQE-ok-next</label>
                            <label>jdk23u-fix-request</label>
                            <label>jdk23u-fix-yes</label>
                            <label>oracle-triage-24</label>
                            <label>regression</label>
                            <label>tier5</label>
                            <label>tier6</label>
                            <label>tier7</label>
                    </labels>
                <created>Mon, 16 Sep 2024 17:10:14 -0700</created>
                <updated>Fri, 24 Jan 2025 05:52:12 -0800</updated>
                            <resolved>Wed, 18 Sep 2024 01:29:23 -0700</resolved>
                                    <version>17</version>
                    <version>21</version>
                    <version>23</version>
                    <version>24</version>
                                    <fixVersion>24</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                                                                <comments>
                            <comment id="14707374" author="mdoerr" created="Tue, 24 Sep 2024 06:41:43 -0700"  >[jdk21u-dev, jdk17u-dev] Fix Request&lt;br/&gt;
Same as jdk23u-fix-request. Version from jdk23u applies cleanly. Tier 1-4 have passed on all SAP-supported platforms.</comment>
                            <comment id="14706999" author="roboduke" created="Mon, 23 Sep 2024 05:57:04 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2910&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2910&lt;/a&gt;&lt;br/&gt;
Date: 2024-09-23 12:49:54 +0000</comment>
                            <comment id="14706997" author="roboduke" created="Mon, 23 Sep 2024 05:54:34 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1001&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1001&lt;/a&gt;&lt;br/&gt;
Date: 2024-09-23 12:48:10 +0000</comment>
                            <comment id="14706507" author="roboduke" created="Fri, 20 Sep 2024 06:12:48 -0700"  >[jdk23u-fix-request] Approval Request from Martin&lt;br/&gt;
The failing assertion is not in 23u, but using DecodeN without CompressedOops or DecodeNKlass without CompressedClassPointers is a potential risk and can cause errors on some platforms. The fix is trivial and the backport has been reviewed. SAP&amp;#39;s nightly tests have passed and no regression has been observed.</comment>
                            <comment id="14705831" author="roboduke" created="Wed, 18 Sep 2024 04:10:27 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk23u/pull/104&quot;&gt;https://git.openjdk.org/jdk23u/pull/104&lt;/a&gt;&lt;br/&gt;
Date: 2024-09-18 11:02:19 +0000</comment>
                            <comment id="14705785" author="dukebot" created="Wed, 18 Sep 2024 01:29:22 -0700"  >Changeset: 3895b8fc&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Martin Doerr &amp;lt;&lt;a href=&apos;mailto:mdoerr@openjdk.org&apos;&gt;mdoerr@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-09-18 08:26:33 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/3895b8fc0b2c6d187080dba6fe08297adad4a480&quot;&gt;https://git.openjdk.org/jdk/commit/3895b8fc0b2c6d187080dba6fe08297adad4a480&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14705593" author="mdoerr" created="Tue, 17 Sep 2024 06:51:12 -0700"  >Thanks for verifying it! I&amp;#39;ll run it through our nightly tests and probably integrate it tomorrow. I will also consider backports to at least some OpenJDK LTS releases.</comment>
                            <comment id="14705586" author="thartmann" created="Tue, 17 Sep 2024 06:40:15 -0700"  >Testing is not all done yet but the relevant tests passed, so I&amp;#39;s say this is good to go.</comment>
                            <comment id="14705554" author="stefank" created="Tue, 17 Sep 2024 04:50:49 -0700"  >My previous reproducer stops reproducing the problem with the suggested patch.</comment>
                            <comment id="14705549" author="thartmann" created="Tue, 17 Sep 2024 04:04:15 -0700"  >Sure, I submitted testing and will report back once it passed.</comment>
                            <comment id="14705543" author="roboduke" created="Tue, 17 Sep 2024 03:52:54 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/21036&quot;&gt;https://git.openjdk.org/jdk/pull/21036&lt;/a&gt;&lt;br/&gt;
Date: 2024-09-17 10:45:09 +0000</comment>
                            <comment id="14705541" author="mdoerr" created="Tue, 17 Sep 2024 03:48:47 -0700"  >I couldn&amp;#39;t reproduce it on my machine. Can you verify the PR, please?&lt;br/&gt;
I think this fix is a candidate for backports regardless of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8340012&quot; title=&quot;[C2] assert(KlassEncodingMetaspaceMax &amp;gt; pd) failed: change encoding max if new encoding after 8338526&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8340012&quot;&gt;&lt;strike&gt;JDK-8340012&lt;/strike&gt;&lt;/a&gt;. It&amp;#39;s not a good thing if we get DecodeNNodes etc. when UseCompressedOops is off or DecodeNKlassNodes etc. when UseCompressedClassPointers is off.</comment>
                            <comment id="14705525" author="thartmann" created="Tue, 17 Sep 2024 03:10:38 -0700"  >Thanks Martin!</comment>
                            <comment id="14705522" author="mdoerr" created="Tue, 17 Sep 2024 03:04:38 -0700"  >The logic in compile.cpp doesn&amp;#39;t handle cases correctly in which exactly one of UseCompressedOops and UseCompressedClassPointers is enabled. &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8340012&quot; title=&quot;[C2] assert(KlassEncodingMetaspaceMax &amp;gt; pd) failed: change encoding max if new encoding after 8338526&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8340012&quot;&gt;&lt;strike&gt;JDK-8340012&lt;/strike&gt;&lt;/a&gt; only uncovered this problem.&lt;br/&gt;
The transformation should only be done for the part which is enabled, not for the other one. I&amp;#39;ll fix it.</comment>
                            <comment id="14705520" author="thartmann" created="Tue, 17 Sep 2024 03:02:16 -0700"  >ILW = Assert during C2 compilation (invalid assumption, recent regression), reproducible with -XX:-UseCompressedKlassPointers, no workaround but enable UseCompressedKlassPointers or disable compilation of affected method = HMM = P2</comment>
                            <comment id="14705515" author="thartmann" created="Tue, 17 Sep 2024 02:50:55 -0700"  >Martin, could you please have a look asap? Thanks.</comment>
                            <comment id="14705514" author="thartmann" created="Tue, 17 Sep 2024 02:49:24 -0700"  >It&amp;#39;s a regression from &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8340012&quot; title=&quot;[C2] assert(KlassEncodingMetaspaceMax &amp;gt; pd) failed: change encoding max if new encoding after 8338526&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8340012&quot;&gt;&lt;strike&gt;JDK-8340012&lt;/strike&gt;&lt;/a&gt;.</comment>
                            <comment id="14705475" author="dholmes" created="Tue, 17 Sep 2024 00:43:01 -0700"  >Also test serviceability/dcmd/vm/ClassLoaderStatsTest.java#id1&lt;br/&gt;
&lt;br/&gt;
</comment>
                            <comment id="14705472" author="stefank" created="Tue, 17 Sep 2024 00:32:59 -0700"  >We crash here:&lt;br/&gt;
We crash in this code:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if ((UseCompressedOops || UseCompressedClassPointers) &amp;amp;&amp;amp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;addp-&amp;gt;Opcode() == Op_ConP &amp;amp;&amp;amp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;addp == n-&amp;gt;in(AddPNode::Base) &amp;amp;&amp;amp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;n-&amp;gt;in(AddPNode::Offset)-&amp;gt;is_Con()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// If the transformation of ConP to ConN+DecodeN is beneficial depends&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// on the platform and on the compressed oops mode.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// Use addressing with narrow klass to load with offset on x86.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// Some platforms can use the constant pool to load ConP.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// Do this transformation here since IGVN will convert ConN back to ConP.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;const Type* t = addp-&amp;gt;bottom_type();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;bool is_oop   = t-&amp;gt;isa_oopptr() != nullptr;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;bool is_klass = t-&amp;gt;isa_klassptr() != nullptr;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if ((is_oop   &amp;amp;&amp;amp; Matcher::const_oop_prefer_decode()  ) ||&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(is_klass &amp;amp;&amp;amp; Matcher::const_klass_prefer_decode() &amp;amp;&amp;amp; t-&amp;gt;isa_klassptr()-&amp;gt;exact_klass()-&amp;gt;is_in_encoding_range())) {&lt;br/&gt;
&lt;br/&gt;
on the last line because the code seems to assume that we are running UseCompressedKlassPointers.&lt;br/&gt;
</comment>
                            <comment id="14705465" author="stefank" created="Tue, 17 Sep 2024 00:20:02 -0700"  >I ca reproduce this even with &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8340184&quot; title=&quot;Bug in CompressedKlassPointers::is_in_encodable_range&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8340184&quot;&gt;&lt;strike&gt;JDK-8340184&lt;/strike&gt;&lt;/a&gt;. Note that the test fails when we turn off UseCompressedKlassPointers.</comment>
                            <comment id="14705374" author="dholmes" created="Mon, 16 Sep 2024 17:50:51 -0700"  >Also test:  compiler/unsafe/OpaqueAccesses.java&lt;br/&gt;
&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/opt/mach5/mesos/work_dir/slaves/a4a7850a-7c35-410a-b879-d77fbb2f6087-S144935/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/1a4487ac-c1a9-48f2-a0e2-2fb14ee558dc/runs/2bb98958-12aa-4165-b8b3-ef1d44c4a59d/workspace/open/src/hotspot/share/ci/ciKlass.hpp:113), pid=1708675, tid=1708691&lt;br/&gt;
#  assert(is_in_encoding_range || k-&amp;gt;is_interface() || k-&amp;gt;is_abstract()) failed: sanity&lt;br/&gt;
#&lt;br/&gt;
# JRE version: Java(TM) SE Runtime Environment (24.0+16) (fastdebug build 24-ea+16-1711)&lt;br/&gt;
# Java VM: Java HotSpot(TM) 64-Bit Server VM (fastdebug 24-ea+16-1711, mixed mode, compressed oops, g1 gc, linux-aarch64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x8b39c4]  Compile::final_graph_reshaping_main_switch(Node*, Final_Reshape_Counts&amp;amp;, unsigned int, Unique_Node_List&amp;amp;)+0x22b4&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x0000ffffa83fade0):  JavaThread &amp;quot;C2 CompilerThread0&amp;quot; daemon [_thread_in_native, id=1708691, stack(0x0000ffff7b208000,0x0000ffff7b406000) (2040K)]&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C2:396   70    b        java.util.HashMap::putVal (300 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x0000ffff7b208000,0x0000ffff7b406000],  sp=0x0000ffff7b400930,  free space=2018k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x8b39c4]  Compile::final_graph_reshaping_main_switch(Node*, Final_Reshape_Counts&amp;amp;, unsigned int, Unique_Node_List&amp;amp;)+0x22b4  (ciKlass.hpp:113)&lt;br/&gt;
V  [libjvm.so+0x8b4140]  Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;amp;, Unique_Node_List&amp;amp;) [clone .part.0]+0x160  (compile.cpp:3155)&lt;br/&gt;
V  [libjvm.so+0x8b49e8]  Compile::final_graph_reshaping_walk(Node_Stack&amp;amp;, Node*, Final_Reshape_Counts&amp;amp;, Unique_Node_List&amp;amp;)+0x148  (compile.cpp:3104)&lt;br/&gt;
V  [libjvm.so+0x8bfd08]  Compile::final_graph_reshaping()+0x4b8  (compile.cpp:4012)&lt;br/&gt;
V  [libjvm.so+0x8c1444]  Compile::Optimize()+0xb04  (compile.cpp:2486)&lt;br/&gt;
V  [libjvm.so+0x8c4150]  Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*)+0x14b0  (compile.cpp:852)&lt;br/&gt;
V  [libjvm.so+0x7187b0]  C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x17c  (c2compiler.cpp:142)&lt;br/&gt;
V  [libjvm.so+0x8cff94]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0x864  (compileBroker.cpp:2303)&lt;br/&gt;
V  [libjvm.so+0x8d0b44]  CompileBroker::compiler_thread_loop()+0x514  (compileBroker.cpp:1961)&lt;br/&gt;
V  [libjvm.so+0xd2ed70]  JavaThread::thread_main_inner()+0xcc  (javaThread.cpp:758)&lt;br/&gt;
V  [libjvm.so+0x15a9500]  Thread::call_run()+0xac  (thread.cpp:225)&lt;br/&gt;
V  [libjvm.so+0x12fc9f4]  thread_native_entry(Thread*)+0x130  (os_linux.cpp:858)&lt;br/&gt;
C  [libpthread.so.0+0x7950]  start_thread+0x190</comment>
                            <comment id="14705365" author="dholmes" created="Mon, 16 Sep 2024 17:13:14 -0700"  >May also be related to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8340012&quot; title=&quot;[C2] assert(KlassEncodingMetaspaceMax &amp;gt; pd) failed: change encoding max if new encoding after 8338526&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8340012&quot;&gt;&lt;strike&gt;JDK-8340012&lt;/strike&gt;&lt;/a&gt;</comment>
                            <comment id="14705363" author="dholmes" created="Mon, 16 Sep 2024 17:10:37 -0700"  >Unclear if this could be the issue described by &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8340184&quot; title=&quot;Bug in CompressedKlassPointers::is_in_encodable_range&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8340184&quot;&gt;&lt;strike&gt;JDK-8340184&lt;/strike&gt;&lt;/a&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5139919">JDK-8340886</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5140519">JDK-8341410</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5139662">JDK-8340644</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5140494">JDK-8341388</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5138945">JDK-8340012</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5139143">JDK-8340184</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5136936">JDK-8338526</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i37xqr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17312"><![CDATA[b16]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>