<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 09:49:43 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8339542] compiler/codecache/CheckSegmentedCodeCache.java fails</title>
                <link>https://bugs.openjdk.org/browse/JDK-8339542</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>From &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8326615&quot; title=&quot;C1/C2 don&amp;#39;t handle allocation failure properly during initialization (RuntimeStub::new_runtime_stub fatal crash)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8326615&quot;&gt;&lt;strike&gt;JDK-8326615&lt;/strike&gt;&lt;/a&gt;, [~mbaesken]&amp;#39;s comment:&lt;br/&gt;
We see now errors in the test compiler/codecache/CheckSegmentedCodeCache.java on platform linuxppc64le , fastdebug . Is this related ?&lt;br/&gt;
&lt;br/&gt;
stdout: [Error occurred during initialization of VM&lt;br/&gt;
Not enough space in non-nmethod code heap to run VM: 5120K &amp;lt; 5226K&lt;br/&gt;
];&lt;br/&gt;
stderr: []&lt;br/&gt;
exitValue = 1&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
java.lang.RuntimeException: &amp;#39;Invalid code heap sizes&amp;#39; missing from stdout/stderr&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.test.lib.process.OutputAnalyzer.shouldContain(OutputAnalyzer.java:252)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at compiler.codecache.CheckSegmentedCodeCache.failsWith(CheckSegmentedCodeCache.java:81)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at compiler.codecache.CheckSegmentedCodeCache.main(CheckSegmentedCodeCache.java:186)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.lang.reflect.Method.invoke(Method.java:573)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at com.sun.javatest.regtest.agent.MainWrapper$MainTask.run(MainWrapper.java:138)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.lang.Thread.run(Thread.java:1575)</description>
                <environment></environment>
        <key id="5138411">JDK-8339542</key>
            <summary>compiler/codecache/CheckSegmentedCodeCache.java fails</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="lucy">Lutz Schmidt</assignee>
                                    <reporter username="dfenacci">Damon Fenacci</reporter>
                        <labels>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>noreg-self</label>
                            <label>oracle-triage-24</label>
                            <label>regression</label>
                    </labels>
                <created>Wed, 4 Sep 2024 06:35:03 -0700</created>
                <updated>Mon, 13 Jan 2025 07:33:00 -0800</updated>
                            <resolved>Thu, 26 Sep 2024 04:48:18 -0700</resolved>
                                    <version>21</version>
                    <version>24</version>
                                    <fixVersion>24</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                                                                <comments>
                            <comment id="14737421" author="roboduke" created="Fri, 10 Jan 2025 09:38:42 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1318&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1318&lt;/a&gt;&lt;br/&gt;
Date: 2025-01-10 17:31:00 +0000</comment>
                            <comment id="14737419" author="goetz" created="Fri, 10 Jan 2025 09:29:39 -0800"  >Fix request [21u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 21.0.7-oracle.&lt;br/&gt;
No risk, only a test change&lt;br/&gt;
Clean backport.&lt;br/&gt;
Test passes. SAP nighlty testing passed.</comment>
                            <comment id="14708124" author="dukebot" created="Thu, 26 Sep 2024 04:48:17 -0700"  >Changeset: 777c20cb&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Lutz Schmidt &amp;lt;&lt;a href=&apos;mailto:lucy@openjdk.org&apos;&gt;lucy@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-09-26 11:45:09 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/777c20cb14010b6726834246ae4c61bc4ccb3f9b&quot;&gt;https://git.openjdk.org/jdk/commit/777c20cb14010b6726834246ae4c61bc4ccb3f9b&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14708028" author="roboduke" created="Wed, 25 Sep 2024 23:36:07 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/21179&quot;&gt;https://git.openjdk.org/jdk/pull/21179&lt;/a&gt;&lt;br/&gt;
Date: 2024-09-25 10:37:59 +0000</comment>
                            <comment id="14707822" author="JIRAUSER20518" created="Wed, 25 Sep 2024 06:38:28 -0700"  >Thanks for looking into this [~lucy]].&lt;br/&gt;
I&amp;#39;ve assigned it to you.</comment>
                            <comment id="14707783" author="lucy" created="Wed, 25 Sep 2024 03:58:32 -0700"  >Due to a previous fix, 5M is no longer sufficiently large for NonNMethodCodeHeapSize. There is a draft PR currently being tested. </comment>
                            <comment id="14704533" author="shade" created="Thu, 12 Sep 2024 06:41:40 -0700"  >I attached the output of this command:&lt;br/&gt;
&lt;br/&gt;
$ build/linux-aarch64-server-fastdebug/images/jdk/bin/java -XX:+SegmentedCodeCache -XX:ReservedCodeCacheSize=10M -XX:NonNMethodCodeHeapSize=5M -XX:ProfiledCodeHeapSize=5M -XX:NonProfiledCodeHeapSize=5M -XX:+PrintFlagsInitial &amp;gt; ~/aarch64-initial.txt&lt;br/&gt;
&lt;br/&gt;
Without -XX:+PrintFlagsInitial, it fails with the same message as the test.</comment>
                            <comment id="14704527" author="JIRAUSER20518" created="Thu, 12 Sep 2024 06:24:00 -0700"  >Thanks for the details [~shade].&lt;br/&gt;
I think there is actually an issue with the fix for &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8326615&quot; title=&quot;C1/C2 don&amp;#39;t handle allocation failure properly during initialization (RuntimeStub::new_runtime_stub fatal crash)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8326615&quot;&gt;&lt;strike&gt;JDK-8326615&lt;/strike&gt;&lt;/a&gt; at line 251 (&lt;a href=&quot;https://github.com/openjdk/jdk/blob/master/src/hotspot/share/code/codeCache.cpp#L251&quot;&gt;https://github.com/openjdk/jdk/blob/master/src/hotspot/share/code/codeCache.cpp#L251&lt;/a&gt;)&lt;br/&gt;
when calculating &amp;#39;size_t non_nmethod_min_size = min_cache_size + compiler_buffer_size;&amp;#39;  (min_cache_size already includes the compiler_buffer_size).&lt;br/&gt;
I wanted to check if that was the case but unfortunately I cannot find a way to reproduce your issue. Could you add the -XX:+PrintFlagsInitial flag to the failing test and attach it to this bug please? &lt;br/&gt;
Thanks a lot!&lt;br/&gt;
</comment>
                            <comment id="14704336" author="shade" created="Wed, 11 Sep 2024 11:19:08 -0700"  >I have seen this test failure while running `all` tests. The only test that was failing is compiler/codecache/CheckSegmentedCodeCache.java. Retested on current tip (d9fdf69c34c20e0f2d526c2f04450acb904c3e80), test fails without any additional flags.&lt;br/&gt;
&lt;br/&gt;
% CONF=linux-x86_64-server-fastdebug make images test TEST=compiler/codecache/CheckSegmentedCodeCache.java&lt;br/&gt;
&lt;br/&gt;
STDERR:&lt;br/&gt;
&amp;nbsp;stdout: [Error occurred during initialization of VM&lt;br/&gt;
Not enough space in non-nmethod code heap to run VM: 5120K &amp;lt; 5226K&lt;br/&gt;
];&lt;br/&gt;
&amp;nbsp;stderr: []&lt;br/&gt;
&amp;nbsp;exitValue = 1&lt;br/&gt;
&lt;br/&gt;
java.lang.RuntimeException: &amp;#39;Invalid code heap sizes&amp;#39; missing from stdout/stderr&lt;br/&gt;
&lt;br/&gt;
% CONF=linux-aarch64-server-fastdebug make images test TEST=compiler/codecache/CheckSegmentedCodeCache.java &lt;br/&gt;
&lt;br/&gt;
STDERR:&lt;br/&gt;
&amp;nbsp;stdout: [Error occurred during initialization of VM&lt;br/&gt;
Not enough space in non-nmethod code heap to run VM: 5120K &amp;lt; 5226K&lt;br/&gt;
];&lt;br/&gt;
&amp;nbsp;stderr: []&lt;br/&gt;
&amp;nbsp;exitValue = 1&lt;br/&gt;
&lt;br/&gt;
java.lang.RuntimeException: &amp;#39;Invalid code heap sizes&amp;#39; missing from stdout/stderr</comment>
                            <comment id="14704324" author="kvn" created="Wed, 11 Sep 2024 10:43:49 -0700"  >Yes, it is important since each platform has own limits.&lt;br/&gt;
An other question: which tests and with what flags failed for you?&lt;br/&gt;
</comment>
                            <comment id="14704321" author="shade" created="Wed, 11 Sep 2024 10:39:27 -0700"  >Similar to reported above: &amp;quot;Not enough space in non-nmethod code heap to run VM: XXXXK &amp;lt; YYYYK&amp;quot;. I have not captured the exact XXXX and YYYY, can re-run, if that is important.</comment>
                            <comment id="14704318" author="kvn" created="Wed, 11 Sep 2024 10:33:14 -0700"  >[~shade] What is your error outputs?</comment>
                            <comment id="14704149" author="shade" created="Wed, 11 Sep 2024 01:54:56 -0700"  >Seeing this in local testing on linux-aarch64-server-fastdebug and linux-x86_64-server-fastdebug as well.</comment>
                            <comment id="14702947" author="thartmann" created="Wed, 4 Sep 2024 23:19:26 -0700"  >ILW = Test fails due to out of code cache space (test bug), single test on ppc, no workaround = MLH = P4</comment>
                            <comment id="14702805" author="mdoerr" created="Wed, 4 Sep 2024 06:44:52 -0700"  >-XX:NonNMethodCodeHeapSize=5M is a bit too small for the (fast)debug build. Using 6M seems to help.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5147350">JDK-8347111</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5147894">JDK-8347593</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5132200">JDK-8334564</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5122332">JDK-8326615</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="111201" name="CheckSegmentedCodeCache.java.log" size="23110" author="syan" created="Mon, 23 Sep 2024 18:13:20 -0700"/>
                            <attachment id="111042" name="aarch64-initial.txt" size="126636" author="shade" created="Thu, 12 Sep 2024 06:41:00 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10004" key="com.atlassian.jira.plugin.system.customfieldtypes:version">
                        <customfieldname>Introduced In Version</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="24300">24</customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i37svn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17354"><![CDATA[b18]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>