<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 09:13:10 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8337331] crash: pinned virtual thread will lead to jvm crash when running with the javaagent option</title>
                <link>https://bugs.openjdk.org/browse/JDK-8337331</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>JDK HEAD commit: 476d2ae69d6&lt;br/&gt;
&lt;br/&gt;
Testcase:&lt;br/&gt;
1. Add javaagent which will change the class file (CFLH will be touched)&lt;br/&gt;
2. A virtual thread need to be pinned&lt;br/&gt;
3. Add the option `-Djdk.tracePinnedThreads=full`&lt;br/&gt;
I add the testcase in the attachment.&lt;br/&gt;
I think this and &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8330146&quot; title=&quot;assert(!_thread-&amp;gt;is_in_any_VTMS_transition()) failed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8330146&quot;&gt;&lt;strike&gt;JDK-8330146&lt;/strike&gt;&lt;/a&gt;  should be backport for JDK21. JDK21 will run into deadlock now.&lt;br/&gt;
Update: I pull some new commits and now HEAD is 657c0bddf90. The release version will run into deadlock instead of causing jvm crash. The slowdebug version will run into jvm crash.&lt;br/&gt;
&lt;br/&gt;
Cause:&lt;br/&gt;
When the virtual thread is pinned, it will use the class `PinnedThreadPrinter` to report. When loading this class, javaagent will change its content and post the CFLH. However, JvmtiClassFileLoadHookPoster should not call `post` for vthreads which are in VTMS transition.&lt;br/&gt;
&lt;br/&gt;
Solution:&lt;br/&gt;
Add condition judegement for `JvmtiClassFileLoadHookPoster::post`&lt;br/&gt;
&lt;br/&gt;
The crash log:&lt;br/&gt;
&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  SIGSEGV (0xb) at pc=0x00007f861178c8b1, pid=41748, tid=41772&lt;br/&gt;
#&lt;br/&gt;
# JRE version: OpenJDK Runtime Environment (24.0) (build 24-internal-adhoc.tjw378335.jdk)&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM (24-internal-adhoc.tjw378335.jdk, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x2f58b1]  AccessInternal::PostRuntimeDispatch&amp;lt;G1BarrierSet::AccessBarrier&amp;lt;548964ul, G1BarrierSet&amp;gt;, (AccessInternal::BarrierType)2, 548964ul&amp;gt;::oop_access_barrier(void*)+0x1&lt;br/&gt;
#&lt;br/&gt;
# No core dump will be written. Core dumps have been disabled. To enable core dumping, try &amp;quot;ulimit -c unlimited&amp;quot; before starting Java again&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
#   &lt;a href=&quot;https://bugreport.java.com/bugreport/crash.jsp&quot;&gt;https://bugreport.java.com/bugreport/crash.jsp&lt;/a&gt;&lt;br/&gt;
#&lt;br/&gt;
&lt;br/&gt;
---------------  S U M M A R Y ------------&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Host: Intel(R) Xeon(R) Platinum 8163 CPU @ 2.50GHz, 96 cores, 503G, Alibaba Group Enterprise Linux Server release 7.2 (Paladin)&lt;br/&gt;
Time: Mon Jul 29 15:08:54 2024 CST elapsed time: 0.128565 seconds (0d 0h 0m 0s)&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x00007f8528061400):  JavaThread &amp;quot;pool-1-thread-1&amp;quot;        [_thread_in_vm, id=41772, stack(0x00007f85ab13a000,0x00007f85ab23b000) (1028K)]&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f85ab13a000,0x00007f85ab23b000],  sp=0x00007f85ab237c10,  free space=1015k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x2f58b1]  AccessInternal::PostRuntimeDispatch&amp;lt;G1BarrierSet::AccessBarrier&amp;lt;548964ul, G1BarrierSet&amp;gt;, (AccessInternal::BarrierType)2, 548964ul&amp;gt;::oop_access_barrier(void*)+0x1  (access.inline.hpp:81)&lt;br/&gt;
V  [libjvm.so+0xb2e933]  JvmtiClassFileLoadHookPoster::post_to_env(JvmtiEnv*, bool)+0x163  (jvmtiExport.cpp:270)&lt;br/&gt;
V  [libjvm.so+0xb23ce5]  JvmtiExport::post_class_file_load_hook(Symbol*, Handle, Handle, unsigned char**, unsigned char**, JvmtiCachedClassFileData**)+0x1d5  (jvmtiExport.cpp:987)&lt;br/&gt;
V  [libjvm.so+0xb53c26]  KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;amp;, JavaThread*)+0x176  (klassFactory.cpp:148)&lt;br/&gt;
V  [libjvm.so+0x62e33e]  ClassLoader::load_class(Symbol*, PackageEntry*, bool, JavaThread*)+0x24e  (classLoader.cpp:1205)&lt;br/&gt;
V  [libjvm.so+0xf707f5]  SystemDictionary::load_instance_class_impl(Symbol*, Handle, JavaThread*)+0x235  (systemDictionary.cpp:1279)&lt;br/&gt;
V  [libjvm.so+0xf6f148]  SystemDictionary::load_instance_class(Symbol*, Handle, JavaThread*)+0x18  (systemDictionary.cpp:1343)&lt;br/&gt;
V  [libjvm.so+0xf6f80f]  SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, JavaThread*)+0x5ef  (systemDictionary.cpp:702)&lt;br/&gt;
V  [libjvm.so+0xf6fc50]  SystemDictionary::resolve_or_null(Symbol*, Handle, Handle, JavaThread*)+0x40  (systemDictionary.cpp:343)&lt;br/&gt;
V  [libjvm.so+0xf6fdae]  SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, JavaThread*)+0x1e  (systemDictionary.cpp:321)&lt;br/&gt;
V  [libjvm.so+0x6b2616]  ConstantPool::klass_ref_at(int, Bytecodes::Code, JavaThread*)+0x296  (constantPool.cpp:599)&lt;br/&gt;
V  [libjvm.so+0xb83726]  LinkInfo::LinkInfo(constantPoolHandle const&amp;amp;, int, Bytecodes::Code, JavaThread*)+0x46  (linkResolver.cpp:278)&lt;br/&gt;
V  [libjvm.so+0xb8fcaa]  LinkResolver::resolve_invoke(CallInfo&amp;amp;, Handle, constantPoolHandle const&amp;amp;, int, Bytecodes::Code, JavaThread*)+0x28a  (linkResolver.cpp:1745)&lt;br/&gt;
V  [libjvm.so+0x9155e6]  InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code)+0x1c6  (interpreterRuntime.cpp:842)&lt;br/&gt;
V  [libjvm.so+0x915ab5]  InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code)+0xd5  (interpreterRuntime.cpp:1004)&lt;br/&gt;
j  java.lang.VirtualThread$VThreadContinuation.onPinned(Ljdk/internal/vm/Continuation$Pinned;)V+42 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.vm.Continuation.onPinned0(I)V+5 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.vm.Continuation.yield0(Ljdk/internal/vm/ContinuationScope;Ljdk/internal/vm/Continuation;)Z+325 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.vm.Continuation.yield(Ljdk/internal/vm/ContinuationScope;)Z+69 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread.yieldContinuation()Z+8 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread.parkNanos(J)V+64 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread.sleepNanos(J)V+70 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.Thread.sleepNanos(J)V+26 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.Thread.sleep(J)V+25 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  TestPinCaseWithTrace.native2Java(I)I+11&lt;br/&gt;
v  ~StubRoutines::call_stub 0x00007f85fb9b5c86&lt;br/&gt;
V  [libjvm.so+0x91e014]  JavaCalls::call_helper(JavaValue*, methodHandle const&amp;amp;, JavaCallArguments*, JavaThread*)+0x2f4  (javaCalls.cpp:415)&lt;br/&gt;
V  [libjvm.so+0x9d3241]  jni_invoke_static(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, JavaThread*) [clone .isra.148] [clone .constprop.253]+0x161  (jni.cpp:888)&lt;br/&gt;
V  [libjvm.so+0x9d3d5f]  jni_CallStaticIntMethod+0x14f  (jni.cpp:1580)&lt;br/&gt;
C  [libPinJNI.so+0x677]  Java_TestPinCaseWithTrace_nativeFuncPin+0x47  (libPinJNI.c:29)&lt;br/&gt;
j  TestPinCaseWithTrace.nativeFuncPin(I)I+0&lt;br/&gt;
j  TestPinCaseWithTrace.lambda$main$0()V+4&lt;br/&gt;
j  TestPinCaseWithTrace$$Lambda+0x00007f856b003438.run()V+0&lt;br/&gt;
j  java.lang.Thread.runWith(Ljava/lang/Object;Ljava/lang/Runnable;)V+5 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread.run(Ljava/lang/Runnable;)V+66 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread$VThreadContinuation$1.run()V+8 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.vm.Continuation.enter0()V+4 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.vm.Continuation.enter(Ljdk/internal/vm/Continuation;Z)V+1 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
J 240  jdk.internal.vm.Continuation.enterSpecial(Ljdk/internal/vm/Continuation;ZZ)V &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt; (0 bytes) @ 0x00007f85fc22445c [0x00007f85fc224320+0x000000000000013c]&lt;br/&gt;
j  jdk.internal.vm.Continuation.run()V+122 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread.runContinuation()V+72 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread$$Lambda+0x00007f856b064cb8.run()V+4 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ThreadPoolExecutor.runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V+92 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ThreadPoolExecutor$Worker.run()V+5 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.Thread.runWith(Ljava/lang/Object;Ljava/lang/Runnable;)V+5 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.Thread.run()V+19 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x00007f85fb9b5c86&lt;br/&gt;
V  [libjvm.so+0x91e014]  JavaCalls::call_helper(JavaValue*, methodHandle const&amp;amp;, JavaCallArguments*, JavaThread*)+0x2f4  (javaCalls.cpp:415)&lt;br/&gt;
V  [libjvm.so+0x91fc43]  JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, JavaThread*)+0x223  (javaCalls.cpp:329)&lt;br/&gt;
V  [libjvm.so+0x9fa5d3]  thread_entry(JavaThread*, JavaThread*)+0x73  (jvm.cpp:2910)&lt;br/&gt;
V  [libjvm.so+0x937c0c]  JavaThread::run()+0x15c  (javaThread.cpp:757)&lt;br/&gt;
V  [libjvm.so+0xfbd18f]  Thread::call_run()+0x9f  (thread.cpp:225)&lt;br/&gt;
V  [libjvm.so+0xd160aa]  thread_native_entry(Thread*)+0xda  (os_linux.cpp:858)&lt;br/&gt;
Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)&lt;br/&gt;
j  java.lang.VirtualThread$VThreadContinuation.onPinned(Ljdk/internal/vm/Continuation$Pinned;)V+42 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.vm.Continuation.onPinned0(I)V+5 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.vm.Continuation.yield0(Ljdk/internal/vm/ContinuationScope;Ljdk/internal/vm/Continuation;)Z+325 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.vm.Continuation.yield(Ljdk/internal/vm/ContinuationScope;)Z+69 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread.yieldContinuation()Z+8 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread.parkNanos(J)V+64 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread.sleepNanos(J)V+70 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.Thread.sleepNanos(J)V+26 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.Thread.sleep(J)V+25 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  TestPinCaseWithTrace.native2Java(I)I+11&lt;br/&gt;
v  ~StubRoutines::call_stub 0x00007f85fb9b5c86&lt;br/&gt;
j  TestPinCaseWithTrace.nativeFuncPin(I)I+0&lt;br/&gt;
j  TestPinCaseWithTrace.lambda$main$0()V+4&lt;br/&gt;
j  TestPinCaseWithTrace$$Lambda+0x00007f856b003438.run()V+0&lt;br/&gt;
j  java.lang.Thread.runWith(Ljava/lang/Object;Ljava/lang/Runnable;)V+5 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread.run(Ljava/lang/Runnable;)V+66 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread$VThreadContinuation$1.run()V+8 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.vm.Continuation.enter0()V+4 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  jdk.internal.vm.Continuation.enter(Ljdk/internal/vm/Continuation;Z)V+1 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
J 240  jdk.internal.vm.Continuation.enterSpecial(Ljdk/internal/vm/Continuation;ZZ)V &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt; (0 bytes) @ 0x00007f85fc22445c [0x00007f85fc224320+0x000000000000013c]&lt;br/&gt;
j  jdk.internal.vm.Continuation.run()V+122 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread.runContinuation()V+72 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.VirtualThread$$Lambda+0x00007f856b064cb8.run()V+4 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ThreadPoolExecutor.runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V+92 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.util.concurrent.ThreadPoolExecutor$Worker.run()V+5 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.Thread.runWith(Ljava/lang/Object;Ljava/lang/Runnable;)V+5 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
j  java.lang.Thread.run()V+19 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
v  ~StubRoutines::call_stub 0x00007f85fb9b5c86&lt;br/&gt;
&lt;br/&gt;
---------------  Dead Lock Stack Trace (the other condition)  ------------&lt;br/&gt;
The deadlock related stacktrace:&lt;br/&gt;
&lt;br/&gt;
Thread 24 &amp;quot;pool-1-thread-1&amp;quot; hit Breakpoint 5, JvmtiVTMSTransitionDisabler::JvmtiVTMSTransitionDisabler (this=0x7fff8fde5940, thread=0x0) at src/hotspot/share/prims/jvmtiThreadState.cpp:256&lt;br/&gt;
256     JvmtiVTMSTransitionDisabler::JvmtiVTMSTransitionDisabler(jthread thread)&lt;br/&gt;
(gdb) bt&lt;br/&gt;
#0  JvmtiVTMSTransitionDisabler::JvmtiVTMSTransitionDisabler (this=0x7fff8fde5940, thread=0x0) at src/hotspot/share/prims/jvmtiThreadState.cpp:256&lt;br/&gt;
#1  0x00007ffff64c691d in JvmtiEnv::SetThreadLocalStorage (this=this@entry=0x7ffff001a2a0, thread=thread@entry=0x0, data=data@entry=0x7effc0bb) at src/hotspot/share/prims/jvmtiEnv.cpp:152&lt;br/&gt;
#2  0x00007ffff6479b8e in jvmti_SetThreadLocalStorage (env=0x7ffff001a2a0, thread=0x0, data=0x7effc0bb) at build/linux-x86_64-server-release/hotspot/variant-server/gensrc/jvmtifiles/jvmtiEnter.cpp:1049&lt;br/&gt;
#3  0x00007ffff508ab0f in confirmingTLSSet (jvmtienv=jvmtienv@entry=0x7ffff001a2a0, thread=thread@entry=0x0, newValue=newValue@entry=0x7effc0bb) at src/java.instrument/share/native/libinstrument/Reentrancy.c:73&lt;br/&gt;
#4  0x00007ffff508abbc in tryToAcquireReentrancyToken (jvmtienv=0x7ffff001a2a0, thread=thread@entry=0x0) at src/java.instrument/share/native/libinstrument/Reentrancy.c:130&lt;br/&gt;
#5  0x00007ffff50883c2 in transformClassFile (agent=0x7ffff001a8e0, jnienv=jnienv@entry=0x7ffff02a89a0, loaderObject=loaderObject@entry=0x0, name=name@entry=0x7fff24105478 &amp;quot;java/lang/PinnedThreadPrinter&amp;quot;, &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;classBeingRedefined=classBeingRedefined@entry=0x0, protectionDomain=protectionDomain@entry=0x0, class_data_len=8100, class_data=0x7fff241034a0 &amp;quot;\312\376\272\276&amp;quot;, new_class_data_len=0x7fff8fde5c64, new_class_data=0x7fff8fde5c68, &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;is_retransformer=0 &amp;#39;\000&amp;#39;) at src/java.instrument/share/native/libinstrument/JPLISAgent.c:829&lt;br/&gt;
#6  0x00007ffff50872ef in eventHandlerClassFileLoadHook (jvmtienv=&amp;lt;optimized out&amp;gt;, jnienv=0x7ffff02a89a0, class_being_redefined=0x0, loader=0x0, name=0x7fff24105478 &amp;quot;java/lang/PinnedThreadPrinter&amp;quot;, protectionDomain=0x0, &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;class_data_len=8100, class_data=0x7fff241034a0 &amp;quot;\312\376\272\276&amp;quot;, new_class_data_len=0x7fff8fde5c64, new_class_data=0x7fff8fde5c68) at src/java.instrument/share/native/libinstrument/InvocationAdapter.c:650&lt;br/&gt;
#7  0x00007ffff64ec742 in JvmtiClassFileLoadHookPoster::post_to_env (this=0x7fff8fde5d80, env=0x7ffff001a2a0, caching_needed=&amp;lt;optimized out&amp;gt;) at src/hotspot/share/prims/jvmtiExport.cpp:1014&lt;br/&gt;
#8  0x00007ffff64e1965 in JvmtiClassFileLoadHookPoster::post_all_envs (this=0x7fff8fde5d80) at src/hotspot/share/prims/jvmtiExport.cpp:987&lt;br/&gt;
#9  JvmtiClassFileLoadHookPoster::post (this=0x7fff8fde5d80) at src/hotspot/share/prims/jvmtiExport.cpp:971&lt;br/&gt;
#10 JvmtiExport::post_class_file_load_hook (h_name=h_name@entry=0x7fffac09c2d8, class_loader=..., h_protection_domain=..., data_ptr=data_ptr@entry=0x7fff8fde5e90, end_ptr=end_ptr@entry=0x7fff8fde5e98, &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cache_ptr=cache_ptr@entry=0x7fff8fde5e88) at src/hotspot/share/prims/jvmtiExport.cpp:1105&lt;br/&gt;
#11 0x00007ffff65119d6 in check_class_file_load_hook (__the_thread__=0x7ffff02a85e0, cached_class_file=0x7fff8fde5e88, protection_domain=..., loader_data=0x7ffff0205b60, name=0x7fffac09c2d8, stream=0x7fff24105448)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at src/hotspot/share/classfile/klassFactory.cpp:148&lt;br/&gt;
#12 KlassFactory::create_from_stream (stream=0x7fff24105448, name=name@entry=0x7fffac09c2d8, loader_data=0x7ffff0205b60, cl_info=..., __the_thread__=__the_thread__@entry=0x7ffff02a85e0)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at src/hotspot/share/classfile/klassFactory.cpp:189&lt;br/&gt;
#13 0x00007ffff5fea6de in ClassLoader::load_class (name=name@entry=0x7fffac09c2d8, pkg_entry=pkg_entry@entry=0x7ffff02128e0, search_append_only=search_append_only@entry=false, __the_thread__=__the_thread__@entry=0x7ffff02a85e0)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at src/hotspot/share/classfile/classLoader.cpp:1205&lt;br/&gt;
#14 0x00007ffff6928a35 in SystemDictionary::load_instance_class_impl (class_name=class_name@entry=0x7fffac09c2d8, class_loader=..., __the_thread__=__the_thread__@entry=0x7ffff02a85e0)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at src/hotspot/share/classfile/systemDictionary.cpp:1279&lt;br/&gt;
#15 0x00007ffff6927388 in SystemDictionary::load_instance_class (name=name@entry=0x7fffac09c2d8, class_loader=class_loader@entry=..., __the_thread__=__the_thread__@entry=0x7ffff02a85e0)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at src/hotspot/share/classfile/systemDictionary.cpp:1343&lt;br/&gt;
#16 0x00007ffff6927a4f in SystemDictionary::resolve_instance_class_or_null (name=name@entry=0x7fffac09c2d8, class_loader=..., &lt;a href=&apos;mailto:class_loader@entry&apos;&gt;class_loader@entry&lt;/a&gt;=..., protection_domain=..., __the_thread__=0x7ffff02a85e0)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at src/hotspot/share/classfile/systemDictionary.cpp:702&lt;br/&gt;
#17 0x00007ffff6927e90 in SystemDictionary::resolve_or_null (class_name=class_name@entry=0x7fffac09c2d8, class_loader=..., protection_domain=..., __the_thread__=__the_thread__@entry=0x7ffff02a85e0)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at src/hotspot/share/classfile/systemDictionary.cpp:343&lt;br/&gt;
#18 0x00007ffff6927fee in SystemDictionary::resolve_or_fail (class_name=class_name@entry=0x7fffac09c2d8, class_loader=..., &lt;a href=&apos;mailto:class_loader@entry&apos;&gt;class_loader@entry&lt;/a&gt;=..., protection_domain=..., throw_error=throw_error@entry=true, &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;__the_thread__=__the_thread__@entry=0x7ffff02a85e0) at src/hotspot/share/classfile/systemDictionary.cpp:321&lt;br/&gt;
#19 0x00007ffff606e526 in ConstantPool::klass_at_impl (__the_thread__=0x7ffff02a85e0, cp_index=44, this_cp=...) at src/hotspot/share/oops/constantPool.cpp:599&lt;br/&gt;
#20 ConstantPool::klass_at (__the_thread__=0x7ffff02a85e0, cp_index=44, this=&amp;lt;optimized out&amp;gt;) at src/hotspot/share/oops/constantPool.hpp:381&lt;br/&gt;
#21 ConstantPool::klass_ref_at (this=&amp;lt;optimized out&amp;gt;, which=which@entry=5, code=code@entry=Bytecodes::_invokestatic, __the_thread__=__the_thread__@entry=0x7ffff02a85e0) at src/hotspot/share/oops/constantPool.cpp:840&lt;br/&gt;
#22 0x00007ffff6541216 in LinkInfo::LinkInfo (this=0x7fff8fde6830, pool=..., index=5, code=Bytecodes::_invokestatic, __the_thread__=0x7ffff02a85e0) at src/hotspot/share/interpreter/linkResolver.cpp:278&lt;br/&gt;
#23 0x00007ffff654d79a in LinkResolver::resolve_invokestatic (__the_thread__=0x7ffff02a85e0, index=-1881247760, pool=..., result=...) at src/hotspot/share/interpreter/linkResolver.cpp:1745&lt;br/&gt;
#24 LinkResolver::resolve_invoke (result=..., recv=recv@entry=..., pool=..., index=index@entry=5, byte=byte@entry=Bytecodes::_invokestatic, __the_thread__=__the_thread__@entry=0x7ffff02a85e0)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at src/hotspot/share/interpreter/linkResolver.cpp:1705&lt;br/&gt;
#25 0x00007ffff62d2556 in InterpreterRuntime::resolve_invoke (current=0x7ffff02a85e0, bytecode=Bytecodes::_invokestatic) at src/hotspot/share/interpreter/interpreterRuntime.cpp:842&lt;br/&gt;
#26 0x00007ffff62d2a25 in InterpreterRuntime::resolve_from_cache (current=0x7ffff02a85e0, bytecode=&amp;lt;optimized out&amp;gt;) at src/hotspot/share/interpreter/interpreterRuntime.cpp:1004&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
The `JvmtiVTMSTransitionDisabler::JvmtiVTMSTransitionDisabler` cannot jump out the loop since the vthread-1 itself is in VTMS Transition. (VTMS_transition_mark is true)</description>
                <environment></environment>
        <key id="5135324">JDK-8337331</key>
            <summary>crash: pinned virtual thread will lead to jvm crash when running with the javaagent option</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jwtang">Jiawei Tang</assignee>
                                    <reporter username="jwtang">Jiawei Tang</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk23u-fix-SQE-ok-next</label>
                            <label>jdk23u-fix-request</label>
                            <label>jdk23u-fix-yes</label>
                            <label>loom</label>
                    </labels>
                <created>Mon, 29 Jul 2024 00:14:14 -0700</created>
                <updated>Sat, 7 Sep 2024 02:47:16 -0700</updated>
                            <resolved>Thu, 8 Aug 2024 19:32:30 -0700</resolved>
                                    <version>21.0.5</version>
                    <version>23</version>
                                    <fixVersion>24</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14698916" author="JIRAUSER21600" created="Sun, 18 Aug 2024 19:47:06 -0700"  >Hi, I backported it to JDK23, may I get the approval? I want to backport it to JDK21 after that.</comment>
                            <comment id="14698414" author="roboduke" created="Wed, 14 Aug 2024 19:59:38 -0700"  >[jdk23u-fix-request] Approval Request from Jiawei Tang&lt;br/&gt;
fix the jvm crash / dead lock problem. It&amp;#39;s a clean backport.</comment>
                            <comment id="14698407" author="roboduke" created="Wed, 14 Aug 2024 18:58:18 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk23u/pull/73&quot;&gt;https://git.openjdk.org/jdk23u/pull/73&lt;/a&gt;&lt;br/&gt;
Date: 2024-08-15 01:54:31 +0000</comment>
                            <comment id="14697947" author="sgehwolf" created="Tue, 13 Aug 2024 08:29:52 -0700"  >JDK 21u maintainer comment. This is a very recent change and should get first backported to JDK 23u. Once it has had some soak time in mainline and JDK 23 it can maybe reconsidered for 21u. But not at this point. Therefore, removed the label.</comment>
                            <comment id="14697448" author="roboduke" created="Mon, 12 Aug 2024 02:35:13 -0700"  >[jdk21u-fix-request] Approval Request from Jiawei Tang&lt;br/&gt;
fix the jvm crash / dead lock problem. It&amp;#39;s a clean backport.</comment>
                            <comment id="14697438" author="roboduke" created="Mon, 12 Aug 2024 01:34:41 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/910&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/910&lt;/a&gt;&lt;br/&gt;
Date: 2024-08-12 08:26:00 +0000</comment>
                            <comment id="14697055" author="dukebot" created="Thu, 8 Aug 2024 19:32:29 -0700"  >Changeset: 55c50970&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Jiawei Tang &amp;lt;&lt;a href=&apos;mailto:jwtang@openjdk.org&apos;&gt;jwtang@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-08-09 02:29:15 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/55c509708e9b89a7609fd41b6e5a271f250bbacd&quot;&gt;https://git.openjdk.org/jdk/commit/55c509708e9b89a7609fd41b6e5a271f250bbacd&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14693529" author="sspitsyn" created="Mon, 29 Jul 2024 15:42:52 -0700"  >[~jwtang]&lt;br/&gt;
Thank you for filing this issue. In fact, my fix of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8330146&quot; title=&quot;assert(!_thread-&amp;gt;is_in_any_VTMS_transition()) failed&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8330146&quot;&gt;&lt;strike&gt;JDK-8330146&lt;/strike&gt;&lt;/a&gt; was not not correct for CFLH.&lt;br/&gt;
The fix had to be in the post_class_file_load_hook() instead of `JvmtiClassFileLoadHookPoster()` constructor.</comment>
                            <comment id="14693362" author="JIRAUSER21600" created="Mon, 29 Jul 2024 03:04:00 -0700"  >I have read the code in loom and this issue can be resolved by using JFR event instead. But I hope this could be fixed since using javaagent is very common in java application. The root cause is that no new class should be use after the vthread is pinned, since a agent can change the class bytecode and need to use `JvmtiVTMSTransitionDisabler` when transforming class. However, this vthread is in VTMS, it cannot jump out the loop.&lt;br/&gt;
&lt;br/&gt;
Using `-Djdk.tracePinnedThreads=full` will use the class `PinnedThreadPrinter` so we end in a deadlock.</comment>
                            <comment id="14693268" author="alanb" created="Mon, 29 Jul 2024 02:52:22 -0700"  >-Djdk.tracePinnedThreads has been very problematic, it has been removed in the loom repo as part of the object monitor changes planned for (hopefully) JDK 24. In its place, the JFR event jdk.VirutalThreadPinned is now recorded in several more cases, and with additional information. This doesn&amp;#39;t take from the JVMTI issue reported here, just pointing out that execution of code in &amp;quot;onPinned&amp;quot; when pinned in critical code has been very problematic.</comment>
                            <comment id="14693266" author="roboduke" created="Mon, 29 Jul 2024 02:43:00 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/20373&quot;&gt;https://git.openjdk.org/jdk/pull/20373&lt;/a&gt;&lt;br/&gt;
Date: 2024-07-29 09:36:47 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5135407">JDK-8337411</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5138580">JDK-8339681</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5138607">JDK-8339701</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5126747">JDK-8330146</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="110242" name="TestPinCaseWithTrace.java" size="3175" author="jwtang" created="Mon, 29 Jul 2024 00:06:10 -0700"/>
                            <attachment id="110241" name="libPinJNI.c" size="1348" author="jwtang" created="Mon, 29 Jul 2024 00:06:18 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17004"><![CDATA[x86]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i37c4r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17311"><![CDATA[b11]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="372"><![CDATA[jvmti]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>