<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Fri Sep 26 00:53:59 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8299813] java/nio/channels/DatagramChannel/Disconnect.java fails with jtreg test timeout due to lost datagram</title>
                <link>https://bugs.openjdk.org/browse/JDK-8299813</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>&lt;br/&gt;
----------messages:(10/289)----------&lt;br/&gt;
command: main Disconnect&lt;br/&gt;
reason: User specified action: run main Disconnect &lt;br/&gt;
started: Mon Jan 09 13:23:41 GMT 2023&lt;br/&gt;
Mode: agentvm&lt;br/&gt;
Agent id: 15&lt;br/&gt;
Timeout refired 480 times&lt;br/&gt;
Timeout information:&lt;br/&gt;
--- Timeout information end.&lt;br/&gt;
finished: Mon Jan 09 13:32:25 GMT 2023&lt;br/&gt;
elapsed time (seconds): 524.117&lt;br/&gt;
&lt;br/&gt;
The test is stuck in receive:&lt;br/&gt;
&lt;br/&gt;
&amp;quot;AgentVMThread&amp;quot; #438 [39687] prio=5 os_prio=31 cpu=17.81ms elapsed=490.77s allocated=94064B defined_classes=7 tid=0x00007facbf020000 nid=39687 runnable  [0x000070000b18a000]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;java.lang.Thread.State: RUNNABLE&lt;br/&gt;
	at sun.nio.ch.DatagramChannelImpl.receive0(&lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;/Native Method)&lt;br/&gt;
	at sun.nio.ch.DatagramChannelImpl.receiveIntoNativeBuffer(&lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;/DatagramChannelImpl.java:789)&lt;br/&gt;
	at sun.nio.ch.DatagramChannelImpl.receive(&lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;/DatagramChannelImpl.java:773)&lt;br/&gt;
	at sun.nio.ch.DatagramChannelImpl.receive(&lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;/DatagramChannelImpl.java:577)&lt;br/&gt;
	at Disconnect.test(Disconnect.java:81)&lt;br/&gt;
	at Disconnect.main(Disconnect.java:45)&lt;br/&gt;
	at java.lang.invoke.LambdaForm$DMH/0x00000007c0001c00.invokeStatic(&lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;/LambdaForm$DMH)&lt;br/&gt;
	at java.lang.invoke.LambdaForm$MH/0x00000007c00cd800.invoke(&lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;/LambdaForm$MH)&lt;br/&gt;
	at java.lang.invoke.Invokers$Holder.invokeExact_MT(&lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;/Invokers$Holder)&lt;br/&gt;
	at jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl(&lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;/DirectMethodHandleAccessor.java:155)&lt;br/&gt;
	at jdk.internal.reflect.DirectMethodHandleAccessor.invoke(&lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;/DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(&lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;/Method.java:578)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run(MainActionHelper.java:312)&lt;br/&gt;
	at java.lang.Thread.runWith(&lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;/Thread.java:1636)&lt;br/&gt;
	at java.lang.Thread.run(&lt;a href=&apos;mailto:java.base@21-ea&apos;&gt;java.base@21-ea&lt;/a&gt;/Thread.java:1623)&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5090948">JDK-8299813</key>
            <summary>java/nio/channels/DatagramChannel/Disconnect.java fails with jtreg test timeout due to lost datagram</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dfuchs">Daniel Fuchs</assignee>
                                    <reporter username="msheppar">Mark Sheppard</reporter>
                        <labels>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk23u-fix-SQE-ok</label>
                            <label>jdk23u-fix-request</label>
                            <label>jdk23u-fix-yes</label>
                            <label>noreg-self</label>
                    </labels>
                <created>Mon, 9 Jan 2023 07:43:46 -0800</created>
                <updated>Mon, 7 Oct 2024 10:21:41 -0700</updated>
                            <resolved>Fri, 28 Jun 2024 04:15:09 -0700</resolved>
                                    <version>17</version>
                    <version>21</version>
                                    <fixVersion>24</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                                                                <comments>
                            <comment id="14710972" author="andrew" created="Mon, 7 Oct 2024 10:21:41 -0700"  >Both the 17u &amp;amp; 21u backports were not reviewed but given the &amp;#39;clean&amp;#39; label (which I thought had been disabled). This shows the danger of allowing backports through simply because they apply unchanged to the target, without building and testing. This is especially true with tests that are not part of the tiers tested by GHA.</comment>
                            <comment id="14702998" author="sgehwolf" created="Thu, 5 Sep 2024 03:00:39 -0700"  >[~andrewlu] How could the test possibly pass for the JDK 21u and 17u backport? InetAddress.ofLiteral() is @since JDK 22. The test doesn&amp;#39;t compile for me on JDK 21.</comment>
                            <comment id="14698639" author="JIRAUSER20917" created="Thu, 15 Aug 2024 20:00:50 -0700"  >Fix request [17u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 17.0.13-oracle.&lt;br/&gt;
No risk, only tests change.&lt;br/&gt;
Clean backport.&lt;br/&gt;
Test pass. SAP nightly testing passed.</comment>
                            <comment id="14698638" author="JIRAUSER20917" created="Thu, 15 Aug 2024 20:00:45 -0700"  >Fix request [21u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 21.0.5-oracle.&lt;br/&gt;
No risk, only a test change.&lt;br/&gt;
Clean backport.&lt;br/&gt;
Test pass.  SAP nightly testing passed.</comment>
                            <comment id="14698202" author="roboduke" created="Wed, 14 Aug 2024 03:51:39 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/919&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/919&lt;/a&gt;&lt;br/&gt;
Date: 2024-08-14 10:45:08 +0000</comment>
                            <comment id="14698201" author="roboduke" created="Wed, 14 Aug 2024 03:47:45 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2804&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2804&lt;/a&gt;&lt;br/&gt;
Date: 2024-08-14 10:43:01 +0000</comment>
                            <comment id="14688138" author="roboduke" created="Mon, 8 Jul 2024 23:45:24 -0700"  >[jdk23u-fix-request] Approval Request from Shivangi Gupta&lt;br/&gt;
Backporting bug to 23 as failing in lower releases CI</comment>
                            <comment id="14687519" author="roboduke" created="Fri, 5 Jul 2024 21:54:01 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk23u/pull/16&quot;&gt;https://git.openjdk.org/jdk23u/pull/16&lt;/a&gt;&lt;br/&gt;
Date: 2024-07-06 04:49:38 +0000</comment>
                            <comment id="14685677" author="dukebot" created="Fri, 28 Jun 2024 04:15:08 -0700"  >Changeset: 49eb00da&lt;br/&gt;
Author:    Daniel Fuchs &amp;lt;&lt;a href=&apos;mailto:dfuchs@openjdk.org&apos;&gt;dfuchs@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-06-28 11:13:11 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/49eb00da8dc66cff3ca430f06ab21357ee6180ef&quot;&gt;https://git.openjdk.org/jdk/commit/49eb00da8dc66cff3ca430f06ab21357ee6180ef&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14685100" author="roboduke" created="Wed, 26 Jun 2024 07:22:28 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/19908&quot;&gt;https://git.openjdk.org/jdk/pull/19908&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-26 14:15:23 +0000</comment>
                            <comment id="14682570" author="dfuchs" created="Tue, 18 Jun 2024 04:27:55 -0700"  >This test is binding to the wildcard and using InetAddress.getLocalHost(). It also explicitely uses IPv6 if IPv6 is supported. On macOS that leaves the door open to many kind of mismatch.</comment>
                            <comment id="14549596" author="msheppar" created="Mon, 9 Jan 2023 08:02:14 -0800"  >adding a connect diagnostic to the test would be useful in this issue, just in case an ip autoconf was executed at the time of the send and receive. This may cause the dst address to become unavailable just as the send is being executed.&lt;br/&gt;
&lt;br/&gt;
add details of connect in test&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;InetAddress lh = InetAddress.getLocalHost();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.printlln(&amp;quot;connects to &amp;quot; + lh + &amp;quot; at port &amp;quot; + server.socket().getLocalPort());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dc.connect(new InetSocketAddress(lh, server.socket().getLocalPort()));&lt;br/&gt;
&lt;br/&gt;
there&amp;#39;s nothing to suggest network memory pressure, in the netstat -mm output, as casting the dropped datagram</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5134093">JDK-8336247</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5134181">JDK-8336321</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5134207">JDK-8336345</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5137184">JDK-8338720</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5137186">JDK-8338722</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5137215">JDK-8338748</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19000"><![CDATA[x86_64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17017"><![CDATA[os_x]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2ztz7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17315"><![CDATA[b05]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="228"><![CDATA[java.nio]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>