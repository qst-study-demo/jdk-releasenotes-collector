<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 10:22:28 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8327461] KeyStore getEntry is not thread-safe</title>
                <link>https://bugs.openjdk.org/browse/JDK-8327461</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>When the KeyStore is concurrently modified, keyStore.getEntry might fail or return a non-matching private key / certificate pair. This is because PKCS12KeyStore.engineGetEntry calls engineGetKey and engineGetCertificateChain without any synchronization with engineSetEntry.&lt;br/&gt;
&lt;br/&gt;
This is a problem for the PKIX KeyManager (sun.security.ssl.X509KeyManagerImpl), which retrieves the entries from the KeyStore on every handshake. Currently this only impacts the handshakes that are running at the same time as the keystore update, but in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8322767&quot; title=&quot;TLS full handshake is slow with PKCS12KeyStore and X509KeyManagerImpl&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8322767&quot;&gt;JDK-8322767&lt;/a&gt; we are exploring caching the entries on first use, and caching the incorrect entries would affect all handshakes until the next keystore update.&lt;br/&gt;
&lt;br/&gt;
To reproduce:&lt;br/&gt;
- Create a PKCS12 key store, and 2 KeyStore.PrivateKeyEntry instances, one with EC key/certificate, one with RSA key/certificate.&lt;br/&gt;
- create one thread that calls setEntry in a loop using the same alias, but alternating between the entries:&lt;br/&gt;
- in another thread call getEntry in a loop&lt;br/&gt;
see the attached reproducer (incomplete, needs keys).&lt;br/&gt;
&lt;br/&gt;
The code quickly fails with the following exception:&lt;br/&gt;
Exception in thread &amp;quot;main&amp;quot; java.lang.IllegalArgumentException: private key algorithm does not match algorithm of public key in end entity certificate (at index 0)&lt;br/&gt;
	at java.base/java.security.KeyStore$PrivateKeyEntry.&amp;lt;init&amp;gt;(KeyStore.java:552)&lt;br/&gt;
	at java.base/sun.security.pkcs12.PKCS12KeyStore.engineGetEntry(PKCS12KeyStore.java:1338)&lt;br/&gt;
	at java.base/sun.security.util.KeyStoreDelegator.engineGetEntry(KeyStoreDelegator.java:174)&lt;br/&gt;
	at java.base/java.security.KeyStore.getEntry(KeyStore.java:1576)&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Reproducer:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static final String TEST = &amp;quot;test&amp;quot;;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private static void test(KeyStore ks, KeyStore.PrivateKeyEntry ec,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;KeyStore.PrivateKeyEntry rsa,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;KeyStore.PasswordProtection protParam)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throws Exception {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ks.setEntry(TEST, ec, protParam);&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new Thread(()-&amp;gt;{while(true) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ks.setEntry(TEST, ec, protParam);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ks.setEntry(TEST, rsa, protParam);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} catch (KeyStoreException e) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;e.printStackTrace();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.exit(1);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}).start();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while(true) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ks.getEntry(TEST, protParam);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5123400">JDK-8327461</key>
            <summary>KeyStore getEntry is not thread-safe</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="hchao">Haimay Chao</assignee>
                                    <reporter username="djelinski">Daniel Jelinski</reporter>
                        <labels>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                    </labels>
                <created>Wed, 6 Mar 2024 03:42:07 -0800</created>
                <updated>Mon, 28 Apr 2025 06:16:54 -0700</updated>
                            <resolved>Mon, 11 Mar 2024 09:35:36 -0700</resolved>
                                                    <fixVersion>23</fixVersion>
                                    <component>security-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="14772097" author="roboduke" created="Mon, 21 Apr 2025 01:57:23 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1684&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1684&lt;/a&gt;&lt;br/&gt;
Date: 2025-04-21 08:50:10 +0000</comment>
                            <comment id="14772093" author="goetz" created="Mon, 21 Apr 2025 01:49:21 -0700"  >Fix request [21u]&lt;br/&gt;
&lt;br/&gt;
I would like to fix this issue in 21. &lt;br/&gt;
Low to medium risk. The change is simple, obvious and well tested, but It&amp;#39;s in a delicate component.  Related issue was opened before this was pushed, so not caused by this change.&lt;br/&gt;
Clean backport.&lt;br/&gt;
Test passes. SAP nighlyt testing passed.</comment>
                            <comment id="14656289" author="dukebot" created="Mon, 11 Mar 2024 09:35:35 -0700"  >Changeset: ffd43c92&lt;br/&gt;
Author:    Hai-May Chao &amp;lt;&lt;a href=&apos;mailto:hchao@openjdk.org&apos;&gt;hchao@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-03-11 16:33:17 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/ffd43c922e3b8b75a00e494d5484b6a487dd5c90&quot;&gt;https://git.openjdk.org/jdk/commit/ffd43c922e3b8b75a00e494d5484b6a487dd5c90&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14655564" author="roboduke" created="Thu, 7 Mar 2024 09:13:26 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/18156&quot;&gt;https://git.openjdk.org/jdk/pull/18156&lt;/a&gt;&lt;br/&gt;
Date: 2024-03-07 17:06:19 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5157165">JDK-8355713</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5117829">JDK-8322767</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i35b7v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17407"><![CDATA[b14]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="195"><![CDATA[java.security]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>