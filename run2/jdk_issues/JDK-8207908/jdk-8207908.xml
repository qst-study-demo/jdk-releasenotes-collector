<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 08:52:04 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8207908] JMXStatusTest.java fails assertion intermittently</title>
                <link>https://bugs.openjdk.org/browse/JDK-8207908</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The following test failed on Solaris X64 in release and&lt;br/&gt;
slowdebug configs using jdk11+19 bits: &lt;br/&gt;
&lt;br/&gt;
sun/management/jmxremote/startstop/JMXStatusTest.java&lt;br/&gt;
&lt;br/&gt;
The test did not fail in the fastdebug config at all and did not&lt;br/&gt;
fail in all &amp;#39;release&amp;#39; or &amp;#39;slowdebug&amp;#39; runs so I&amp;#39;m tagging this bug&lt;br/&gt;
as intermittent.&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s a snippet from the stdout part of one of the &amp;#39;release&amp;#39;&lt;br/&gt;
bits failures:&lt;br/&gt;
&lt;br/&gt;
test JMXStatusTest.testAgentDefault(): failure&lt;br/&gt;
java.lang.AssertionError:  expected [true] but found [false]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.testng.Assert.fail(Assert.java:94)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.testng.Assert.failNotEquals(Assert.java:496)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.testng.Assert.assertTrue(Assert.java:42)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at JMXStatusTest.assertStatusMatches(JMXStatusTest.java:155)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at JMXStatusTest.assertStatusMatches(JMXStatusTest.java:148)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at JMXStatusTest.testAgentDefault(JMXStatusTest.java:144)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.lang.reflect.Method.invoke(Method.java:566)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.testng.TestRunner.privateRun(TestRunner.java:773)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.testng.TestRunner.run(TestRunner.java:623)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.testng.SuiteRunner.run(SuiteRunner.java:259)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.testng.TestNG.runSuitesLocally(TestNG.java:1110)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.testng.TestNG.run(TestNG.java:1018)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at com.sun.javatest.regtest.agent.TestNGRunner.main(TestNGRunner.java:94)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at com.sun.javatest.regtest.agent.TestNGRunner.main(TestNGRunner.java:54)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.lang.reflect.Method.invoke(Method.java:566)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at com.sun.javatest.regtest.agent.MainWrapper$MainThread.run(MainWrapper.java:115)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.lang.Thread.run(Thread.java:832)&lt;br/&gt;
[TestApp] read: 1&lt;br/&gt;
[TestApp] main exit&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s the stderr part of the same log:&lt;br/&gt;
&lt;br/&gt;
----------System.err:(15/936)----------&lt;br/&gt;
[jcmd] java.lang.RuntimeException: Invalid agent state: Agent already started&lt;br/&gt;
java.lang.Exception: failures: 1&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at com.sun.javatest.regtest.agent.TestNGRunner.main(TestNGRunner.java:96)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at com.sun.javatest.regtest.agent.TestNGRunner.main(TestNGRunner.java:54)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.lang.reflect.Method.invoke(Method.java:566)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at com.sun.javatest.regtest.agent.MainWrapper$MainThread.run(MainWrapper.java:115)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.lang.Thread.run(Thread.java:832)&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test threw exception: java.lang.Exception: failures: 1&lt;br/&gt;
JavaTest Message: shutting down test&lt;br/&gt;
&lt;br/&gt;
STATUS:Failed.`main&amp;#39; threw exception: java.lang.Exception: failures: 1&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
The two &amp;#39;release&amp;#39; bits logs are similar. The &amp;#39;slowdebug&amp;#39; failures&lt;br/&gt;
are more verbose.</description>
                <environment></environment>
        <key id="4967807">JDK-8207908</key>
            <summary>JMXStatusTest.java fails assertion intermittently</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="kevinw">Kevin Walls</assignee>
                                    <reporter username="dcubed">Daniel Daugherty</reporter>
                        <labels>
                            <label>intermittent</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk23u-fix-request</label>
                            <label>noreg-self</label>
                    </labels>
                <created>Thu, 19 Jul 2018 13:53:33 -0700</created>
                <updated>Fri, 20 Dec 2024 01:07:37 -0800</updated>
                            <resolved>Thu, 11 Jul 2024 00:31:47 -0700</resolved>
                                    <version>11</version>
                    <version>20</version>
                    <version>21</version>
                    <version>23</version>
                                    <fixVersion>24</fixVersion>
                                    <component>core-svc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14722669" author="roboduke" created="Fri, 15 Nov 2024 05:03:59 -0800"  >[jdk17u-fix-request] Approval Request from sendaoYan&lt;br/&gt;
Clean backport to fix the test bug which cause test intermittent fails run with simultaneously, and this is prefixed backport of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8336257&quot; title=&quot;Additional tests in jmxremote/startstop to match on PID not app name&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8336257&quot;&gt;&lt;strike&gt;JDK-8336257&lt;/strike&gt;&lt;/a&gt;. The change has been verified locally, which run the test 100 times simultaneously, test-fix only, no risk.</comment>
                            <comment id="14722613" author="roboduke" created="Fri, 15 Nov 2024 01:53:28 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/3042&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/3042&lt;/a&gt;&lt;br/&gt;
Date: 2024-11-15 09:46:19 +0000</comment>
                            <comment id="14722350" author="roboduke" created="Thu, 14 Nov 2024 05:14:39 -0800"  >[jdk21u-fix-request] Approval Request from sendaoYan&lt;br/&gt;
Clean backport to fix the test bug which cause test intermittent fails run with simultaneously, and this is prefixed backport of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8336257&quot; title=&quot;Additional tests in jmxremote/startstop to match on PID not app name&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8336257&quot;&gt;&lt;strike&gt;JDK-8336257&lt;/strike&gt;&lt;/a&gt;. The change has been verified locally, which run the test 100 times simultaneously, test-fix only, no risk.</comment>
                            <comment id="14719134" author="roboduke" created="Mon, 4 Nov 2024 23:50:51 -0800"  >[jdk23u-fix-request] Approval Request from sendaoYan&lt;br/&gt;
Clean backport to fix the test bug which cause test intermittent fails run with simultaneously, and this is prefixed backport of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8336257&quot; title=&quot;Additional tests in jmxremote/startstop to match on PID not app name&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8336257&quot;&gt;&lt;strike&gt;JDK-8336257&lt;/strike&gt;&lt;/a&gt;. The change has been verified locally, which run the test 100 times simultaneously, test-fix only, no risk.</comment>
                            <comment id="14719126" author="roboduke" created="Mon, 4 Nov 2024 23:32:36 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1126&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1126&lt;/a&gt;&lt;br/&gt;
Date: 2024-11-05 07:27:08 +0000</comment>
                            <comment id="14719125" author="roboduke" created="Mon, 4 Nov 2024 23:32:35 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk23u/pull/215&quot;&gt;https://git.openjdk.org/jdk23u/pull/215&lt;/a&gt;&lt;br/&gt;
Date: 2024-11-05 07:26:55 +0000</comment>
                            <comment id="14688988" author="dukebot" created="Thu, 11 Jul 2024 00:31:46 -0700"  >Changeset: b7d0eff5&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Kevin Walls &amp;lt;&lt;a href=&apos;mailto:kevinw@openjdk.org&apos;&gt;kevinw@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-07-11 07:29:37 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/b7d0eff5ad77e338b237773d2fc047eea3d2ac12&quot;&gt;https://git.openjdk.org/jdk/commit/b7d0eff5ad77e338b237773d2fc047eea3d2ac12&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14687155" author="roboduke" created="Thu, 4 Jul 2024 07:47:41 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/20037&quot;&gt;https://git.openjdk.org/jdk/pull/20037&lt;/a&gt;&lt;br/&gt;
Date: 2024-07-04 14:39:50 +0000</comment>
                            <comment id="14687146" author="kevinw" created="Thu, 4 Jul 2024 07:21:59 -0700"  >Looking at this again:&lt;br/&gt;
&lt;br/&gt;
The regex matches fail, on output that contains information from multiple processes.&lt;br/&gt;
&lt;br/&gt;
Looks like concurrent runs clashing, due to use of &amp;quot;jcmd APPNAME ...&amp;quot; rather than PID.&lt;br/&gt;
&lt;br/&gt;
Can reproduce these failures by running multiple instances of the test at once on the same machine.&lt;br/&gt;
</comment>
                            <comment id="14649879" author="mbaesken" created="Thu, 15 Feb 2024 23:42:51 -0800"  >still seeing intermittent failures in this test, should we maybe flag it &amp;quot;intermittent&amp;quot; because this is what it is ?&lt;br/&gt;
Failure on Linuxx86_64 :&lt;br/&gt;
test JMXStatusTest.testAgentDefault(): failure&lt;br/&gt;
java.lang.AssertionError:  expected [true] but found [false]&lt;br/&gt;
	at org.testng.Assert.fail(Assert.java:99)&lt;br/&gt;
	at org.testng.Assert.failNotEquals(Assert.java:1037)&lt;br/&gt;
	at org.testng.Assert.assertTrue(Assert.java:45)&lt;br/&gt;
	at JMXStatusTest.assertStatusMatches(JMXStatusTest.java:153)&lt;br/&gt;
	at JMXStatusTest.assertStatusMatches(JMXStatusTest.java:146)&lt;br/&gt;
	at JMXStatusTest.testAgentDefault(JMXStatusTest.java:142)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&lt;br/&gt;
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)&lt;br/&gt;
	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)&lt;br/&gt;
	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)&lt;br/&gt;
	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)&lt;br/&gt;
	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)&lt;br/&gt;
	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)&lt;br/&gt;
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)&lt;br/&gt;
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)&lt;br/&gt;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&lt;br/&gt;
	at org.testng.TestRunner.privateRun(TestRunner.java:764)&lt;br/&gt;
	at org.testng.TestRunner.run(TestRunner.java:585)&lt;br/&gt;
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)&lt;br/&gt;
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)&lt;br/&gt;
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)&lt;br/&gt;
	at org.testng.SuiteRunner.run(SuiteRunner.java:286)&lt;br/&gt;
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)&lt;br/&gt;
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)&lt;br/&gt;
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)&lt;br/&gt;
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)&lt;br/&gt;
	at org.testng.TestNG.runSuites(TestNG.java:1069)&lt;br/&gt;
	at org.testng.TestNG.run(TestNG.java:1037)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.TestNGRunner.main(TestNGRunner.java:102)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.TestNGRunner.main(TestNGRunner.java:58)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainTask.run(MainWrapper.java:138)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1575)</comment>
                            <comment id="14638360" author="kevinw" created="Mon, 8 Jan 2024 13:01:08 -0800"  >The problems in the attached failure logs seem to do with missing jcmd output.  They seem like a different problem from the recent ones (from Matthias, e.g. Invalid agent state: Agent already started).&lt;br/&gt;
&lt;br/&gt;
In the attached failure logs there is local connector information as well as remote connector info in the jcmd output, and the Properties in the remote connector info are incomplete/truncated, so the test fails as the regex does not match.&lt;br/&gt;
&lt;br/&gt;
The test log shows &amp;quot;[jcmd]&amp;quot; lines with the actual output.&lt;br/&gt;
&lt;br/&gt;
The Pattern REMOTE_AGENT_STATUS uses .*  to skip local info, and to then match remote details/props, and this does work.&lt;br/&gt;
&lt;br/&gt;
Where local and remote connector info is printed, I see logs where the jcmd output just ends without completing the printing of Properties for the remote connector, e.g.&lt;br/&gt;
&lt;br/&gt;
...local connector info, then...&lt;br/&gt;
[jcmd] Connection Type: remote&lt;br/&gt;
[jcmd] Protocol       : rmi&lt;br/&gt;
..etc...&lt;br/&gt;
[jcmd] Properties     :&lt;br/&gt;
[jcmd]   com.sun.management&lt;br/&gt;
test JMXStatusTest.testAgentRemote(): failure&lt;br/&gt;
java.lang.AssertionError:  expected [true] but found [false]&lt;br/&gt;
	..etc...&lt;br/&gt;
	&lt;br/&gt;
The regex for Properties in the REMOTE_AGENT_STATUS regex will not match, if there are no Properties to match in the jcmd output or they badly formed in this way (e.g. they end suddenly, in the middle of a property=value).&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
It does not appear to be truncation due to a limit in either end of jcmd: while some failing examples are approx 2k in size, e.g. 2022 or 2026 bytes, I can fake a hostname or other details and make the output &amp;gt;2500 bytes and not have a problem with truncation.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Is the launched TestApp dying before responding?&lt;br/&gt;
It seems not, we see in the passing and failing tests:&lt;br/&gt;
[TestApp] read: 1&lt;br/&gt;
[TestApp] main exit&lt;br/&gt;
...in failures this is in the log after the assertion fails (suggesting TestApp was alive to send the response).&lt;br/&gt;
&lt;br/&gt;
So the jcmd response from TestApp is seen, but is incomplete, and we fail.  Not sure why -- some rare comms failure or delay happening that loses the jcmd text?  Is the ManagementAgentJcmd mismanaging the reading of the input lines?&lt;br/&gt;
&lt;br/&gt;
Properties truncation is seen in logs without the &amp;quot;already started&amp;quot; error (jdk21), and in some with  that error (jdk 11 attachments).</comment>
                            <comment id="14637732" author="mbaesken" created="Fri, 5 Jan 2024 06:02:09 -0800"  >When comparing with a successful run, I notice 2 entries in the jcmd output  : &lt;br/&gt;
/openjdk23_dev_dbgU_linuxx86_64/testee-vm/bin/jcmd TestApp ManagementAgent.status&lt;br/&gt;
[jcmd] 12826:&lt;br/&gt;
[jcmd] Agent: disabled&lt;br/&gt;
[jcmd] 49348:&lt;br/&gt;
[jcmd] Agent: enabled&lt;br/&gt;
(this leads later to the AssertionError shown above)&lt;br/&gt;
&lt;br/&gt;
But a successful run has only one entry.   Could it be that some remaining processes from the jtreg suite still run on the machine and disturb the test ?</comment>
                            <comment id="14637654" author="mbaesken" created="Fri, 5 Jan 2024 00:59:09 -0800"  >We&amp;#39;ve seen 2 failures of this test already in January , should we mark the test  with key intermittent  (because it fails intermittent) ?</comment>
                            <comment id="14637653" author="mbaesken" created="Fri, 5 Jan 2024 00:56:14 -0800"  >Seems we run into a similar issue on Linux (jdk23) :&lt;br/&gt;
&lt;br/&gt;
----------System.err:(13/749)----------&lt;br/&gt;
[jcmd] java.lang.RuntimeException: Invalid agent state: Agent already started&lt;br/&gt;
java.lang.Exception: failures: 1&lt;br/&gt;
	at com.sun.javatest.regtest.agent.TestNGRunner.main(TestNGRunner.java:104)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.TestNGRunner.main(TestNGRunner.java:58)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainTask.run(MainWrapper.java:138)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1570)&lt;br/&gt;
&lt;br/&gt;
and&lt;br/&gt;
&lt;br/&gt;
java.lang.AssertionError:  expected [true] but found [false]&lt;br/&gt;
	at org.testng.Assert.fail(Assert.java:99)&lt;br/&gt;
	at org.testng.Assert.failNotEquals(Assert.java:1037)&lt;br/&gt;
	at org.testng.Assert.assertTrue(Assert.java:45)&lt;br/&gt;
	at JMXStatusTest.assertStatusMatches(JMXStatusTest.java:153)&lt;br/&gt;
	at JMXStatusTest.assertStatusMatches(JMXStatusTest.java:146)&lt;br/&gt;
	at JMXStatusTest.testAgentDefault(JMXStatusTest.java:142)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&lt;br/&gt;
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)&lt;br/&gt;
	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)&lt;br/&gt;
	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)&lt;br/&gt;
	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)&lt;br/&gt;
	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)&lt;br/&gt;
	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)&lt;br/&gt;
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)&lt;br/&gt;
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)&lt;br/&gt;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&lt;br/&gt;
	at org.testng.TestRunner.privateRun(TestRunner.java:764)&lt;br/&gt;
	at org.testng.TestRunner.run(TestRunner.java:585)&lt;br/&gt;
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)&lt;br/&gt;
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)&lt;br/&gt;
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)&lt;br/&gt;
	at org.testng.SuiteRunner.run(SuiteRunner.java:286)&lt;br/&gt;
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)&lt;br/&gt;
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)&lt;br/&gt;
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)&lt;br/&gt;
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)&lt;br/&gt;
	at org.testng.TestNG.runSuites(TestNG.java:1069)&lt;br/&gt;
	at org.testng.TestNG.run(TestNG.java:1037)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.TestNGRunner.main(TestNGRunner.java:102)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.TestNGRunner.main(TestNGRunner.java:58)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainTask.run(MainWrapper.java:138)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1570)&lt;br/&gt;
&lt;br/&gt;
would be nice if the test would print what it expects AND what it gets, the output is pretty bad, could be easier to analyze with more helpful output. </comment>
                            <comment id="14560520" author="dcubed" created="Wed, 15 Feb 2023 17:10:27 -0800"  >Here&amp;#39;s the logs for my sightings in my jdk-21+9 stress runs on macosx-aarch64:&lt;br/&gt;
&lt;br/&gt;
$ unzip -l jdk-21+9_macosx-aarch64.8207908.zip&lt;br/&gt;
Archive:  jdk-21+9_macosx-aarch64.8207908.zip&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Length      Date    Time    Name&lt;br/&gt;
---------  ---------- -----   ----&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;59383  02-10-2023 08:53   jdk-21+9_1/failures.macosx-aarch64/JMXStatusTest.jtr.fastdebug&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;59754  02-10-2023 09:56   jdk-21+9_1/failures.macosx-aarch64/JMXStatusTest.jtr.release&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;59449  02-10-2023 02:51   jdk-21+9_1/failures.macosx-aarch64/JMXStatusTest.jtr.slowdebug&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;59384  02-11-2023 10:56   jdk-21+9_2/failures.macosx-aarch64/JMXStatusTest.jtr.fastdebug&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;59130  02-11-2023 12:00   jdk-21+9_2/failures.macosx-aarch64/JMXStatusTest.jtr.release&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;59452  02-11-2023 04:27   jdk-21+9_2/failures.macosx-aarch64/JMXStatusTest.jtr.slowdebug&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;59443  02-12-2023 13:11   jdk-21+9_3/failures.macosx-aarch64/JMXStatusTest.jtr.fastdebug&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;59146  02-12-2023 14:15   jdk-21+9_3/failures.macosx-aarch64/JMXStatusTest.jtr.release&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;59393  02-12-2023 06:52   jdk-21+9_3/failures.macosx-aarch64/JMXStatusTest.jtr.slowdebug&lt;br/&gt;
---------                     -------&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;534534                     9 files</comment>
                            <comment id="14557754" author="dcubed" created="Mon, 6 Feb 2023 12:59:48 -0800"  >Here&amp;#39;s the log for my sightings in my jdk-20+34 stress runs on macosx-aarch64:&lt;br/&gt;
&lt;br/&gt;
$ unzip -l jdk-20+34_macosx-aarch64.8207908.zip&lt;br/&gt;
Archive:  jdk-20+34_macosx-aarch64.8207908.zip&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Length      Date    Time    Name&lt;br/&gt;
---------  ---------- -----   ----&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;59364  02-04-2023 09:48   jdk-20+34_1/failures.macosx-aarch64/JMXStatusTest.jtr.fastdebug&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;59130  02-04-2023 11:12   jdk-20+34_1/failures.macosx-aarch64/JMXStatusTest.jtr.release&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;59376  02-04-2023 03:53   jdk-20+34_1/failures.macosx-aarch64/JMXStatusTest.jtr.slowdebug&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;59922  02-05-2023 10:49   jdk-20+34_2/failures.macosx-aarch64/JMXStatusTest.jtr.fastdebug&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;59133  02-05-2023 12:13   jdk-20+34_2/failures.macosx-aarch64/JMXStatusTest.jtr.release&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;59382  02-05-2023 04:57   jdk-20+34_2/failures.macosx-aarch64/JMXStatusTest.jtr.slowdebug&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;59361  02-06-2023 11:19   jdk-20+34_3/failures.macosx-aarch64/JMXStatusTest.jtr.fastdebug&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;59690  02-06-2023 12:45   jdk-20+34_3/failures.macosx-aarch64/JMXStatusTest.jtr.release&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;59379  02-06-2023 05:44   jdk-20+34_3/failures.macosx-aarch64/JMXStatusTest.jtr.slowdebug&lt;br/&gt;
---------                     -------&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;534737                     9 files</comment>
                            <comment id="14197861" author="dcubed" created="Thu, 19 Jul 2018 13:55:38 -0700"  >Here are the logs for my jdk11+19 sightings: &lt;br/&gt;
&lt;br/&gt;
$ unzip -l jdk11_migrate.8207908.zip&lt;br/&gt;
Archive:  jdk11_migrate.8207908.zip&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Length      Date    Time    Name&lt;br/&gt;
---------  ---------- -----   ----&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;30979  06-23-2018 15:49   jdk11_migrate_1/JMXStatusTest.jtr.release&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;30955  06-27-2018 12:34   jdk11_migrate_3/JMXStatusTest.jtr.release&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;32126  06-27-2018 04:48   jdk11_migrate_3/JMXStatusTest.jtr.slowdebug&lt;br/&gt;
---------                     -------&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;94060                     3 files&lt;br/&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5144004">JDK-8344291</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5144148">JDK-8344417</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5134104">JDK-8336257</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="4986496">JDK-8221364</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="102568" name="jdk-20+34_macosx-aarch64.8207908.zip" size="47558" author="dcubed" created="Mon, 6 Feb 2023 12:59:45 -0800"/>
                            <attachment id="102662" name="jdk-21+9_macosx-aarch64.8207908.zip" size="47423" author="dcubed" created="Wed, 15 Feb 2023 17:10:17 -0800"/>
                            <attachment id="77730" name="jdk11_migrate.8207908.zip" size="13158" author="dcubed" created="Thu, 19 Jul 2018 13:55:14 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19000"><![CDATA[x86_64]]></customfieldvalue>
    <customfieldvalue key="19300"><![CDATA[aarch64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    <customfieldvalue key="17017"><![CDATA[os_x]]></customfieldvalue>
    <customfieldvalue key="17020"><![CDATA[solaris]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2f4fv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17335"><![CDATA[b07]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="375"><![CDATA[javax.management]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>