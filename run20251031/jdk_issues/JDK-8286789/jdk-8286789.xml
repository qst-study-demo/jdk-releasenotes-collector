<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 10:10:09 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8286789] Test forceEarlyReturn002.java timed out</title>
                <link>https://bugs.openjdk.org/browse/JDK-8286789</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Entire packet (11 bytes): &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000: 00 00 00 0b 00 00 00 36 80 00 00                  .......6...&lt;br/&gt;
Packet end&lt;br/&gt;
Checking reply packet header&lt;br/&gt;
Parsing reply packet:&lt;br/&gt;
Received signal from debugee: ready&lt;br/&gt;
Sending signal to debugee: quit&lt;br/&gt;
Waiting for debugee exits&lt;br/&gt;
Timeout refired 480 times</description>
                <environment></environment>
        <key id="5074960">JDK-8286789</key>
            <summary>Test forceEarlyReturn002.java timed out</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="amenkov">Alex Menkov</assignee>
                                    <reporter username="dholmes">David Holmes</reporter>
                        <labels>
                            <label>intermittent</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>loom</label>
                            <label>noreg-self</label>
                            <label>problemlist</label>
                            <label>tier5</label>
                    </labels>
                <created>Sun, 15 May 2022 14:59:03 -0700</created>
                <updated>Thu, 8 May 2025 02:15:23 -0700</updated>
                            <resolved>Wed, 30 Aug 2023 11:29:31 -0700</resolved>
                                    <version>19</version>
                    <version>20</version>
                                    <fixVersion>22</fixVersion>
                                    <component>core-svc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                                                            <comments>
                            <comment id="14777720" author="roboduke" created="Wed, 7 May 2025 08:26:08 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/3558&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/3558&lt;/a&gt;&lt;br/&gt;
Date: 2025-05-07 15:19:47 +0000</comment>
                            <comment id="14777158" author="roboduke" created="Tue, 6 May 2025 04:58:53 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1740&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1740&lt;/a&gt;&lt;br/&gt;
Date: 2025-05-06 11:53:19 +0000</comment>
                            <comment id="14777157" author="goetz" created="Tue, 6 May 2025 04:53:29 -0700"  >Fix request [21u,17u]&lt;br/&gt;
&lt;br/&gt;
I would like to fix this test-only issue in 21.&lt;br/&gt;
No risk, only a test change.&lt;br/&gt;
Clean backport.&lt;br/&gt;
Test passes. SAP nightly testing passed.</comment>
                            <comment id="14608210" author="cjplummer" created="Thu, 31 Aug 2023 16:51:43 -0700"  >This issue still reproduces. I think I have an explanation. See &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8315486&quot; title=&quot;vmTestbase/nsk/jdwp/ThreadReference/ForceEarlyReturn/forceEarlyReturn002/forceEarlyReturn002.java timed out&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8315486&quot;&gt;&lt;strike&gt;JDK-8315486&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
[~amenkov] Did you run with JTREG_TEST_THREAD_FACTORY=Virtual when you were trying to reproduce this failure?</comment>
                            <comment id="14607814" author="dukebot" created="Wed, 30 Aug 2023 11:29:30 -0700"  >Changeset: c90cd2c0&lt;br/&gt;
Author:    Alex Menkov &amp;lt;&lt;a href=&apos;mailto:amenkov@openjdk.org&apos;&gt;amenkov@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-08-30 18:28:43 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/c90cd2c0608d250434bff7013360b8388d9854b3&quot;&gt;https://git.openjdk.org/jdk/commit/c90cd2c0608d250434bff7013360b8388d9854b3&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14604158" author="roboduke" created="Tue, 15 Aug 2023 16:10:16 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/15301&quot;&gt;https://git.openjdk.org/jdk/pull/15301&lt;/a&gt;&lt;br/&gt;
Date: 2023-08-15 23:03:31 +0000</comment>
                            <comment id="14603329" author="amenkov" created="Thu, 10 Aug 2023 18:03:13 -0700"  >I was not able to reproduce the issue with 1000+ runs.&lt;br/&gt;
As we don&amp;#39;t observe this &amp;quot;debugger sent, debugee didn&amp;#39;t receive the command&amp;quot; failures with other tests, it looks like this is test issue.&lt;br/&gt;
The only suspicious thing I see the test creates native thread with tight infinite loop (the thread does not exist, no sleeps in the loop).</comment>
                            <comment id="14516198" author="dcubed" created="Sun, 7 Aug 2022 07:45:18 -0700"  >Here&amp;#39;s the log file for a sighting in my stress testing of jdk-20+9:&lt;br/&gt;
&lt;br/&gt;
$ unzip -l jdk-20+9_macosx-aarch64.8286789.zip&lt;br/&gt;
Archive:  jdk-20+9_macosx-aarch64.8286789.zip&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Length      Date    Time    Name&lt;br/&gt;
---------  ---------- -----   ----&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;27561  08-05-2022 12:12   jdk-20+9_2/failures.macosx-aarch64/forceEarlyReturn002.jtr.slowdebug&lt;br/&gt;
---------                     -------&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;27561                     1 file</comment>
                            <comment id="14505897" author="cjplummer" created="Tue, 28 Jun 2022 15:19:14 -0700"  >I looked at the stack trace generated off the hung debuggee process. It&amp;#39;s in the same state described in the 2nd comment in this CR. The debuggee is block waiting for the &amp;quot;quit&amp;quot; command, which was sent, but for some reason the debuggee is not receiving it.</comment>
                            <comment id="14505880" author="dcubed" created="Tue, 28 Jun 2022 14:48:13 -0700"  >Here&amp;#39;s a log file snippet for the jdk-20+4-150-tier5 sighting:&lt;br/&gt;
&lt;br/&gt;
vmTestbase/nsk/jdwp/ThreadReference/ForceEarlyReturn/forceEarlyReturn002/forceEarlyReturn002.java&lt;br/&gt;
&lt;br/&gt;
Expected error: 31&lt;br/&gt;
Waiting for reply packet&lt;br/&gt;
debugee.stderr&amp;gt; Debuggee nsk.jdwp.ThreadReference.ForceEarlyReturn.forceEarlyReturn002.forceEarlyReturn002a : sending the command: ready&lt;br/&gt;
Reply packet received:&lt;br/&gt;
Packet header (11 bytes):&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000 (length) : 0x0000000b (11)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0004 (id)     : 0x00000034 (52)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0008 (flags)  : 0x80 (-128)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;000a (error)  : 0x0000 (0)&lt;br/&gt;
Entire packet (11 bytes): &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000: 00 00 00 0b 00 00 00 34 80 00 00                  .......4...&lt;br/&gt;
Packet end&lt;br/&gt;
Checking reply packet header&lt;br/&gt;
Parsing reply packet:&lt;br/&gt;
Received signal from debugee: ready&lt;br/&gt;
Sending signal to debugee: quit&lt;br/&gt;
Waiting for debugee exits&lt;br/&gt;
Timeout refired 480 times&lt;br/&gt;
# ERROR: Debugee FAILED with exit code: 134&lt;br/&gt;
The following stacktrace is for failure analysis.&lt;br/&gt;
nsk.share.TestFailure: Debugee FAILED with exit code: 134&lt;br/&gt;
	at nsk.share.Log.logExceptionForFailureAnalysis(Log.java:432)&lt;br/&gt;
	at nsk.share.Log.complain(Log.java:403)&lt;br/&gt;
	at nsk.share.jdwp.TestDebuggerType1.quitDebugee(TestDebuggerType1.java:191)&lt;br/&gt;
	at nsk.share.jdwp.TestDebuggerType1.runIt(TestDebuggerType1.java:131)&lt;br/&gt;
	at nsk.jdwp.ThreadReference.ForceEarlyReturn.forceEarlyReturn002.forceEarlyReturn002.run(forceEarlyReturn002.java:103)&lt;br/&gt;
	at nsk.jdwp.ThreadReference.ForceEarlyReturn.forceEarlyReturn002.forceEarlyReturn002.main(forceEarlyReturn002.java:99)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainThread.run(MainWrapper.java:127)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1589)&lt;br/&gt;
TEST FAILED&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
#&amp;gt;  &lt;br/&gt;
#&amp;gt;  SUMMARY: Following errors occured&lt;br/&gt;
#&amp;gt;      during test execution:&lt;br/&gt;
#&amp;gt;  &lt;br/&gt;
# ERROR: Debugee FAILED with exit code: 134&lt;br/&gt;
----------System.err:(0/0)----------&lt;br/&gt;
----------rerun:(35/10241)*----------</comment>
                            <comment id="14496313" author="cjplummer" created="Mon, 16 May 2022 13:12:01 -0700"  >The test seems to have run to near completion, and is sending the &amp;quot;quit&amp;quot; command to the debugee as part of the cleanup and termination process. This is when it times out.&lt;br/&gt;
&lt;br/&gt;
The debugee is a vthread and seems to have some trouble exiting. Unfortunately jcmd attaches are not working, but jhsdb jstack is. You can see the following thread:&lt;br/&gt;
&lt;br/&gt;
&amp;quot;old-m-a-i-n&amp;quot; #1 prio=5 tid=0x0000023b04c45560 nid=26572 waiting on condition [0x000000f1d0eff000]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;java.lang.Thread.State: WAITING (parking)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;JavaThread state: _thread_blocked&lt;br/&gt;
&amp;nbsp;- jdk.internal.misc.Unsafe.park(boolean, long) @bci=0 (Interpreted frame)&lt;br/&gt;
	- parking to wait for &amp;lt;0x00000000afeff920&amp;gt; (a java/util/concurrent/CountDownLatch$Sync)&lt;br/&gt;
&amp;nbsp;- java.util.concurrent.locks.LockSupport.park(java.lang.Object) @bci=27, line=221 (Interpreted frame)&lt;br/&gt;
&amp;nbsp;- java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node, int, boolean, boolean, boolean, long) @bci=347, line=715 (Interpreted frame)&lt;br/&gt;
&amp;nbsp;- java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(int) @bci=21, line=1047 (Interpreted frame)&lt;br/&gt;
&amp;nbsp;- java.util.concurrent.CountDownLatch.await() @bci=5, line=230 (Interpreted frame)&lt;br/&gt;
&amp;nbsp;- java.lang.VirtualThread.joinNanos(long) @bci=34, line=764 (Interpreted frame)&lt;br/&gt;
&amp;nbsp;- java.lang.Thread.join(long) @bci=52, line=2130 (Interpreted frame)&lt;br/&gt;
&amp;nbsp;- java.lang.Thread.join() @bci=2, line=2223 (Interpreted frame)&lt;br/&gt;
&amp;nbsp;- nsk.share.MainWrapper.main(java.lang.String[]) @bci=109, line=74 (Interpreted frame)&lt;br/&gt;
&lt;br/&gt;
This is the main debugee thread, which wraps the test in a vthread and is waiting for it to exit. This appears to be the vthread is waiting on:&lt;br/&gt;
&lt;br/&gt;
&amp;quot;ForkJoinPool-1-worker-1&amp;quot; #27 daemon prio=5 tid=0x0000023b28b92620 nid=59184 runnable [0x000000f1d24fe000]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;java.lang.Thread.State: RUNNABLE&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;JavaThread state: _thread_blocked&lt;br/&gt;
&amp;nbsp;- java.io.ObjectInputStream$PeekInputStream.read(byte[], int, int) @bci=6, line=2917 (Interpreted frame)&lt;br/&gt;
&amp;nbsp;- java.io.ObjectInputStream$PeekInputStream.readFully(byte[], int, int) @bci=19, line=2934 (Interpreted frame)&lt;br/&gt;
&amp;nbsp;- java.io.ObjectInputStream$BlockDataInputStream.readUnsignedShort() @bci=22, line=3443 (Interpreted frame)&lt;br/&gt;
&amp;nbsp;- java.io.ObjectInputStream$BlockDataInputStream.readUTF() @bci=2, line=3501 (Interpreted frame)&lt;br/&gt;
&amp;nbsp;- java.io.ObjectInputStream.readString(boolean) @bci=40, line=2114 (Interpreted frame)&lt;br/&gt;
&amp;nbsp;- java.io.ObjectInputStream.readObject0(java.lang.Class, boolean) @bci=344, line=1738 (Interpreted frame)&lt;br/&gt;
&amp;nbsp;- java.io.ObjectInputStream.readObject(java.lang.Class) @bci=42, line=538 (Interpreted frame)&lt;br/&gt;
&amp;nbsp;- java.io.ObjectInputStream.readObject() @bci=3, line=496 (Interpreted frame)&lt;br/&gt;
&amp;nbsp;- nsk.share.jpda.SocketConnection.doReadObject() @bci=25, line=581 (Interpreted frame)&lt;br/&gt;
	- locked &amp;lt;0x00000000afb93980&amp;gt; (a java.lang.Object)&lt;br/&gt;
&amp;nbsp;- nsk.share.jpda.SocketConnection.readObject() @bci=25, line=518 (Interpreted frame)&lt;br/&gt;
&amp;nbsp;- nsk.share.jpda.SocketIOPipe.readln() @bci=15, line=190 (Interpreted frame)&lt;br/&gt;
&amp;nbsp;- nsk.share.jpda.AbstractDebuggeeTest.doTest() @bci=33, line=309 (Interpreted frame)&lt;br/&gt;
Error occurred during stack walking:&lt;br/&gt;
sun.jvm.hotspot.debugger.UnalignedAddressException: 1&lt;br/&gt;
&lt;br/&gt;
I left off the stack trace of the exception since it&amp;#39;s not relevant. SA just had issues seeing the frames above doTest(). I&amp;#39;m not sure why.&lt;br/&gt;
&lt;br/&gt;
In any case, the debugee is reading from the input pipe, but is not getting the &amp;quot;quit&amp;quot; command. It&amp;#39;s unclear why (it has been sent as you can see in the output). Seems we&amp;#39;ve seen something like this before in other tests, but I can&amp;#39;t recall the CR ATM.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5158098">JDK-8356481</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5158110">JDK-8356494</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5109420">JDK-8315486</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="100334" name="jdk-20+9_macosx-aarch64.8286789.zip" size="3208" author="dcubed" created="Sun, 7 Aug 2022 07:45:12 -0700"/>
                    </attachments>
                <subtasks>
                                              <subtask id="5078628">JDK-8289840</subtask>
                                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19000"><![CDATA[x86_64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17005"><![CDATA[windows]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2x4mz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17407"><![CDATA[b14]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="370"><![CDATA[debugger]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>