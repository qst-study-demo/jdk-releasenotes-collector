<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Fri Sep 26 01:03:54 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8337966] (fs) Files.readAttributes fails with Operation not permitted on older docker releases</title>
                <link>https://bugs.openjdk.org/browse/JDK-8337966</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>JDK fails with java.nio.file.FileSystemException: Operation not permitted &lt;br/&gt;
on the old docker versions (before v19) &lt;br/&gt;
&lt;br/&gt;
Regression is introduced by &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8316304&quot; title=&quot;(fs) Add support for BasicFileAttributes.creationTime() for Linux&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8316304&quot;&gt;&lt;strike&gt;JDK-8316304&lt;/strike&gt;&lt;/a&gt; adding a statx syscall&lt;br/&gt;
&lt;br/&gt;
On the old docker versions, statx is not added to the default seccomp white list ( &lt;a href=&quot;https://github.com/moby/moby/blob/00c1c604d08bbceb73a680d37d7428e6a4e986af/profiles/seccomp/default.json&quot;&gt;https://github.com/moby/moby/blob/00c1c604d08bbceb73a680d37d7428e6a4e986af/profiles/seccomp/default.json&lt;/a&gt; ) It causes EPERM in some systems even if the container image is updated.&lt;br/&gt;
```&lt;br/&gt;
&lt;a href=&apos;mailto:root@88d002f4c30b&apos;&gt;root@88d002f4c30b&lt;/a&gt;:/# /jdk/bin/java -Xdiag -jar ../apps/customjsse.jar&lt;br/&gt;
Error: An unexpected error occurred while trying to open file ../apps/customjsse.jar&lt;br/&gt;
java.nio.file.FileSystemException: ../apps/customjsse.jar: Operation not permitted&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:100)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:106)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:56)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:163)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/sun.nio.fs.LinuxFileSystemProvider.readAttributes(LinuxFileSystemProvider.java:99)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.nio.file.Files.readAttributes(Files.java:1865)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1512)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.zip.ZipFile$CleanableResource.&amp;lt;init&amp;gt;(ZipFile.java:744)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.zip.ZipFile.&amp;lt;init&amp;gt;(ZipFile.java:254)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.zip.ZipFile.&amp;lt;init&amp;gt;(ZipFile.java:181)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.jar.JarFile.&amp;lt;init&amp;gt;(JarFile.java:345)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.jar.JarFile.&amp;lt;init&amp;gt;(JarFile.java:316)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.util.jar.JarFile.&amp;lt;init&amp;gt;(JarFile.java:255)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/sun.launcher.LauncherHelper.loadMainClass(LauncherHelper.java:834)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:736)&lt;br/&gt;
```</description>
                <environment></environment>
        <key id="5136286">JDK-8337966</key>
            <summary>(fs) Files.readAttributes fails with Operation not permitted on older docker releases</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="abakhtin">Alexey Bakhtin</assignee>
                                    <reporter username="abakhtin">Alexey Bakhtin</reporter>
                        <labels>
                            <label>23-na</label>
                            <label>24-na</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                    </labels>
                <created>Tue, 6 Aug 2024 20:54:18 -0700</created>
                <updated>Wed, 30 Oct 2024 03:31:54 -0700</updated>
                            <resolved>Mon, 16 Sep 2024 09:48:58 -0700</resolved>
                                    <version>21.0.2</version>
                                    <fixVersion>21.0.6</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14717629" author="dukebot" created="Wed, 30 Oct 2024 03:14:02 -0700"  >Changeset: 7a97e314&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Alexey Bakhtin &amp;lt;&lt;a href=&apos;mailto:abakhtin@openjdk.org&apos;&gt;abakhtin@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-09-16 16:46:03 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk21u/commit/7a97e314b52a4045ca8238eae5ba730618939bf7&quot;&gt;https://git.openjdk.org/jdk21u/commit/7a97e314b52a4045ca8238eae5ba730618939bf7&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14708258" author="abakhtin" created="Thu, 26 Sep 2024 13:50:04 -0700"  >Fix request (17u)&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;d like to backport this fix to JDK17 to prevent regression for old Docker versions or custom seccomp filters</comment>
                            <comment id="14705292" author="roboduke" created="Mon, 16 Sep 2024 10:12:13 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2883&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2883&lt;/a&gt;&lt;br/&gt;
Date: 2024-09-16 17:06:28 +0000</comment>
                            <comment id="14705287" author="dukebot" created="Mon, 16 Sep 2024 09:48:57 -0700"  >Changeset: 7a97e314&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Alexey Bakhtin &amp;lt;&lt;a href=&apos;mailto:abakhtin@openjdk.org&apos;&gt;abakhtin@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-09-16 16:46:03 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/commit/7a97e314b52a4045ca8238eae5ba730618939bf7&quot;&gt;https://git.openjdk.org/jdk21u-dev/commit/7a97e314b52a4045ca8238eae5ba730618939bf7&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14705263" author="sgehwolf" created="Mon, 16 Sep 2024 07:56:33 -0700"  >OpenJDK 21u approval comment:&lt;br/&gt;
&lt;br/&gt;
Based on the fact that `java -jar ../apps/customjsse.jar` code paths might be affected by this and it shouldn&amp;#39;t harm the common deployments, I&amp;#39;m allowing this work-around in JDK 21 updates to fix the regression. Users of later JDK versions won&amp;#39;t have the fix, but in that case they must upgrade to a newer Docker version.</comment>
                            <comment id="14704913" author="abakhtin" created="Fri, 13 Sep 2024 15:18:09 -0700"  >Thank you for your response.&lt;br/&gt;
I did not know that &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8316304&quot; title=&quot;(fs) Add support for BasicFileAttributes.creationTime() for Linux&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8316304&quot;&gt;&lt;strike&gt;JDK-8316304&lt;/strike&gt;&lt;/a&gt; fixes file system access issue by switching to statx.&lt;br/&gt;
&lt;br/&gt;
For other issues, I think it is always a trade-off between fixes in JDK or the environment, especially in the case of regression on the same JDK version.&lt;br/&gt;
&lt;br/&gt;
I understand the birth time issue on the system, where it could be retrieved. However, on the system where the environment can not be changed (e.g. can not change seccomp filter or update Docker version), the JDK21/JDK17 fails. Even if the application does not use NIO FS directly</comment>
                            <comment id="14704840" author="sgehwolf" created="Fri, 13 Sep 2024 09:52:19 -0700"  >This needs a fairly obscure system. The following conditions must hold:&lt;br/&gt;
&lt;br/&gt;
1. The kernel where the container runs on supports statx&lt;br/&gt;
2. The glibc version of the container supports statx (for example centos 7 does not; then the fstat64 branch is taken)&lt;br/&gt;
3. A seccomp filter is in place to not allow statx and EPERM is returned in that case. AFAIK a filter might return a different errno. For example, docker version 17.x&lt;br/&gt;
&lt;br/&gt;
Depending on the system, the native stat tool may also return &amp;quot;Operation not permitted&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
[&lt;a href=&apos;mailto:root@b86e0ac182cb&apos;&gt;root@b86e0ac182cb&lt;/a&gt; /]# stat /opt/classes/test.txt&lt;br/&gt;
stat: cannot statx &amp;#39;/opt/classes/test.txt&amp;#39;: Operation not permitted&lt;br/&gt;
[&lt;a href=&apos;mailto:root@b86e0ac182cb&apos;&gt;root@b86e0ac182cb&lt;/a&gt; /]# /opt/jdk/bin/java -cp /opt/classes LastModified /opt/classes/test.txt&lt;br/&gt;
Exception in thread &amp;quot;main&amp;quot; java.nio.file.FileSystemException: /opt/classes/test.txt: Operation not permitted&lt;br/&gt;
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:100)&lt;br/&gt;
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:106)&lt;br/&gt;
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)&lt;br/&gt;
	at java.base/sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(UnixFileAttributeViews.java:55)&lt;br/&gt;
	at java.base/sun.nio.fs.UnixFileSystemProvider.readAttributes(UnixFileSystemProvider.java:171)&lt;br/&gt;
	at java.base/sun.nio.fs.LinuxFileSystemProvider.readAttributes(LinuxFileSystemProvider.java:99)&lt;br/&gt;
	at java.base/java.nio.file.Files.readAttributes(Files.java:1853)&lt;br/&gt;
	at LastModified.main(LastModified.java:8)&lt;br/&gt;
[&lt;a href=&apos;mailto:root@b86e0ac182cb&apos;&gt;root@b86e0ac182cb&lt;/a&gt; /]#&lt;br/&gt;
&lt;br/&gt;
With the work-around on such a system birth time support reported by the JDK is meaningless (will be 0, the epoch) even after &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8338696&quot; title=&quot;(fs) BasicFileAttributes.creationTime() falls back to epoch if birth time is unavailable (Linux)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8338696&quot;&gt;&lt;strike&gt;JDK-8338696&lt;/strike&gt;&lt;/a&gt;, because the capability checks for statx availability only and will report as &amp;quot;supported&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
[&lt;a href=&apos;mailto:root@89414b9b3113&apos;&gt;root@89414b9b3113&lt;/a&gt; /]# stat /opt/classes/test.txt&lt;br/&gt;
stat: cannot statx &amp;#39;/opt/classes/test.txt&amp;#39;: Operation not permitted&lt;br/&gt;
[&lt;a href=&apos;mailto:root@89414b9b3113&apos;&gt;root@89414b9b3113&lt;/a&gt; /]# /opt/jdk/bin/java -cp /opt/classes LastModified /opt/classes/test.txt&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;follow-symlink - symlink? false&lt;br/&gt;
created  (a): 1970-01-01T00:00:00Z&lt;br/&gt;
modified (a): 2000-01-01T00:01:00Z&lt;br/&gt;
no-follow-symlink - symlink? false&lt;br/&gt;
created  (b): 1970-01-01T00:00:00Z&lt;br/&gt;
modified (b): 2000-01-01T00:01:00Z&lt;br/&gt;
&lt;br/&gt;
While the actual file has a birth time of:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;Birth: 2023-09-11 13:33:47.666393066 +0000&lt;br/&gt;
&lt;br/&gt;
Yet, beyond the birth time issue, the fix allows for affected systems to allow for file system accesses as was the case prior &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8316304&quot; title=&quot;(fs) Add support for BasicFileAttributes.creationTime() for Linux&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8316304&quot;&gt;&lt;strike&gt;JDK-8316304&lt;/strike&gt;&lt;/a&gt;.</comment>
                            <comment id="14704347" author="abakhtin" created="Wed, 11 Sep 2024 11:46:16 -0700"  >Fix Request (21u):&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;d like to fix this issue to prevent regression for old Docker versions or custom seccomp filters</comment>
                            <comment id="14701934" author="roboduke" created="Fri, 30 Aug 2024 14:38:34 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/951&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/951&lt;/a&gt;&lt;br/&gt;
Date: 2024-08-30 21:32:42 +0000</comment>
                            <comment id="14701464" author="alanb" created="Wed, 28 Aug 2024 23:47:07 -0700"  >It was a surprise to see &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8316304&quot; title=&quot;(fs) Add support for BasicFileAttributes.creationTime() for Linux&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8316304&quot;&gt;&lt;strike&gt;JDK-8316304&lt;/strike&gt;&lt;/a&gt; in 21u and 17u. It may be that this will be backed out of those releases, or alternatively the workaround for the old docker version / seccomp config targets those releases rather than main line. Right now, main line is accumulating changes for JDK 24 that will release in 3/2025. From what I can tell, docker engine 19 was released in 2019 so the fix has been available for a long time.&lt;br/&gt;
</comment>
                            <comment id="14696503" author="roboduke" created="Tue, 6 Aug 2024 21:24:37 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/20484&quot;&gt;https://git.openjdk.org/jdk/pull/20484&lt;/a&gt;&lt;br/&gt;
Date: 2024-08-07 04:20:29 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5140346">JDK-8341255</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5110345">JDK-8316304</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i37h1n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17304"><![CDATA[b01]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="228"><![CDATA[java.nio]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>