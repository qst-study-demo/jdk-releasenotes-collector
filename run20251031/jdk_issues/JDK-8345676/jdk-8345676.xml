<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 10:01:55 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8345676] [ubsan] ProcessImpl_md.c:561:40: runtime error: applying zero offset to null pointer on macOS aarch64</title>
                <link>https://bugs.openjdk.org/browse/JDK-8345676</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>When starting :tier1  jdk  jtreg tests with&lt;br/&gt;
/jtreg_latest/bin/jtreg&lt;br/&gt;
this error is show when running ubsanized binaries on macOS aarch64  (XCode 13.1 and 15.4 show this)&lt;br/&gt;
&lt;br/&gt;
src/java.base/unix/native/libjava/ProcessImpl_md.c:561:40: runtime error: applying zero offset to null pointer&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#0 0x102a6552c in startChild ProcessImpl_md.c:621&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#1 0x102a64480 in Java_java_lang_ProcessImpl_forkAndExec ProcessImpl_md.c:721&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#2 0x13f53c4fc  (&amp;lt;unknown module&amp;gt;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#3 0x13f5387cc  (&amp;lt;unknown module&amp;gt;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#4 0x13f53894c  (&amp;lt;unknown module&amp;gt;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#5 0x13f5386dc  (&amp;lt;unknown module&amp;gt;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#6 0x13f5386dc  (&amp;lt;unknown module&amp;gt;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#7 0x13f5386dc  (&amp;lt;unknown module&amp;gt;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#8 0x13f53894c  (&amp;lt;unknown module&amp;gt;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#9 0x13f53894c  (&amp;lt;unknown module&amp;gt;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#10 0x13f534110  (&amp;lt;unknown module&amp;gt;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#11 0x107de60e0 in JavaCalls::call_helper(JavaValue*, methodHandle const&amp;amp;, JavaCallArguments*, JavaThread*) javaCalls.cpp:416&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#12 0x107ebf778 in jni_invoke_static(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, JavaThread*) jni.cpp:885&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#13 0x107ec2778 in jni_CallStaticVoidMethod jni.cpp:1714&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#14 0x102e86210 in invokeStaticMainWithArgs java.c:392&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#15 0x102e884e8 in JavaMain java.c:640&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#16 0x102e8d79c in ThreadJavaMain java_md_macosx.m:679&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#17 0x19d38ef90 in _pthread_start+0x84 (libsystem_pthread.dylib:arm64e+0x6f90)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#18 0x19d389d30 in thread_start+0x4 (libsystem_pthread.dylib:arm64e+0x1d30)&lt;br/&gt;
&lt;br/&gt;
Looks similar to&lt;br/&gt;
&lt;a href=&quot;https://www.reddit.com/r/C_Programming/comments/133oxnc/null_0_is_ub_this_is_not_what_you_would_expect/?rdt=41590&quot;&gt;https://www.reddit.com/r/C_Programming/comments/133oxnc/null_0_is_ub_this_is_not_what_you_would_expect/?rdt=41590&lt;/a&gt;&lt;br/&gt;
and&lt;br/&gt;
&lt;a href=&quot;https://trac.ffmpeg.org/changeset/9c0b3eddf4262f9dcea479091f1307444e614e88/ffmpeg&quot;&gt;https://trac.ffmpeg.org/changeset/9c0b3eddf4262f9dcea479091f1307444e614e88/ffmpeg&lt;/a&gt;</description>
                <environment></environment>
        <key id="5145598">JDK-8345676</key>
            <summary>[ubsan] ProcessImpl_md.c:561:40: runtime error: applying zero offset to null pointer on macOS aarch64</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rriggs">Roger Riggs</assignee>
                                    <reporter username="mbaesken">Matthias Baesken</reporter>
                        <labels>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk24u-fix-SQE-ok-next</label>
                            <label>jdk24u-fix-request</label>
                            <label>jdk24u-fix-yes</label>
                            <label>ubsan</label>
                    </labels>
                <created>Fri, 6 Dec 2024 04:53:24 -0800</created>
                <updated>Wed, 19 Feb 2025 00:38:43 -0800</updated>
                            <resolved>Tue, 7 Jan 2025 00:16:29 -0800</resolved>
                                    <version>24</version>
                    <version>25</version>
                                    <fixVersion>25</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14754291" author="roboduke" created="Mon, 17 Feb 2025 04:20:02 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1405&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1405&lt;/a&gt;&lt;br/&gt;
Date: 2025-02-17 12:15:53 +0000</comment>
                            <comment id="14754290" author="mbaesken" created="Mon, 17 Feb 2025 04:19:52 -0800"  >jdk21u-dev backport request&lt;br/&gt;
I would like to have the patch in jdk21u-dev as well, because the issue is present there too. The backport is clean and low risk.</comment>
                            <comment id="14751013" author="mbaesken" created="Tue, 11 Feb 2025 06:04:33 -0800"  >jdk24u backport request&lt;br/&gt;
I would like to have the patch in jdk24u as well, because the issue is present there too. The backport is clean and low risk.</comment>
                            <comment id="14751008" author="roboduke" created="Tue, 11 Feb 2025 05:58:11 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk24u/pull/68&quot;&gt;https://git.openjdk.org/jdk24u/pull/68&lt;/a&gt;&lt;br/&gt;
Date: 2025-02-11 13:51:41 +0000</comment>
                            <comment id="14736269" author="mbaesken" created="Tue, 7 Jan 2025 07:44:07 -0800"  >On my macOS x86_64 build machine (macOS 14.7, XCode 13.1) the ubsan build fails too.  Unfortunately only&lt;br/&gt;
UndefinedBehaviorSanitizer:DEADLYSIGNAL&lt;br/&gt;
UndefinedBehaviorSanitizer: nested bug in the same thread, aborting.&lt;br/&gt;
is reported, without a file + linenumber . &lt;br/&gt;
So this does not look very usable to me.  I think we should for now concentrate on the more important macOS aarch64 (were ubsan works better) and on Linux (where ubsan works very well).</comment>
                            <comment id="14736140" author="dukebot" created="Tue, 7 Jan 2025 00:16:28 -0800"  >Changeset: 0285020c&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Matthias Baesken &amp;lt;&lt;a href=&apos;mailto:mbaesken@openjdk.org&apos;&gt;mbaesken@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2025-01-07 08:15:12 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/0285020c7ea01f32b32efe166a0a5dae39957216&quot;&gt;https://git.openjdk.org/jdk/commit/0285020c7ea01f32b32efe166a0a5dae39957216&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14735707" author="mbaesken" created="Fri, 3 Jan 2025 07:34:52 -0800"  >&amp;gt; The errors occur using macosx 14.7.1 Intel.&lt;br/&gt;
&lt;br/&gt;
Oh I thought very few people use macOS intel these days.  But seems I was wrong.  On Linux x86_64  I am not running into this issue.&lt;br/&gt;
So the pointer is  &amp;quot;  incorrect function type &amp;#39;JImageFile *(*)(const char *, int *)&amp;#39;&amp;quot;   (JImageOpen_t typedef) ;   the function itself is  (&amp;quot;jimage.cpp:68: note: JIMAGE_Open defined here&amp;quot;)  is&lt;br/&gt;
&amp;nbsp;67  extern &amp;quot;C&amp;quot; JNIEXPORT JImageFile*&lt;br/&gt;
&amp;nbsp;68  JIMAGE_Open(const char *name, jint* error) {&lt;br/&gt;
So does the type check complain about the extern C ?  Or about the JNIEXPORT ?&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                            <comment id="14735704" author="rriggs" created="Fri, 3 Jan 2025 07:17:48 -0800"  >The errors occur using macosx 14.7.1 Intel.&lt;br/&gt;
&lt;br/&gt;
The error (repeated many times) is in classLoader.cpp: &lt;br/&gt;
&lt;br/&gt;
...jdk-misc/open/src/hotspot/share/classfile/classLoader.cpp:1520:16: runtime error: call to function JIMAGE_Open through pointer to incorrect function type &amp;#39;JImageFile *(*)(const char *, int *)&amp;#39;&lt;br/&gt;
jimage.cpp:68: note: JIMAGE_Open defined here&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#0 0x10ab07433 in ClassLoader::lookup_vm_options() classLoader.cpp:1520&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#1 0x10a7986b0 in Arguments::parse(JavaVMInitArgs const*) arguments.cpp:3473</comment>
                            <comment id="14735652" author="roboduke" created="Fri, 3 Jan 2025 02:34:49 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/22910&quot;&gt;https://git.openjdk.org/jdk/pull/22910&lt;/a&gt;&lt;br/&gt;
Date: 2025-01-03 10:29:31 +0000</comment>
                            <comment id="14735648" author="mbaesken" created="Fri, 3 Jan 2025 02:30:52 -0800"  >&amp;gt; The fix above seem fine. &lt;br/&gt;
&lt;br/&gt;
Thanks [~rriggs] ; I created a PR .&lt;br/&gt;
&lt;br/&gt;
&amp;gt; When I build --enable-ubsan, there are so many errors, I don&amp;#39;t get far enough to verify it.&lt;br/&gt;
&lt;br/&gt;
What build platform and compiler are you using and what is the error you get ?&lt;br/&gt;
&lt;br/&gt;
</comment>
                            <comment id="14735577" author="rriggs" created="Thu, 2 Jan 2025 10:15:01 -0800"  >The fix above seem fine.  When I build --enable-ubsan, there are so many errors, I don&amp;#39;t get far enough to verify it.&lt;br/&gt;
[~mbaesken] if you have a way to verify, feel free to take over the fix.  I&amp;#39;m not in a position to fix other errors, especially in hotspot.</comment>
                            <comment id="14735503" author="mbaesken" created="Thu, 2 Jan 2025 01:00:35 -0800"  >&amp;gt; what was the test (in tier1) that showed this above error?&lt;br/&gt;
&lt;br/&gt;
This happens already very early in the jtreg tool startup, from what I see before a &amp;#39;real&amp;#39; test is executed.</comment>
                            <comment id="14735433" author="jpai" created="Mon, 30 Dec 2024 22:52:23 -0800"  >Hello Matthias [~mbaesken], what was the test (in tier1) that showed this above error?</comment>
                            <comment id="14735404" author="mbaesken" created="Mon, 30 Dec 2024 07:05:12 -0800"  >Adding an if check like this seems to solve the issue, should we do this ?&lt;br/&gt;
&lt;br/&gt;
diff --git a/src/java.base/unix/native/libjava/ProcessImpl_md.c b/src/java.base/unix/native/libjava/ProcessImpl_md.c&lt;br/&gt;
index 506b33aae96..4adae8f2752 100644&lt;br/&gt;
--- a/src/java.base/unix/native/libjava/ProcessImpl_md.c&lt;br/&gt;
+++ b/src/java.base/unix/native/libjava/ProcessImpl_md.c&lt;br/&gt;
@@ -558,7 +558,9 @@ spawnChild(JNIEnv *env, jobject process, ChildStuff *c, const char *helperpath)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return -1;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;offset = copystrings(buf, 0, &amp;amp;c-&amp;gt;argv[0]);&lt;br/&gt;
-    offset = copystrings(buf, offset, &amp;amp;c-&amp;gt;envv[0]);&lt;br/&gt;
+    if (c-&amp;gt;envv != NULL) {&lt;br/&gt;
+      offset = copystrings(buf, offset, &amp;amp;c-&amp;gt;envv[0]);&lt;br/&gt;
+    }&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (c-&amp;gt;pdir != NULL) {&lt;br/&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5150836">JDK-8350196</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5150965">JDK-8350310</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19300"><![CDATA[aarch64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17017"><![CDATA[os_x]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i39017:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17315"><![CDATA[b05]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>