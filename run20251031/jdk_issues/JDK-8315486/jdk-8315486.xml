<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 09:32:09 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8315486] vmTestbase/nsk/jdwp/ThreadReference/ForceEarlyReturn/forceEarlyReturn002/forceEarlyReturn002.java timed out</title>
                <link>https://bugs.openjdk.org/browse/JDK-8315486</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The following test failed in the JDK22 CI:&lt;br/&gt;
&lt;br/&gt;
vmTestbase/nsk/jdwp/ThreadReference/ForceEarlyReturn/forceEarlyReturn002/forceEarlyReturn002.java&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s a snippet from the log file:&lt;br/&gt;
&lt;br/&gt;
#section:main&lt;br/&gt;
----------messages:(8/1260)----------&lt;br/&gt;
command: main nsk.jdwp.ThreadReference.ForceEarlyReturn.forceEarlyReturn002.forceEarlyReturn002 -arch=linux-aarch64 -verbose -waittime=5 -debugee.vmkind=java -transport.address=dynamic -debugee.vmkeys=&amp;quot;-XX:MaxRAMPercentage=6.25 -Dtest.boot.jdk=/opt/mach5/mesos/work_dir/jib-master/install/jdk/20/36/bundles/linux-aarch64/jdk-20_linux-aarch64_bin.tar.gz/jdk-20 -Djava.io.tmpdir=/opt/mach5/mesos/work_dir/slaves/cd627e65-f015-4fb1-a1d2-b6c9b8127f98-S152533/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/8611eaf9-de0a-4f95-baa6-82686a11fbb6/runs/61ff66a5-0237-488a-a072-83c1b0bd38d9/testoutput/test-support/jtreg_open_test_hotspot_jtreg_vmTestbase_nsk_jdwp/tmp -Duse.JTREG_TEST_THREAD_FACTORY=Virtual -XX:+UseZGC -XX:+ZGenerational -XX:-VerifyContinuations&amp;quot;&lt;br/&gt;
reason: User specified action: run main/othervm/native nsk.jdwp.ThreadReference.ForceEarlyReturn.forceEarlyReturn002.forceEarlyReturn002 -arch=${os.family}-${os.simpleArch} -verbose -waittime=5 -debugee.vmkind=java -transport.address=dynamic -debugee.vmkeys=&amp;quot;${test.vm.opts} ${test.java.opts}&amp;quot; &lt;br/&gt;
started: Thu Aug 31 21:24:05 UTC 2023&lt;br/&gt;
Mode: othervm [/othervm specified]&lt;br/&gt;
Timeout information:&lt;br/&gt;
--- Timeout information end.&lt;br/&gt;
finished: Thu Aug 31 21:38:01 UTC 2023&lt;br/&gt;
elapsed time (seconds): 835.49&lt;br/&gt;
----------configuration:(0/0)----------&lt;br/&gt;
----------System.out:(340/14325)----------&lt;br/&gt;
&lt;br/&gt;
&amp;gt;&amp;gt;&amp;gt; Preparing debugee for testing &lt;br/&gt;
&lt;br/&gt;
Launching debugee&lt;br/&gt;
transport&amp;gt; port == 0, disabling SO_REUSEADDR&lt;br/&gt;
Debugee&amp;gt; Starting java process:&lt;br/&gt;
&amp;quot;/opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-966/linux-aarch64-debug.jdk/jdk-22/fastdebug/bin/java&amp;quot; &amp;quot;-XX:MaxRAMPercentage=6.25&amp;quot; &amp;quot;-Dtest.boot.jdk=/opt/mach5/mesos/work_dir/jib-master/install/jdk/20/36/bundles/linux-aarch64/jdk-20_linux-aarch64_bin.tar.gz/jdk-20&amp;quot; &amp;quot;-Djava.io.tmpdir=/opt/mach5/mesos/work_dir/slaves/cd627e65-f015-4fb1-a1d2-b6c9b8127f98-S152533/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/8611eaf9-de0a-4f95-baa6-82686a11fbb6/runs/61ff66a5-0237-488a-a072-83c1b0bd38d9/testoutput/test-support/jtreg_open_test_hotspot_jtreg_vmTestbase_nsk_jdwp/tmp&amp;quot; &amp;quot;-Duse.JTREG_TEST_THREAD_FACTORY=Virtual&amp;quot; &amp;quot;-XX:+UseZGC&amp;quot; &amp;quot;-XX:+ZGenerational&amp;quot; &amp;quot;-XX:-VerifyContinuations&amp;quot; &amp;quot;-Xrunjdwp:server=n,transport=dt_socket,address=localhost:37871,includevirtualthreads=y&amp;quot; &amp;quot;nsk.share.MainWrapper&amp;quot; &amp;quot;Virtual&amp;quot; &amp;quot;nsk.jdwp.ThreadReference.ForceEarlyReturn.forceEarlyReturn002.forceEarlyReturn002a&amp;quot; &amp;quot;-arch=linux-aarch64&amp;quot; &amp;quot;-verbose&amp;quot; &amp;quot;-waittime=5&amp;quot; &amp;quot;-debugee.vmkind=java&amp;quot; &amp;quot;-transport.address=dynamic&amp;quot; &amp;quot;-debugee.vmkeys=&amp;quot;-XX:MaxRAMPercentage=6.25 -Dtest.boot.jdk=/opt/mach5/mesos/work_dir/jib-master/install/jdk/20/36/bundles/linux-aarch64/jdk-20_linux-aarch64_bin.tar.gz/jdk-20 -Djava.io.tmpdir=/opt/mach5/mesos/work_dir/slaves/cd627e65-f015-4fb1-a1d2-b6c9b8127f98-S152533/frameworks/1735e8a2-a1db-478c-8104-60c8b0af87dd-0196/executors/8611eaf9-de0a-4f95-baa6-82686a11fbb6/runs/61ff66a5-0237-488a-a072-83c1b0bd38d9/testoutput/test-support/jtreg_open_test_hotspot_jtreg_vmTestbase_nsk_jdwp/tmp -Duse.JTREG_TEST_THREAD_FACTORY=Virtual -XX:+UseZGC -XX:+ZGenerational -XX:-VerifyContinuations&amp;quot;&amp;quot; &amp;quot;-pipe.port=43471&amp;quot;&lt;br/&gt;
Debugee&amp;gt; Establishing JDWP socket connection&lt;br/&gt;
Debugee&amp;gt; Listening from debugee&lt;br/&gt;
Waiting for VM_INIT event&lt;br/&gt;
Querying for IDSizes&lt;br/&gt;
Resuming debugee VM&lt;br/&gt;
Waiting for signal from debugee: ready&lt;br/&gt;
debugee.stderr&amp;gt; Debuggee nsk.jdwp.ThreadReference.ForceEarlyReturn.forceEarlyReturn002.forceEarlyReturn002a : sending the command: ready&lt;br/&gt;
Received signal from debugee: ready&lt;br/&gt;
Create command: ThreadReference.ForceEarlyReturn&lt;br/&gt;
threadID = -1&lt;br/&gt;
Value = (INT)0&lt;br/&gt;
Sending command packet:&lt;br/&gt;
Packet header (11 bytes):&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000 (length) : 0x00000018 (24)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0004 (id)     : 0x00000003 (3)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0008 (flags)  : 0x00 (0)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0009 (cmd set): 0x0b (11)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;000a (command): 0x0e (14)&lt;br/&gt;
Entire packet (24 bytes): &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000: 00 00 00 18 00 00 00 03 00 0b 0e ff ff ff ff ff   ................&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0010: ff ff ff 49 00 00 00 00                           ...I....&lt;br/&gt;
Packet end&lt;br/&gt;
Waiting for reply packet&lt;br/&gt;
Reply packet received:&lt;br/&gt;
Packet header (11 bytes):&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000 (length) : 0x0000000b (11)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0004 (id)     : 0x00000003 (3)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0008 (flags)  : 0x80 (-128)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;000a (error)  : 0x0014 (20)&lt;br/&gt;
Entire packet (11 bytes): &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000: 00 00 00 0b 00 00 00 03 80 00 14                  ...........&lt;br/&gt;
Packet end&lt;br/&gt;
Expected error: 20&lt;br/&gt;
debugee.stderr&amp;gt; Debuggee: received the command: createStateTestThread&lt;br/&gt;
debugee.stderr&amp;gt; Debuggee nsk.jdwp.ThreadReference.ForceEarlyReturn.forceEarlyReturn002.forceEarlyReturn002a : sending the command: ready&lt;br/&gt;
Received signal from debugee: ready&lt;br/&gt;
debugee.stderr&amp;gt; Debuggee: received the command: stateTestThreadNextState&lt;br/&gt;
debugee.stderr&amp;gt; Debuggee nsk.jdwp.ThreadReference.ForceEarlyReturn.forceEarlyReturn002.forceEarlyReturn002a : sending the command: ready&lt;br/&gt;
Received signal from debugee: ready&lt;br/&gt;
Create command: ThreadReference.ForceEarlyReturn&lt;br/&gt;
threadID = 19&lt;br/&gt;
Value = (INT)0&lt;br/&gt;
Sending command packet:&lt;br/&gt;
Packet header (11 bytes):&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000 (length) : 0x00000018 (24)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0004 (id)     : 0x00000018 (24)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0008 (flags)  : 0x00 (0)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0009 (cmd set): 0x0b (11)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;000a (command): 0x0e (14)&lt;br/&gt;
Entire packet (24 bytes): &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000: 00 00 00 18 00 00 00 18 00 0b 0e 00 00 00 00 00   ................&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0010: 00 00 13 49 00 00 00 00                           ...I....&lt;br/&gt;
Packet end&lt;br/&gt;
Waiting for reply packet&lt;br/&gt;
Reply packet received:&lt;br/&gt;
Packet header (11 bytes):&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000 (length) : 0x0000000b (11)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0004 (id)     : 0x00000018 (24)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0008 (flags)  : 0x80 (-128)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;000a (error)  : 0x000d (13)&lt;br/&gt;
Entire packet (11 bytes): &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000: 00 00 00 0b 00 00 00 18 80 00 0d                  ...........&lt;br/&gt;
Packet end&lt;br/&gt;
Expected error: 13&lt;br/&gt;
debugee.stderr&amp;gt; Debuggee: received the command: stateTestThreadNextState&lt;br/&gt;
Received signal from debugee: ready&lt;br/&gt;
debugee.stderr&amp;gt; Debuggee nsk.jdwp.ThreadReference.ForceEarlyReturn.forceEarlyReturn002.forceEarlyReturn002a : sending the command: ready&lt;br/&gt;
Create command: ThreadReference.ForceEarlyReturn&lt;br/&gt;
threadID = 19&lt;br/&gt;
Value = (INT)0&lt;br/&gt;
Sending command packet:&lt;br/&gt;
Packet header (11 bytes):&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000 (length) : 0x00000018 (24)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0004 (id)     : 0x00000019 (25)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0008 (flags)  : 0x00 (0)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0009 (cmd set): 0x0b (11)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;000a (command): 0x0e (14)&lt;br/&gt;
Entire packet (24 bytes): &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000: 00 00 00 18 00 00 00 19 00 0b 0e 00 00 00 00 00   ................&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0010: 00 00 13 49 00 00 00 00                           ...I....&lt;br/&gt;
Packet end&lt;br/&gt;
Waiting for reply packet&lt;br/&gt;
Reply packet received:&lt;br/&gt;
Packet header (11 bytes):&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000 (length) : 0x0000000b (11)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0004 (id)     : 0x00000019 (25)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0008 (flags)  : 0x80 (-128)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;000a (error)  : 0x000d (13)&lt;br/&gt;
Entire packet (11 bytes): &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000: 00 00 00 0b 00 00 00 19 80 00 0d                  ...........&lt;br/&gt;
Packet end&lt;br/&gt;
Expected error: 13&lt;br/&gt;
debugee.stderr&amp;gt; Debuggee: received the command: stateTestThreadNextState&lt;br/&gt;
debugee.stderr&amp;gt; Debuggee nsk.jdwp.ThreadReference.ForceEarlyReturn.forceEarlyReturn002.forceEarlyReturn002a : sending the command: ready&lt;br/&gt;
Received signal from debugee: ready&lt;br/&gt;
Create command: ThreadReference.ForceEarlyReturn&lt;br/&gt;
threadID = 19&lt;br/&gt;
Value = (INT)0&lt;br/&gt;
Sending command packet:&lt;br/&gt;
Packet header (11 bytes):&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000 (length) : 0x00000018 (24)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0004 (id)     : 0x0000001a (26)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0008 (flags)  : 0x00 (0)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0009 (cmd set): 0x0b (11)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;000a (command): 0x0e (14)&lt;br/&gt;
Entire packet (24 bytes): &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000: 00 00 00 18 00 00 00 1a 00 0b 0e 00 00 00 00 00   ................&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0010: 00 00 13 49 00 00 00 00                           ...I....&lt;br/&gt;
Packet end&lt;br/&gt;
Waiting for reply packet&lt;br/&gt;
Reply packet received:&lt;br/&gt;
Packet header (11 bytes):&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000 (length) : 0x0000000b (11)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0004 (id)     : 0x0000001a (26)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0008 (flags)  : 0x80 (-128)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;000a (error)  : 0x000d (13)&lt;br/&gt;
Entire packet (11 bytes): &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000: 00 00 00 0b 00 00 00 1a 80 00 0d                  ...........&lt;br/&gt;
Packet end&lt;br/&gt;
Expected error: 13&lt;br/&gt;
debugee.stderr&amp;gt; Debuggee: received the command: stateTestThreadNextState&lt;br/&gt;
debugee.stderr&amp;gt; Debuggee nsk.jdwp.ThreadReference.ForceEarlyReturn.forceEarlyReturn002.forceEarlyReturn002a : sending the command: ready&lt;br/&gt;
Received signal from debugee: ready&lt;br/&gt;
Create command: ThreadReference.ForceEarlyReturn&lt;br/&gt;
threadID = 19&lt;br/&gt;
Value = (INT)0&lt;br/&gt;
Sending command packet:&lt;br/&gt;
Packet header (11 bytes):&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000 (length) : 0x00000018 (24)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0004 (id)     : 0x0000001b (27)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0008 (flags)  : 0x00 (0)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0009 (cmd set): 0x0b (11)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;000a (command): 0x0e (14)&lt;br/&gt;
Entire packet (24 bytes): &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000: 00 00 00 18 00 00 00 1b 00 0b 0e 00 00 00 00 00   ................&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0010: 00 00 13 49 00 00 00 00                           ...I....&lt;br/&gt;
Packet end&lt;br/&gt;
Waiting for reply packet&lt;br/&gt;
Reply packet received:&lt;br/&gt;
Packet header (11 bytes):&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000 (length) : 0x0000000b (11)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0004 (id)     : 0x0000001b (27)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0008 (flags)  : 0x80 (-128)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;000a (error)  : 0x000d (13)&lt;br/&gt;
Entire packet (11 bytes): &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000: 00 00 00 0b 00 00 00 1b 80 00 0d                  ...........&lt;br/&gt;
Packet end&lt;br/&gt;
Expected error: 13&lt;br/&gt;
debugee.stderr&amp;gt; Debuggee: received the command: stateTestThreadNextState&lt;br/&gt;
debugee.stderr&amp;gt; Debuggee nsk.jdwp.ThreadReference.ForceEarlyReturn.forceEarlyReturn002.forceEarlyReturn002a : sending the command: ready&lt;br/&gt;
Received signal from debugee: ready&lt;br/&gt;
Create command: ThreadReference.ForceEarlyReturn&lt;br/&gt;
threadID = 19&lt;br/&gt;
Value = (INT)0&lt;br/&gt;
Sending command packet:&lt;br/&gt;
Packet header (11 bytes):&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000 (length) : 0x00000018 (24)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0004 (id)     : 0x0000001c (28)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0008 (flags)  : 0x00 (0)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0009 (cmd set): 0x0b (11)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;000a (command): 0x0e (14)&lt;br/&gt;
Entire packet (24 bytes): &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000: 00 00 00 18 00 00 00 1c 00 0b 0e 00 00 00 00 00   ................&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0010: 00 00 13 49 00 00 00 00                           ...I....&lt;br/&gt;
Packet end&lt;br/&gt;
Waiting for reply packet&lt;br/&gt;
Reply packet received:&lt;br/&gt;
Packet header (11 bytes):&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000 (length) : 0x0000000b (11)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0004 (id)     : 0x0000001c (28)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0008 (flags)  : 0x80 (-128)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;000a (error)  : 0x000a (10)&lt;br/&gt;
Entire packet (11 bytes): &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000: 00 00 00 0b 00 00 00 1c 80 00 0a                  ...........&lt;br/&gt;
Packet end&lt;br/&gt;
Expected error: 10&lt;br/&gt;
Create command: ThreadReference.ForceEarlyReturn&lt;br/&gt;
threadID = 19&lt;br/&gt;
Value = (INT)0&lt;br/&gt;
Sending command packet:&lt;br/&gt;
Packet header (11 bytes):&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000 (length) : 0x00000018 (24)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0004 (id)     : 0x0000001e (30)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0008 (flags)  : 0x00 (0)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0009 (cmd set): 0x0b (11)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;000a (command): 0x0e (14)&lt;br/&gt;
Entire packet (24 bytes): &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000: 00 00 00 18 00 00 00 1e 00 0b 0e 00 00 00 00 00   ................&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0010: 00 00 13 49 00 00 00 00                           ...I....&lt;br/&gt;
Packet end&lt;br/&gt;
Waiting for reply packet&lt;br/&gt;
Reply packet received:&lt;br/&gt;
Packet header (11 bytes):&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000 (length) : 0x0000000b (11)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0004 (id)     : 0x0000001e (30)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0008 (flags)  : 0x80 (-128)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;000a (error)  : 0x000a (10)&lt;br/&gt;
Entire packet (11 bytes): &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000: 00 00 00 0b 00 00 00 1e 80 00 0a                  ...........&lt;br/&gt;
Packet end&lt;br/&gt;
Expected error: 10&lt;br/&gt;
debugee.stderr&amp;gt; Debuggee: received the command: stopInNative&lt;br/&gt;
debugee.stderr&amp;gt; Enter native method&lt;br/&gt;
debugee.stderr&amp;gt; Debuggee nsk.jdwp.ThreadReference.ForceEarlyReturn.forceEarlyReturn002.forceEarlyReturn002a : sending the command: ready&lt;br/&gt;
Received signal from debugee: ready&lt;br/&gt;
Create command: ThreadReference.ForceEarlyReturn&lt;br/&gt;
threadID = 20&lt;br/&gt;
Value = (INT)0&lt;br/&gt;
Sending command packet:&lt;br/&gt;
Packet header (11 bytes):&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000 (length) : 0x00000018 (24)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0004 (id)     : 0x00000033 (51)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0008 (flags)  : 0x00 (0)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0009 (cmd set): 0x0b (11)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;000a (command): 0x0e (14)&lt;br/&gt;
Entire packet (24 bytes): &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000: 00 00 00 18 00 00 00 33 00 0b 0e 00 00 00 00 00   .......3........&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0010: 00 00 14 49 00 00 00 00                           ...I....&lt;br/&gt;
Packet end&lt;br/&gt;
Waiting for reply packet&lt;br/&gt;
Reply packet received:&lt;br/&gt;
Packet header (11 bytes):&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000 (length) : 0x0000000b (11)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0004 (id)     : 0x00000033 (51)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0008 (flags)  : 0x80 (-128)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;000a (error)  : 0x000d (13)&lt;br/&gt;
Entire packet (11 bytes): &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000: 00 00 00 0b 00 00 00 33 80 00 0d                  .......3...&lt;br/&gt;
Packet end&lt;br/&gt;
Expected error: 13&lt;br/&gt;
Create command: ThreadReference.ForceEarlyReturn&lt;br/&gt;
threadID = 20&lt;br/&gt;
Value = (INT)0&lt;br/&gt;
Sending command packet:&lt;br/&gt;
Packet header (11 bytes):&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000 (length) : 0x00000018 (24)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0004 (id)     : 0x00000035 (53)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0008 (flags)  : 0x00 (0)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0009 (cmd set): 0x0b (11)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;000a (command): 0x0e (14)&lt;br/&gt;
Entire packet (24 bytes): &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000: 00 00 00 18 00 00 00 35 00 0b 0e 00 00 00 00 00   .......5........&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0010: 00 00 14 49 00 00 00 00                           ...I....&lt;br/&gt;
Packet end&lt;br/&gt;
Waiting for reply packet&lt;br/&gt;
Reply packet received:&lt;br/&gt;
Packet header (11 bytes):&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000 (length) : 0x0000000b (11)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0004 (id)     : 0x00000035 (53)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0008 (flags)  : 0x80 (-128)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;000a (error)  : 0x0020 (32)&lt;br/&gt;
Entire packet (11 bytes): &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000: 00 00 00 0b 00 00 00 35 80 00 20                  .......5.. &lt;br/&gt;
Packet end&lt;br/&gt;
Expected error: 32&lt;br/&gt;
Waiting for reply packet&lt;br/&gt;
debugee.stderr&amp;gt; Debuggee: received the command: exitInNative&lt;br/&gt;
debugee.stderr&amp;gt; Debuggee nsk.jdwp.ThreadReference.ForceEarlyReturn.forceEarlyReturn002.forceEarlyReturn002a : sending the command: ready&lt;br/&gt;
Reply packet received:&lt;br/&gt;
Packet header (11 bytes):&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000 (length) : 0x0000000f (15)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0004 (id)     : 0x00000036 (54)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0008 (flags)  : 0x80 (-128)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;000a (error)  : 0x0000 (0)&lt;br/&gt;
Entire packet (15 bytes): &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000: 00 00 00 0f 00 00 00 36 80 00 00 00 00 00 02      .......6.......&lt;br/&gt;
Packet end&lt;br/&gt;
Checking reply packet header&lt;br/&gt;
Parsing reply packet:&lt;br/&gt;
debugee.stderr&amp;gt; Debuggee: received the command: startNewThread&lt;br/&gt;
debugee.stderr&amp;gt; Debuggee nsk.jdwp.ThreadReference.ForceEarlyReturn.forceEarlyReturn002.forceEarlyReturn002a : sending the command: ready&lt;br/&gt;
Create command: ThreadReference.ForceEarlyReturn&lt;br/&gt;
threadID = 21&lt;br/&gt;
Value = (VOID)0&lt;br/&gt;
Sending command packet:&lt;br/&gt;
Packet header (11 bytes):&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000 (length) : 0x00000014 (20)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0004 (id)     : 0x00000037 (55)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0008 (flags)  : 0x00 (0)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0009 (cmd set): 0x0b (11)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;000a (command): 0x0e (14)&lt;br/&gt;
Entire packet (20 bytes): &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000: 00 00 00 14 00 00 00 37 00 0b 0e 00 00 00 00 00   .......7........&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0010: 00 00 15 56                                       ...V&lt;br/&gt;
Packet end&lt;br/&gt;
Waiting for reply packet&lt;br/&gt;
Reply packet received:&lt;br/&gt;
Packet header (11 bytes):&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000 (length) : 0x0000000b (11)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0004 (id)     : 0x00000037 (55)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0008 (flags)  : 0x80 (-128)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;000a (error)  : 0x001f (31)&lt;br/&gt;
Entire packet (11 bytes): &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000: 00 00 00 0b 00 00 00 37 80 00 1f                  .......7...&lt;br/&gt;
Packet end&lt;br/&gt;
Expected error: 31&lt;br/&gt;
Waiting for reply packet&lt;br/&gt;
Reply packet received:&lt;br/&gt;
Packet header (11 bytes):&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000 (length) : 0x0000000b (11)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0004 (id)     : 0x00000038 (56)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0008 (flags)  : 0x80 (-128)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;000a (error)  : 0x0000 (0)&lt;br/&gt;
Entire packet (11 bytes): &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0000: 00 00 00 0b 00 00 00 38 80 00 00                  .......8...&lt;br/&gt;
Packet end&lt;br/&gt;
Checking reply packet header&lt;br/&gt;
Parsing reply packet:&lt;br/&gt;
Received signal from debugee: ready&lt;br/&gt;
Sending signal to debugee: quit&lt;br/&gt;
Waiting for debugee exits&lt;br/&gt;
Timeout signalled after 480 seconds&lt;br/&gt;
# ERROR: Debugee FAILED with exit code: 134&lt;br/&gt;
The following stacktrace is for failure analysis.&lt;br/&gt;
nsk.share.TestFailure: Debugee FAILED with exit code: 134&lt;br/&gt;
	at nsk.share.Log.logExceptionForFailureAnalysis(Log.java:431)&lt;br/&gt;
	at nsk.share.Log.complain(Log.java:402)&lt;br/&gt;
	at nsk.share.jdwp.TestDebuggerType1.quitDebugee(TestDebuggerType1.java:191)&lt;br/&gt;
	at nsk.share.jdwp.TestDebuggerType1.runIt(TestDebuggerType1.java:131)&lt;br/&gt;
	at nsk.jdwp.ThreadReference.ForceEarlyReturn.forceEarlyReturn002.forceEarlyReturn002.run(forceEarlyReturn002.java:103)&lt;br/&gt;
	at nsk.jdwp.ThreadReference.ForceEarlyReturn.forceEarlyReturn002.forceEarlyReturn002.main(forceEarlyReturn002.java:99)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainWrapper$MainTask.run(MainWrapper.java:138)&lt;br/&gt;
	at java.base/java.lang.VirtualThread.run(VirtualThread.java:309)&lt;br/&gt;
TEST FAILED&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
#&amp;gt;  &lt;br/&gt;
#&amp;gt;  SUMMARY: Following errors occured&lt;br/&gt;
#&amp;gt;      during test execution:&lt;br/&gt;
#&amp;gt;  &lt;br/&gt;
# ERROR: Debugee FAILED with exit code: 134&lt;br/&gt;
----------System.err:(0/0)----------&lt;br/&gt;
----------rerun:(42/11323)*----------&lt;br/&gt;
&lt;br/&gt;
&amp;lt;snip&amp;gt;&lt;br/&gt;
&lt;br/&gt;
result: Error. Program `/opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-966/linux-aarch64-debug.jdk/jdk-22/fastdebug/bin/java&amp;#39; timed out (timeout set to 480000ms, elapsed time including timeout handling was 835480ms).&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
The test timed out, but it appears to have happened because&lt;br/&gt;
the debuggee failed with &amp;quot;exit code: 134&amp;quot;. I don&amp;#39;t see any&lt;br/&gt;
hs_err_pid files in the artifacts for this test run.</description>
                <environment></environment>
        <key id="5109420">JDK-8315486</key>
            <summary>vmTestbase/nsk/jdwp/ThreadReference/ForceEarlyReturn/forceEarlyReturn002/forceEarlyReturn002.java timed out</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="amenkov">Alex Menkov</assignee>
                                    <reporter username="dcubed">Daniel Daugherty</reporter>
                        <labels>
                            <label>genzgc</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>loom</label>
                            <label>noreg-self</label>
                            <label>tier5</label>
                    </labels>
                <created>Thu, 31 Aug 2023 14:49:27 -0700</created>
                <updated>Wed, 29 Jan 2025 02:36:17 -0800</updated>
                            <resolved>Thu, 21 Sep 2023 15:25:20 -0700</resolved>
                                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>core-svc</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14744869" author="roboduke" created="Tue, 28 Jan 2025 07:07:47 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/3248&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/3248&lt;/a&gt;&lt;br/&gt;
Date: 2025-01-28 15:01:07 +0000</comment>
                            <comment id="14744868" author="roboduke" created="Tue, 28 Jan 2025 07:04:18 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1364&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1364&lt;/a&gt;&lt;br/&gt;
Date: 2025-01-28 14:57:35 +0000</comment>
                            <comment id="14744865" author="goetz" created="Tue, 28 Jan 2025 06:55:10 -0800"  >Fix request [17u,21u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 17.0.15-oracle,21.0.7-oracle.&lt;br/&gt;
No risk, only a test change&lt;br/&gt;
Clean backport.&lt;br/&gt;
Test passes. SAP nightly testing passed.</comment>
                            <comment id="14613009" author="dukebot" created="Thu, 21 Sep 2023 15:25:19 -0700"  >Changeset: 041510dc&lt;br/&gt;
Author:    Alex Menkov &amp;lt;&lt;a href=&apos;mailto:amenkov@openjdk.org&apos;&gt;amenkov@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-09-21 22:24:24 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/041510dc21df36d9860f4f0048241c2cabb55ee7&quot;&gt;https://git.openjdk.org/jdk/commit/041510dc21df36d9860f4f0048241c2cabb55ee7&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14609363" author="amenkov" created="Wed, 6 Sep 2023 17:30:13 -0700"  >[~cjplummer] with SUSPEND_THREAD we can get some suspended non-test threads and this can cause unexpected side effects.&lt;br/&gt;
So I developed a fix with ThreadOnly modifier</comment>
                            <comment id="14609362" author="roboduke" created="Wed, 6 Sep 2023 16:50:48 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/15601&quot;&gt;https://git.openjdk.org/jdk/pull/15601&lt;/a&gt;&lt;br/&gt;
Date: 2023-09-06 20:02:44 +0000</comment>
                            <comment id="14608225" author="cjplummer" created="Thu, 31 Aug 2023 20:23:18 -0700"  >I guess you could do that. It&amp;#39;s a bit tricky. The debuggee will need to store the Thread instance in a field or local and the debugger will need to use JDWP to fetch it.&lt;br/&gt;
&lt;br/&gt;
Another option is perhaps to use SUSPEND_THREAD instead of SUSPEND_ALL. That should avoid any issues with the main debuggee thread remaining suspended when the spurious ThreadStart events come in. If you want to make sure you are doing the ForceEarlyReturn on the correct thread, you can do a name check on it. There&amp;#39;s already an example in the code of getting the threadID for a named thread:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long threadID = debuggee.getThreadID(AbstractDebuggeeTest.stateTestThreadName);&lt;br/&gt;
&lt;br/&gt;
You just need to name the thread that is created when the COMMAND_START_NEW_THREAD command is issued so you can then lookup the threadID up by name. I think with this approach it will be ok if there are unprocessed ThreadStartEvents when the test wraps up.</comment>
                            <comment id="14608218" author="amenkov" created="Thu, 31 Aug 2023 19:13:51 -0700"  >[~cjplummer] Great analysis!&lt;br/&gt;
And the test does not check name of the started thread as it does for other testcases.&lt;br/&gt;
I was confused seeing &amp;quot;Received signal from debugee: ready&amp;quot;, but now realized that debugee write it after it completes &amp;quot;startNewThread&amp;quot; command, i.e. before THREAD_START event is generated.&lt;br/&gt;
To solve the issue we can use ThreadOnly modifier and request THREAD_START event for the thread with required threadID (need to create Thread object in advance to get its ID from debugee).</comment>
                            <comment id="14608209" author="cjplummer" created="Thu, 31 Aug 2023 16:49:38 -0700"  >See &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8286789&quot; title=&quot;Test forceEarlyReturn002.java timed out&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8286789&quot;&gt;&lt;strike&gt;JDK-8286789&lt;/strike&gt;&lt;/a&gt; for a recent attempt to fix this issue. The suspect was the potential infinite loop but that does not appear to be the case.</comment>
                            <comment id="14608207" author="cjplummer" created="Thu, 31 Aug 2023 16:42:31 -0700"  >There was a core file generated and the failure_handler ran gdb on it. The output says:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;Program terminated with signal SIGABRT, Aborted.&lt;br/&gt;
&lt;br/&gt;
I believe this is the result of the test timing out and jtreg aborting it. We see the following in the test log:&lt;br/&gt;
&lt;br/&gt;
Sending signal to debugee: quit&lt;br/&gt;
Waiting for debugee exits&lt;br/&gt;
Timeout signalled after 480 seconds&lt;br/&gt;
# ERROR: Debugee FAILED with exit code: 134 &lt;br/&gt;
&lt;br/&gt;
It&amp;#39;s unclear why quit has been sent to the debuggee yet the debuggee hasn&amp;#39;t exited. I did note that there are 3 debuggee threads handling ThreadStart events. They all look like:&lt;br/&gt;
&lt;br/&gt;
#0  0x0000ffff929d5ca8 in pthread_cond_wait@@GLIBC_2.17 () from /lib64/libpthread.so.0&lt;br/&gt;
...&lt;br/&gt;
#10 0x0000ffff918522c8 in JvmtiEnv::RawMonitorWait(JvmtiRawMonitor*, long) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-966/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#11 0x0000ffff9049855c in debugMonitorWait () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-966/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/libjdwp.so&lt;br/&gt;
#12 0x0000ffff90487f74 in enqueueCommand () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-966/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/libjdwp.so&lt;br/&gt;
#13 0x0000ffff904891dc in eventHelper_reportEvents () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-966/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/libjdwp.so&lt;br/&gt;
#14 0x0000ffff90482dbc in reportEvents.part.0 () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-966/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/libjdwp.so&lt;br/&gt;
#15 0x0000ffff90483310 in event_callback () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-966/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/libjdwp.so&lt;br/&gt;
#16 0x0000ffff904848cc in cbThreadStart () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-966/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/libjdwp.so&lt;br/&gt;
#17 0x0000ffff91873a90 in JvmtiExport::post_thread_start(JavaThread*) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-966/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#18 0x0000ffff915b4884 in JavaThread::run() () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-966/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
...&lt;br/&gt;
&lt;br/&gt;
Each of these threads has enqueued a ThreadStartEvent to be sent to the debugger and are awaiting completion of the event being sent. The test sets up a ThreadStartRequest using the SUSPEND_ALL policy. There is likely a 4th thread for which the event has been sent, resulting in a SUSPEND_ALL that is causing these other 3 threads to have to wait for threads to be resumed before they in turn send their ThreadStartEvent and do a SUSPEND_ALL.&lt;br/&gt;
&lt;br/&gt;
The following on the debugger side of the test is suspicious:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// create request for ThreadStart event&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int requestID = createThreadStartEventRequest();&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// force debuggee start new thread&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pipe.println(forceEarlyReturn002a.COMMAND_START_NEW_THREAD);&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// receive ThreadStart event&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EventPacket eventPacket = receiveSingleEvent(JDWP.EventKind.THREAD_START, requestID);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;... &amp;lt;process packet&amp;gt;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;clearRequest(JDWP.EventKind.THREAD_START, requestID);&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;debuggee.resume();&lt;br/&gt;
&lt;br/&gt;
After this the test starts doing exit code, which involves sending the &amp;quot;quit&amp;quot; command. One problem here is that although the test is requesting that the debuggee create a specific thread, that doesn&amp;#39;t prevent the creation of other threads we normally seeing on startup such as for the Common-Cleaner thread. Since this test run is also being running with the virtual thread wrapper enabled, probably there are also many carrier threads being started.&lt;br/&gt;
&lt;br/&gt;
The first THREAD_START event may not even be for the requested thread. That&amp;#39;s not really an issue for the test, but what is an issues is that other THREAD_START events might be queued up on the debuggee side. The test does a vm.resume(). That unblocks all the threads trying to send a THREAD_START event. One of them will win out, do a SUSPEND_All and now all threads are suspended and the debuggee can&amp;#39;t process the quit command. Meanwhile the debugger side it is just waiting the debuggee to respond to the &amp;quot;quit&amp;quot; command (see TestDebuggerType1.quitDebugee()).&lt;br/&gt;
&lt;br/&gt;
In order to unstick the debuggee, the debugger will need to issue one debuggee.resume() per outstanding THREAD_START event, but without reading in all the outstanding events, it doesn&amp;#39;t know how many to do. So that means repeated calls to the following:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EventPacket eventPacket = debuggee.getEventPacket();&lt;br/&gt;
&lt;br/&gt;
But I believe this will block if there are no outstanding packets. However, it looks like there is a version that takes a timeout, so that can be used instead. It will return an empty packet if there is a transport timeout. This will result in an PacketFormatException when trying to access the EventPacket, so I guess we just need to keep fetching packets until this exception is thrown.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5149276">JDK-8348791</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5149277">JDK-8348792</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5149278">JDK-8348793</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5149434">JDK-8348944</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5149441">JDK-8348951</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5074960">JDK-8286789</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19300"><![CDATA[aarch64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i32yyb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17417"><![CDATA[b17]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="370"><![CDATA[debugger]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>