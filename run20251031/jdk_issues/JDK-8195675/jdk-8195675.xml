<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 08:51:54 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8195675] Call to insertText with single character from custom Input Method ignored</title>
                <link>https://bugs.openjdk.org/browse/JDK-8195675</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>FULL PRODUCT VERSION :&lt;br/&gt;
I don&amp;#39;t have java installed to run at the command line. OmegaT reports that it is running on Java 1.8.0_144 (64-bit). jEdit reports that is using Java 1.8.0_151 (which I downloaded directly, independent of jEdit).&lt;br/&gt;
&lt;br/&gt;
ADDITIONAL OS VERSION INFORMATION :&lt;br/&gt;
macOS 10.12.6 (16G1114)&lt;br/&gt;
&lt;br/&gt;
EXTRA RELEVANT SYSTEM CONFIGURATION :&lt;br/&gt;
I am reporting behavior observed in both OmegaT and jEdit (see version info).&lt;br/&gt;
&lt;br/&gt;
Here is the original bug report filed with OmegaT: &lt;a href=&quot;https://sourceforge.net/p/omegat/bugs/889/&quot;&gt;https://sourceforge.net/p/omegat/bugs/889/&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
Using the Keyman (Keyman.com) ISIS-Devanagari keyboard, I expected to be able to type the letter &amp;quot;j&amp;quot; and see &#2332;, but instead I just got a plain &amp;quot;j&amp;quot;. Typing a subsequent &amp;quot;i&amp;quot; does insert the correct two-character sequence (&#2332;&#2367;), but it fails to delete and replace the errant &amp;quot;j&amp;quot; character. I have written a small test input method to reproduce this with a minimum of code, and it appears that the problem is calling insertText: and passing a single character as the string to insert). If I pass two &#2332; characters or a space followed by a &#2332;, it outputs just fine. I also tested this with a simple Roman script letter using a test case where typing the letter &amp;quot;l&amp;quot; was supposed to produce a &amp;quot;j&amp;quot; and that also failed. If you don&amp;#39;t want to download and use Keyman to reproduce this, I would be happy to provide my simple test IM.&lt;br/&gt;
&lt;br/&gt;
STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :&lt;br/&gt;
To reproduce using Keyman:&lt;br/&gt;
1) Download and install Keyman for macOS from &lt;a href=&quot;https://keyman.com/macos/&quot;&gt;https://keyman.com/macos/&lt;/a&gt;&lt;br/&gt;
2) Follow instructions to install Keyman and set it up as an Input Method: &lt;a href=&quot;https://help.keyman.com/products/mac/1.0/docs/start_download-install_keyman.php?_ga=2.174123428.780044351.1516121660-886959843.1497845253&quot;&gt;https://help.keyman.com/products/mac/1.0/docs/start_download-install_keyman.php?_ga=2.174123428.780044351.1516121660-886959843.1497845253&lt;/a&gt;&lt;br/&gt;
3) Follow instructions here to download and install a keyboard: &lt;a href=&quot;https://help.keyman.com/products/mac/1.0/docs/start_download-install_keyboard.php&quot;&gt;https://help.keyman.com/products/mac/1.0/docs/start_download-install_keyboard.php&lt;/a&gt;. Download and select the ISIS-Devanagari keyboard as the keyboard for Keyman to use.&lt;br/&gt;
In OmegaT, jEdit, or any application that uses the text editor in JDK, type a &amp;quot;j&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
If necessary, I can provide a very simple test IM that will illustrate the problem without requiring the above steps, but since Keyman is already packaged up nicely for easy installation, this is probably the easiest way to reproduce.&lt;br/&gt;
&lt;br/&gt;
EXPECTED VERSUS ACTUAL BEHAVIOR :&lt;br/&gt;
EXPECTED -&lt;br/&gt;
You should get a &#2332; character. (Furthermore, typing a subsequent &amp;quot;i&amp;quot; should replace the &#2332; with &#2332;&#2367;. However, this could require some more work on our end because many &amp;quot;legacy&amp;quot; apps that don&amp;#39;t use Apple&amp;#39;s editing controls require a special mode in Keyman to correctly handle character replacements.) You can observe the correct behavior of the keyboard in any standard Apple app, such as Notes or Messages.&lt;br/&gt;
ACTUAL -&lt;br/&gt;
Outputs a plain &amp;quot;j&amp;quot; character.&lt;br/&gt;
&lt;br/&gt;
REPRODUCIBILITY :&lt;br/&gt;
This bug can be reproduced always.&lt;br/&gt;
&lt;br/&gt;
CUSTOMER SUBMITTED WORKAROUND :&lt;br/&gt;
The only workaround I know of would be to type the text in another application and paste it into the application that uses the JDK editor.&lt;br/&gt;
&lt;br/&gt;
Note that this deficiency is not directly hampering the development of Keyman (which has been chosen as the software to serve as the official reference implementation for the LDML standard). It does, however, affect all of any software whose editing is based on this JDK editing control. Although OmegaT declined to follow up on this directly, they do have affected users. I don&amp;#39;t know of any existing users complaining about jEdit or any other software that uses this control, but there may well be some.&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="4949701">JDK-8195675</key>
            <summary>Call to insertText with single character from custom Input Method ignored</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="srl">Steven Loomis</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>cssn25_01_01</label>
                            <label>dcs-3p</label>
                            <label>dcspks</label>
                            <label>jdk11u-fix-request</label>
                            <label>jdk11u-fix-yes</label>
                            <label>jdk17u-critical-no</label>
                            <label>jdk17u-critical-request</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>noreg-hard</label>
                            <label>reproducer-yes</label>
                            <label>sust-ojdk-bp</label>
                            <label>webbug</label>
                    </labels>
                <created>Tue, 16 Jan 2018 09:11:48 -0800</created>
                <updated>Thu, 30 Jan 2025 07:35:56 -0800</updated>
                            <resolved>Tue, 28 May 2024 09:46:46 -0700</resolved>
                                    <version>8u151</version>
                    <version>10</version>
                                    <fixVersion>23</fixVersion>
                                    <component>client-libs</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>11</watches>
                                                                                                                <comments>
                            <comment id="14746264" author="srl" created="Thu, 30 Jan 2025 07:31:16 -0800"  >[~sgehwolf] thanks-  somehow i missed that the 11 one was ready! </comment>
                            <comment id="14746263" author="sgehwolf" created="Thu, 30 Jan 2025 07:28:13 -0800"  >[~srl] &lt;a href=&quot;https://github.com/openjdk/jdk11u-dev/pull/2954&quot;&gt;https://github.com/openjdk/jdk11u-dev/pull/2954&lt;/a&gt; is ready for integration. Type /integrate? The JDK 8u PR needs a review from an SME first.</comment>
                            <comment id="14746254" author="srl" created="Thu, 30 Jan 2025 07:10:15 -0800"  >[~sgehwolf] hi - can you help me with getting this into OpenJDK 8 and 11? This really impacts minority language users trying to type in Java apps.</comment>
                            <comment id="14736764" author="dmarkov" created="Wed, 8 Jan 2025 08:51:41 -0800"  >[~srl] I will integrate the fix into Oracle JDK 8 and 11.&lt;br/&gt;
&lt;br/&gt;
[~sgehwolf] Can you please help with approval for integration into OpenJDK  8 and 11? </comment>
                            <comment id="14736724" author="srl" created="Wed, 8 Jan 2025 07:16:06 -0800"  >[~dmarkov] thanks- is it possible to get a triage for Java 8 and 11?</comment>
                            <comment id="14727235" author="srl" created="Fri, 29 Nov 2024 12:29:33 -0800"  >Ping, any way to get the 8 and 11 request checked?</comment>
                            <comment id="14716812" author="srl" created="Fri, 25 Oct 2024 14:57:40 -0700"  >Update:&lt;br/&gt;
&lt;br/&gt;
I have verified this fix in all four open PRs - 8, 11, 17, 21, as well as verifying that current nightly downloads of v23 already have the fix.&lt;br/&gt;
&lt;br/&gt;
Typing `ji` - `naan` - `kala` produces the expected text in JEdit&lt;br/&gt;
(&#2332;&#2367;-&#2344;&#2366;&#2309;&#2344;-&#2325;&#2366;&#2354;&#2366;) in all four PRs, plus in the current versions of 23 (which already have the fix merged)&lt;br/&gt;
&lt;br/&gt;
Please consider these fixes.</comment>
                            <comment id="14714498" author="roboduke" created="Thu, 17 Oct 2024 06:25:35 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/2971&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/2971&lt;/a&gt;&lt;br/&gt;
Date: 2024-10-17 13:17:40 +0000</comment>
                            <comment id="14714497" author="roboduke" created="Thu, 17 Oct 2024 06:20:07 -0700"  >[jdk17u-fix-request] Approval Request from Steven R. Loomis&lt;br/&gt;
java.awt components did not work properly on macOS with custom input methods, the net effect is that minority language keyboards did not work properly with Java. Low risk, the fix handles this situation similarly to how Apple&amp;#39;s own &amp;#39;kotoeri&amp;#39; input method was handled on a long term basis, so it is a well-worn path. Patch should apply cleanly and was code reviewed</comment>
                            <comment id="14713759" author="roboduke" created="Wed, 16 Oct 2024 14:22:00 -0700"  >[jdk11u-fix-request] Approval Request from Steven R. Loomis&lt;br/&gt;
java.awt components did not work properly on macOS with custom input methods, the net effect is that minority language keyboards did not work properly with Java. Low risk, the fix handles this situation similarly to how Apple&amp;#39;s own &amp;#39;kotoeri&amp;#39; input method was handled on a long term basis, so it is a well-worn path. Patch should apply cleanly and was code reviewed</comment>
                            <comment id="14713758" author="roboduke" created="Wed, 16 Oct 2024 14:21:06 -0700"  >[jdk17u-critical-request] Approval Request from Steven R. Loomis&lt;br/&gt;
java.awt components did not work properly on macOS with custom input methods, the net effect is that minority language keyboards did not work properly with Java. Low risk, the fix handles this situation similarly to how Apple&amp;#39;s own &amp;#39;kotoeri&amp;#39; input method was handled on a long term basis, so it is a well-worn path. Patch should apply cleanly and was code reviewed</comment>
                            <comment id="14713757" author="roboduke" created="Wed, 16 Oct 2024 14:20:38 -0700"  >[jdk8u-fix-request] Approval Request from Steven R. Loomis&lt;br/&gt;
java.awt components did not work properly on macOS with custom input methods, the net effect is that minority language keyboards did not work properly with Java. Low risk, the fix handles this situation similarly to how Apple&amp;#39;s own &amp;#39;kotoeri&amp;#39; input method was handled on a long term basis, so it is a well-worn path. Patch should apply cleanly and was code reviewed</comment>
                            <comment id="14713749" author="roboduke" created="Wed, 16 Oct 2024 13:27:28 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/2954&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/2954&lt;/a&gt;&lt;br/&gt;
Date: 2024-10-16 20:22:48 +0000</comment>
                            <comment id="14713748" author="roboduke" created="Wed, 16 Oct 2024 13:24:06 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk8u-dev/pull/595&quot;&gt;https://git.openjdk.org/jdk8u-dev/pull/595&lt;/a&gt;&lt;br/&gt;
Date: 2024-10-16 20:19:03 +0000</comment>
                            <comment id="14713738" author="roboduke" created="Wed, 16 Oct 2024 13:00:22 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u/pull/403&quot;&gt;https://git.openjdk.org/jdk17u/pull/403&lt;/a&gt;&lt;br/&gt;
Date: 2024-10-16 19:52:36 +0000</comment>
                            <comment id="14713730" author="srl" created="Wed, 16 Oct 2024 12:24:11 -0700"  >Fix Request&lt;br/&gt;
java.awt components did not work properly on macOS with custom input methods, the net effect is that minority language keyboards did not work properly with Java. Low risk, the fix handles this situation similarly to how Apple&amp;#39;s own &amp;#39;kotoeri&amp;#39; input method was handled on a long term basis, so it is a well-worn path. Patch should apply cleanly and was code reviewed.&lt;br/&gt;
&lt;br/&gt;
Fix in v23: &lt;a href=&quot;https://github.com/openjdk/jdk/pull/17921&quot;&gt;https://github.com/openjdk/jdk/pull/17921&lt;/a&gt;</comment>
                            <comment id="14712805" author="roboduke" created="Mon, 14 Oct 2024 13:52:47 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1052&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1052&lt;/a&gt;&lt;br/&gt;
Date: 2024-10-14 16:43:35 +0000</comment>
                            <comment id="14712775" author="srl" created="Mon, 14 Oct 2024 13:29:59 -0700"  >[~aivanov] it&amp;#39;s already in 23u - the original PR was merged in May. - &lt;a href=&quot;https://github.com/openjdk/jdk23u/commit/b8f2ec9091f9f7e5f4611991d04dd8aa113b94fd&quot;&gt;https://github.com/openjdk/jdk23u/commit/b8f2ec9091f9f7e5f4611991d04dd8aa113b94fd&lt;/a&gt;</comment>
                            <comment id="14712773" author="aivanov" created="Mon, 14 Oct 2024 13:20:59 -0700"  >[~srl] You should not skip backporting to 23u.&lt;br/&gt;
Thus, you should backport to 23u (jdk23u repo) before you backport to 21u or any previous LTS.&lt;br/&gt;
&lt;br/&gt;
You do not need to create a backport record in advance unless you really have to do it for whatever reason. Let the Skara bot which handles integration create it for you.&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s a quote from &lt;a href=&quot;https://openjdk.org/guide/#working-with-backports-in-jbs&quot;&gt;https://openjdk.org/guide/#working-with-backports-in-jbs&lt;/a&gt;&lt;br/&gt;
&#8220;In general there&#8217;s no need to create backport issues in JBS manually. All work that&#8217;s done in JBS in preparation for a backport (requesting approvals etc) is done in the main issue. The backport issue will be created automatically by the bots when you integrate the change to the source code repository.&#8221;</comment>
                            <comment id="14676873" author="dukebot" created="Tue, 28 May 2024 09:46:45 -0700"  >Changeset: b8f2ec90&lt;br/&gt;
Author:    Steven Loomis &amp;lt;&lt;a href=&apos;mailto:srl@openjdk.org&apos;&gt;srl@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-05-28 16:44:44 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/b8f2ec9091f9f7e5f4611991d04dd8aa113b94fd&quot;&gt;https://git.openjdk.org/jdk/commit/b8f2ec9091f9f7e5f4611991d04dd8aa113b94fd&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14658777" author="srl" created="Tue, 19 Mar 2024 14:38:42 -0700"  >Comparing to &amp;lt;&lt;a href=&quot;https://keymanweb.com/#hi,Keyboard_isis_devanagari&quot;&gt;https://keymanweb.com/#hi,Keyboard_isis_devanagari&lt;/a&gt;&amp;gt; it seems that the sample text should produce:&lt;br/&gt;
&lt;br/&gt;
&#2332;&lt;br/&gt;
&#2332;&#2367;&lt;br/&gt;
&#2344;&#2366;&#2309;&#2350;&lt;br/&gt;
&#2325;&#2366;&#2354;&#2366;&lt;br/&gt;
</comment>
                            <comment id="14653715" author="roboduke" created="Thu, 29 Feb 2024 22:15:11 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/17921&quot;&gt;https://git.openjdk.org/jdk/pull/17921&lt;/a&gt;&lt;br/&gt;
Date: 2024-02-20 02:08:09 +0000</comment>
                            <comment id="14640859" author="srl" created="Tue, 16 Jan 2024 14:53:56 -0800"  >I&amp;#39;m trying an experimental branch at &lt;a href=&quot;https://github.com/srl295/jdk/tree/jdk-8195675/keyman&quot;&gt;https://github.com/srl295/jdk/tree/jdk-8195675/keyman&lt;/a&gt; </comment>
                            <comment id="14622551" author="srl" created="Tue, 31 Oct 2023 14:52:26 -0700"  >It was pointed out that Kotoeri is obsolete and could be removed from the special case code.</comment>
                            <comment id="14622523" author="prr" created="Tue, 31 Oct 2023 12:23:21 -0700"  >Thanks for offering to look at this. </comment>
                            <comment id="14151660" author="mhalder" created="Tue, 30 Jan 2018 01:33:08 -0800"  >Reproduced the issue with JDK 10 on Mac OS Sierra 10.12.6.&lt;br/&gt;
&lt;br/&gt;
Typing &amp;quot;j&amp;quot; on JEdit displays j&lt;br/&gt;
Typing &amp;quot;ji&amp;quot; on JEdit displays j&#2332;&#2367;&lt;br/&gt;
Typing &amp;quot;naam&amp;quot; on JEdit displays n&#2344;&#2366;am&lt;br/&gt;
Typing &amp;quot;kala&amp;quot; on JEdit displays k&#2325;&#2366;l&#2354;&#2366;</comment>
                            <comment id="14148577" author="pardesha" created="Wed, 17 Jan 2018 21:59:29 -0800"  >Reported with:&lt;br/&gt;
JDK 8u144, 8u151&lt;br/&gt;
MAC OS X 10.12.6&lt;br/&gt;
Call to insertText with single character from custom Input Method ignored&lt;br/&gt;
Bugreport filed with OmegaT abd jEdit: &lt;a href=&quot;https://sourceforge.net/p/omegat/bugs/889/&quot;&gt;https://sourceforge.net/p/omegat/bugs/889/&lt;/a&gt; &lt;br/&gt;
&lt;br/&gt;
Checked this with:&lt;br/&gt;
JDK 8u162, 10 ea b39&lt;br/&gt;
MAC OS X 10.13.2&lt;br/&gt;
jEdit&lt;br/&gt;
&lt;br/&gt;
The issue is reproducible when checked with jEdit following steps from the description:&lt;br/&gt;
To reproduce using Keyman: &lt;br/&gt;
1) Download and install Keyman for macOS from &lt;a href=&quot;https://keyman.com/macos/&quot;&gt;https://keyman.com/macos/&lt;/a&gt; &lt;br/&gt;
2) Follow instructions to install Keyman and set it up as an Input Method: &lt;a href=&quot;https://help.keyman.com/products/mac/1.0/docs/start_download-install_keyman.php?_ga=2.174123428.780044351.1516121660-886959843.1497845253&quot;&gt;https://help.keyman.com/products/mac/1.0/docs/start_download-install_keyman.php?_ga=2.174123428.780044351.1516121660-886959843.1497845253&lt;/a&gt; &lt;br/&gt;
3) Follow instructions here to download and install a keyboard: &lt;a href=&quot;https://help.keyman.com/products/mac/1.0/docs/start_download-install_keyboard.php&quot;&gt;https://help.keyman.com/products/mac/1.0/docs/start_download-install_keyboard.php&lt;/a&gt;. Download and select the ISIS-Devanagari keyboard as the keyboard for Keyman to use. &lt;br/&gt;
In OmegaT, jEdit, or any application that uses the text editor in JDK, type a &amp;quot;j&amp;quot;. &lt;br/&gt;
&lt;br/&gt;
The Keyman with ISIS-Devanagari keyboard works fine in general applications on MAC OS X, for example with TextEdit, however it does failed to work with jEdit. This looks like an issue limited to 3rd party.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5141352">JDK-8342073</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5142913">JDK-8343432</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5147418">JDK-8347170</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5147670">JDK-8347398</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5147717">JDK-8347435</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5149583">JDK-8349081</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5035533">JDK-8257650</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="74604" name="Capture.PNG" size="68212" author="pardesha" created="Wed, 17 Jan 2018 21:59:47 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17004"><![CDATA[x86]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17017"><![CDATA[os_x]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2c2tf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17411"><![CDATA[b25]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="196"><![CDATA[java.awt]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>