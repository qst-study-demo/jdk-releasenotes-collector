<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 11:02:14 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8357105] C2: compilation fails with &quot;assert(false) failed: empty program detected during loop optimization&quot;</title>
                <link>https://bugs.openjdk.org/browse/JDK-8357105</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>C2: compilation fails with &amp;quot;assert(false) failed: empty program detected during loop optimization&amp;quot; when compiling a program exhibiting stacked string concatenation optimizations, if the source code is compiled with -XDstringConcat=inline:&lt;br/&gt;
&lt;br/&gt;
&amp;lt;jdk&amp;gt;/bin/javac -XDstringConcat=inline TestStackedConcatsInline.java &amp;amp;&amp;amp; &amp;lt;jdk&amp;gt;/bin/java  TestStackedConcatsInline&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C2:103   35       4       TestStackedConcatsInline::f (53 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x00007f6d9462b000,0x00007f6d9472b000],  sp=0x00007f6d94725ca0,  free space=1003k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x14ef546]  PhaseIdealLoop::build_and_optimize()+0xb96  (loopnode.cpp:4652)&lt;br/&gt;
V  [libjvm.so+0xb24c63]  PhaseIdealLoop::optimize(PhaseIterGVN&amp;amp;, LoopOptsMode)+0x4f3&lt;br/&gt;
V  [libjvm.so+0xb1c096]  Compile::optimize_loops(PhaseIterGVN&amp;amp;, LoopOptsMode)+0xb6&lt;br/&gt;
V  [libjvm.so+0xb1eda1]  Compile::Optimize()+0xcc1&lt;br/&gt;
V  [libjvm.so+0xb21eeb]  Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*)+0x1f0b&lt;br/&gt;
V  [libjvm.so+0x951697]  C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x467&lt;br/&gt;
V  [libjvm.so+0xb2fb28]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0xb58&lt;br/&gt;
V  [libjvm.so+0xb30cf8]  CompileBroker::compiler_thread_loop()+0x578&lt;br/&gt;
V  [libjvm.so+0x107bebb]  JavaThread::thread_main_inner()+0x13b&lt;br/&gt;
V  [libjvm.so+0x1aab6d6]  Thread::call_run()+0xb6&lt;br/&gt;
V  [libjvm.so+0x173a198]  thread_native_entry(Thread*)+0x128&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5158867">JDK-8357105</key>
            <summary>C2: compilation fails with &quot;assert(false) failed: empty program detected during loop optimization&quot;</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="dskantz">Daniel Skantz</assignee>
                                    <reporter username="dskantz">Daniel Skantz</reporter>
                        <labels>
                            <label>17bpr-critical-approved</label>
                            <label>8bpr-perf-critical-approved</label>
                            <label>CPU25_07-critical-SQE-OK</label>
                            <label>CPU25_07-critical-approved</label>
                            <label>c2</label>
                            <label>jdk11u-defer-next</label>
                            <label>jdk11u-fix-request</label>
                            <label>jdk17u-critical-request</label>
                            <label>jdk17u-critical-yes</label>
                            <label>jdk21u-critical-request</label>
                            <label>jdk21u-critical-yes</label>
                            <label>oracle-triage-25</label>
                            <label>starter</label>
                    </labels>
                <created>Thu, 15 May 2025 23:37:37 -0700</created>
                <updated>Thu, 11 Sep 2025 03:26:56 -0700</updated>
                            <resolved>Mon, 26 May 2025 07:28:00 -0700</resolved>
                                    <version>8</version>
                    <version>11</version>
                    <version>17</version>
                    <version>21</version>
                    <version>25</version>
                                    <fixVersion>25</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>13</watches>
                                                                                                                <comments>
                            <comment id="14811999" author="sgehwolf" created="Wed, 27 Aug 2025 07:24:39 -0700"  >OpenJDK 11u maintainer comment:&lt;br/&gt;
&lt;br/&gt;
This is best deferred to the next release. The included test doesn&amp;#39;t reproduce. Needs the manual test from this bug. Adding jdk11u-defer-next.</comment>
                            <comment id="14810602" author="roboduke" created="Thu, 21 Aug 2025 06:32:58 -0700"  >[jdk11u-fix-request] Approval Request from Antonio Vieiro&lt;br/&gt;
Please consider approving this `CPU25_07-critical-approved` backport for 11. Clean. Medium risk as it changes C2 (probably medium-high for JDK11?), but we should have enough time to test it before 25/10. `tier1`, `tier2` and `gtests` passed on Linux/x86_64.</comment>
                            <comment id="14809563" author="roboduke" created="Mon, 18 Aug 2025 08:03:55 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/3071&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/3071&lt;/a&gt;&lt;br/&gt;
Date: 2025-08-18 14:54:23 +0000</comment>
                            <comment id="14809558" author="JIRAUSER21719" created="Mon, 18 Aug 2025 07:47:52 -0700"  >The issue can be reproduced in jdk11 when the reproducer is ran with&lt;br/&gt;
&lt;br/&gt;
&amp;lt;jdk&amp;gt;/bin/javac -XDstringConcat=inline TestStackedConcatsInline.java &amp;amp;&amp;amp; &amp;lt;jdk&amp;gt;/bin/java TestStackedConcatsInline -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure  TestStackedConcatsInline &lt;br/&gt;
&lt;br/&gt;
Attaching hs_err_pid738002.log for jdk11.</comment>
                            <comment id="14786935" author="roboduke" created="Thu, 5 Jun 2025 02:47:54 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u/pull/406&quot;&gt;https://git.openjdk.org/jdk17u/pull/406&lt;/a&gt;&lt;br/&gt;
Date: 2025-06-05 09:40:33 +0000</comment>
                            <comment id="14786934" author="roboduke" created="Thu, 5 Jun 2025 02:45:36 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u/pull/463&quot;&gt;https://git.openjdk.org/jdk21u/pull/463&lt;/a&gt;&lt;br/&gt;
Date: 2025-06-05 09:40:24 +0000</comment>
                            <comment id="14786931" author="goetz" created="Thu, 5 Jun 2025 02:42:40 -0700"  >Fix request [17u,21u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 17.0.16-oracle,21.0.8-oracle.&lt;br/&gt;
Medium risk. C2 changes always are critical, but this one just&lt;br/&gt;
adds a bail out.  This seems to be urgent, so I think we should&lt;br/&gt;
also take it to the July update. There is still enough test &lt;br/&gt;
coverage of the July update to be expected. &lt;br/&gt;
Clean backport.&lt;br/&gt;
Test passes, but unfortunately does not reproduce the issue. SAP nightly testing passed.</comment>
                            <comment id="14783372" author="dukebot" created="Mon, 26 May 2025 07:27:59 -0700"  >Changeset: a300c356&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Daniel Skantz &amp;lt;&lt;a href=&apos;mailto:dskantz@openjdk.org&apos;&gt;dskantz@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2025-05-26 14:22:12 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/a300c356555019a42c19bf0c16184f6dee4ad96e&quot;&gt;https://git.openjdk.org/jdk/commit/a300c356555019a42c19bf0c16184f6dee4ad96e&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14782673" author="roboduke" created="Thu, 22 May 2025 08:24:32 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/25395&quot;&gt;https://git.openjdk.org/jdk/pull/25395&lt;/a&gt;&lt;br/&gt;
Date: 2025-05-22 15:19:08 +0000</comment>
                            <comment id="14782593" author="JIRAUSER20406" created="Thu, 22 May 2025 04:27:25 -0700"  >Alternatively, just cover the given case  Call&amp;lt;unstable if&amp;gt;(IfFalse(If(Bool(CmpP(Proj(Call(...):&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/compare/master...danielogh:jdk:stringopts_3?expand=1&quot;&gt;https://github.com/openjdk/jdk/compare/master...danielogh:jdk:stringopts_3?expand=1&lt;/a&gt;</comment>
                            <comment id="14781083" author="JIRAUSER20406" created="Mon, 19 May 2025 02:42:12 -0700"  >Possible solution:  &lt;a href=&quot;https://github.com/openjdk/jdk/compare/master...danielogh:jdk:stringopts&quot;&gt;https://github.com/openjdk/jdk/compare/master...danielogh:jdk:stringopts&lt;/a&gt;</comment>
                            <comment id="14781082" author="JIRAUSER20406" created="Mon, 19 May 2025 02:40:46 -0700"  >It appears to me that the two new bugs:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8357105&quot; title=&quot;C2: compilation fails with &amp;quot;assert(false) failed: empty program detected during loop optimization&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8357105&quot;&gt;&lt;strike&gt;JDK-8357105&lt;/strike&gt;&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8356246&quot; title=&quot;C2: Compilation fails with &amp;quot;assert(bol-&amp;gt;is_Bool()) failed: unexpected if shape&amp;quot; in StringConcat::eliminate_unneeded_control&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8356246&quot;&gt;&lt;strike&gt;JDK-8356246&lt;/strike&gt;&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
and previous bugs:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8291775&quot; title=&quot;C2: assert(r != __null &amp;amp;&amp;amp; r-&amp;gt;is_Region()) failed: this phi must have a region&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8291775&quot;&gt;&lt;strike&gt;JDK-8291775&lt;/strike&gt;&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8271341&quot; title=&quot;Opcode() != Op_If &amp;amp;&amp;amp; Opcode() != Op_RangeCheck) || outcnt() == 2 assert failure with Test7179138_1.java&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8271341&quot;&gt;&lt;strike&gt;JDK-8271341&lt;/strike&gt;&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
all manifest as a result of trying to handle the pattern    CmpP(Proj(CallStaticJava(...  during stacked string concatenations (trying to merge two stringbuilder-append-tostring() chains into one).&lt;br/&gt;
&lt;br/&gt;
Where CmpP is wired in to the second string builder chain in different ways (valueOf, uncommon traps, maybe other uses).&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m not sure if it&amp;#39;s worth handling this case at all given that stacked string concatenations are a niche optimization and the CmpP case has resulted in bug tails.&lt;br/&gt;
&lt;br/&gt;
EDIT: I could so far only find one method that&amp;#39;s optimized  on the CmpP case and that is not invalidated by either of the existing validate_control_flow or validate_mem_flow checks, which is the regression test taken from &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8291775&quot; title=&quot;C2: assert(r != __null &amp;amp;&amp;amp; r-&amp;gt;is_Region()) failed: this phi must have a region&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8291775&quot;&gt;&lt;strike&gt;JDK-8291775&lt;/strike&gt;&lt;/a&gt;: Test7179138_1.</comment>
                            <comment id="14780630" author="JIRAUSER20406" created="Fri, 16 May 2025 00:09:29 -0700"  >Attached [tostring_resultproj_used_by_uncommon_trap]. This is another case of a complex merge point between two string builder chains (SB1 ends at N120 and SB2 starts at 152). The result projection of SB1 is wired into an uncommon trap and N207 CmpP which gets one of its input replaced by top() as the result projection is removed from the graph. The control flow associated with N211 if goes away and ultimately so does the whole graph.</comment>
                            <comment id="14780629" author="thartmann" created="Fri, 16 May 2025 00:08:14 -0700"  >First reproduces with jdk-21+16. Narrowing it down ... Update: Ah, it&amp;#39;s just because we added the assert with &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8303951&quot; title=&quot;Add asserts before record_method_not_compilable where possible&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8303951&quot;&gt;&lt;strike&gt;JDK-8303951&lt;/strike&gt;&lt;/a&gt;. It also reproduces before with -XX:+AbortVMOnCompilationFailure&lt;br/&gt;
&lt;br/&gt;
This is a really old issue, I can reproduce this already with JDK 8.</comment>
                            <comment id="14780627" author="thartmann" created="Thu, 15 May 2025 23:59:35 -0700"  >ILW = Assert in loop opts (harmless / bail out in product), reproducible with alternative string concat implementation in javac (-XDstringConcat=inline), -XX:-OptimizeStringConcat = HLM = P3</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5160008">JDK-8358119</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5160009">JDK-8358120</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5160410">JDK-8358489</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5160532">JDK-8358565</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5161060">JDK-8359036</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5161061">JDK-8359037</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5161244">JDK-8359205</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5161245">JDK-8359206</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5160213">JDK-8358312</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5160215">JDK-8358314</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5162642">JDK-8360486</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10000">
                    <name>Blocks</name>
                                            <outwardlinks description="blocks">
                                                        </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5170543">JDK-8367405</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5157786">JDK-8356246</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5159672">JDK-8357822</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5164467">JDK-8362117</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="114631" name="TestStackedConcatsInline.java" size="323" author="dskantz" created="Thu, 15 May 2025 23:38:48 -0700"/>
                            <attachment id="115841" name="hs_err_pid738002.log" size="81597" author="avieiro" created="Mon, 18 Aug 2025 07:48:14 -0700"/>
                            <attachment id="114633" name="tostring_resultproj_used_by_uncommon_trap.png" size="357912" author="dskantz" created="Fri, 16 May 2025 00:06:01 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i3b7sj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17411"><![CDATA[b25]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>