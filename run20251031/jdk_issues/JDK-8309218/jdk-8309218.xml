<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 08:53:20 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8309218] java/util/concurrent/locks/Lock/OOMEInAQS.java still times out with ZGC, Generational ZGC, and SerialGC</title>
                <link>https://bugs.openjdk.org/browse/JDK-8309218</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Even with the fix for the following bug:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8298066&quot; title=&quot;java/util/concurrent/locks/Lock/OOMEInAQS.java timed out&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8298066&quot;&gt;&lt;strike&gt;JDK-8298066&lt;/strike&gt;&lt;/a&gt; java/util/concurrent/locks/Lock/OOMEInAQS.java timed out&lt;br/&gt;
&lt;br/&gt;
which was integrated in jdk-21+24-2094, the following test:&lt;br/&gt;
&lt;br/&gt;
java/util/concurrent/locks/Lock/OOMEInAQS.java&lt;br/&gt;
&lt;br/&gt;
still times out with both ZGC and Generational ZGC.&lt;br/&gt;
&lt;br/&gt;
This latest batch of timeouts happened in Tier8. If/when a new fix is attempted,&lt;br/&gt;
please remember that the fix needs to be tested in Tier8 along with all other&lt;br/&gt;
tiers where this test runs.</description>
                <environment></environment>
        <key id="5102232">JDK-8309218</key>
            <summary>java/util/concurrent/locks/Lock/OOMEInAQS.java still times out with ZGC, Generational ZGC, and SerialGC</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="vklang">Viktor Klang</assignee>
                                    <reporter username="dcubed">Daniel Daugherty</reporter>
                        <labels>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk22u-fix-request</label>
                            <label>jdk22u-fix-yes</label>
                            <label>noreg-self</label>
                            <label>problemlist</label>
                            <label>sbr</label>
                            <label>sust-test-stabilization</label>
                            <label>tier5</label>
                            <label>tier8</label>
                            <label>ursqe-triaged</label>
                            <label>zgc</label>
                    </labels>
                <created>Wed, 31 May 2023 07:45:14 -0700</created>
                <updated>Tue, 24 Sep 2024 01:16:01 -0700</updated>
                            <resolved>Wed, 10 Jan 2024 08:44:41 -0800</resolved>
                                    <version>21</version>
                    <version>22</version>
                                    <fixVersion>23</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                                                                                                            <comments>
                            <comment id="14706896" author="roboduke" created="Mon, 23 Sep 2024 01:12:43 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/997&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/997&lt;/a&gt;&lt;br/&gt;
Date: 2024-09-23 08:04:43 +0000</comment>
                            <comment id="14706888" author="goetz" created="Mon, 23 Sep 2024 01:03:09 -0700"  >Fix request [21u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 21.0.6-oracle.&lt;br/&gt;
No risk, only a test change.&lt;br/&gt;
Clean backport.&lt;br/&gt;
Test passes.</comment>
                            <comment id="14663263" author="JIRAUSER20508" created="Fri, 5 Apr 2024 07:47:57 -0700"  >Fix Request&lt;br/&gt;
&lt;br/&gt;
Backport to jdk22u so that this test stability improvement can be enjoyed on the jdk22 builds as well.&lt;br/&gt;
&lt;br/&gt;
Backport PR is here: &lt;a href=&quot;https://github.com/openjdk/jdk22u/pull/80&quot;&gt;https://github.com/openjdk/jdk22u/pull/80&lt;/a&gt;</comment>
                            <comment id="14653815" author="roboduke" created="Fri, 1 Mar 2024 01:03:25 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk22u/pull/80&quot;&gt;https://git.openjdk.org/jdk22u/pull/80&lt;/a&gt;&lt;br/&gt;
Date: 2024-03-01 08:59:21 +0000</comment>
                            <comment id="14639126" author="dukebot" created="Wed, 10 Jan 2024 08:44:40 -0800"  >Changeset: b86c3b7a&lt;br/&gt;
Author:    Viktor Klang &amp;lt;&lt;a href=&apos;mailto:vklang@openjdk.org&apos;&gt;vklang@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-01-10 16:42:30 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/b86c3b7a68335d57699ea3c5ec6d09a62ea9026a&quot;&gt;https://git.openjdk.org/jdk/commit/b86c3b7a68335d57699ea3c5ec6d09a62ea9026a&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14638365" author="roboduke" created="Mon, 8 Jan 2024 13:19:07 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/17313&quot;&gt;https://git.openjdk.org/jdk/pull/17313&lt;/a&gt;&lt;br/&gt;
Date: 2024-01-08 21:13:25 +0000</comment>
                            <comment id="14637542" author="dholmes" created="Thu, 4 Jan 2024 13:56:04 -0800"  >&amp;gt; which would possibly suggest that variable turn holds an inconsistent value&lt;br/&gt;
&lt;br/&gt;
I expect it is simply that one thread has been unparked by the other but has not yet had a chance to actually run and return from the wait.</comment>
                            <comment id="14637239" author="msheppar" created="Wed, 3 Jan 2024 14:45:11 -0800"  >[~dholmes] yes, thanks for highlighting that.  My wording was incorrect, it was drawing inference from previously noted failures in an SBR run.  I did noticed that the two threads were not finished, and that they would continue to play ping pong, but didn&amp;#39;t noticed that they were both waiting on the condition, which would possibly suggest that variable turn holds an inconsistent value.</comment>
                            <comment id="14637178" author="dl" created="Wed, 3 Jan 2024 08:57:20 -0800"  >I agree with Viktor. One alternative might be to have some internal for-testing-only method that  causes an OOME to be thrown on the next allocation? But surely not worth adding for the sake of this test.&lt;br/&gt;
&lt;br/&gt;
</comment>
                            <comment id="14636903" author="dholmes" created="Tue, 2 Jan 2024 14:58:08 -0800"  >&amp;gt; the main test thread is waiting on threads to join alluding to a possible test cleanup issue&lt;br/&gt;
&lt;br/&gt;
[~msheppar] the mainthread is waiting for the two test threads to complete. As you can see from your stack traces they have not completed yet.</comment>
                            <comment id="14636781" author="JIRAUSER20508" created="Tue, 2 Jan 2024 06:09:58 -0800"  >After discussing with [~aboldtch] it might make most sense to have OOMEInAQS.java target a specific GC configuration which would make the test reliable.&lt;br/&gt;
&lt;br/&gt;
Testing behavior under OOME scenarios is tricky at best, as allocation stalls have high variance, and effects on scheduling adds another dimension of variance on top of that.&lt;br/&gt;
&lt;br/&gt;
[~dl], would that make sense to you?</comment>
                            <comment id="14613718" author="dcubed" created="Mon, 25 Sep 2023 10:48:35 -0700"  >Here&amp;#39;s a log file snippet for the  jdk-22+17-1284-tier8 sighting with SerialGC:&lt;br/&gt;
&lt;br/&gt;
java/util/concurrent/locks/Lock/OOMEInAQS.java&lt;br/&gt;
&lt;br/&gt;
#section:main&lt;br/&gt;
----------messages:(8/375)----------&lt;br/&gt;
command: main -XX:-UseGCOverheadLimit -Xmx48M -XX:-UseTLAB OOMEInAQS&lt;br/&gt;
reason: User specified action: run main/othervm -XX:-UseGCOverheadLimit -Xmx48M -XX:-UseTLAB OOMEInAQS &lt;br/&gt;
started: Mon Sep 25 13:36:41 UTC 2023&lt;br/&gt;
Mode: othervm [/othervm specified]&lt;br/&gt;
Timeout information:&lt;br/&gt;
--- Timeout information end.&lt;br/&gt;
finished: Mon Sep 25 13:47:53 UTC 2023&lt;br/&gt;
elapsed time (seconds): 672.086&lt;br/&gt;
----------configuration:(0/0)----------&lt;br/&gt;
----------System.out:(1/37)----------&lt;br/&gt;
Timeout signalled after 480 seconds&lt;br/&gt;
----------System.err:(0/0)----------&lt;br/&gt;
----------rerun:(46/5702)*----------&lt;br/&gt;
&lt;br/&gt;
&amp;lt;snip&amp;gt;&lt;br/&gt;
&lt;br/&gt;
result: Error. Program `c:\ade\mesos\work_dir\jib-master\install\jdk-22+17-1284\windows-x64-debug.jdk\jdk-22\fastdebug\bin\java&amp;#39; timed out (timeout set to 480000ms, elapsed time including timeout handling was 672080ms).&lt;br/&gt;
</comment>
                            <comment id="14587168" author="joehw" created="Mon, 5 Jun 2023 12:37:20 -0700"  >By the way, I saw it fail in Tier5 as well on Linux and Windows.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5126690">JDK-8330104</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5139519">JDK-8340525</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5139809">JDK-8340783</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                                                <inwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5109837">JDK-8315860</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5088858">JDK-8298066</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                                              <subtask id="5102254">JDK-8309236</subtask>
                                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19000"><![CDATA[x86_64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i31qq3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17315"><![CDATA[b05]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="215"><![CDATA[java.util.concurrent]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>