<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 10:14:50 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8315827] Kitchensink.java and RenaissanceStressTest.java  time out with jvmti module errors</title>
                <link>https://bugs.openjdk.org/browse/JDK-8315827</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The following test failed in the JDK22 CI:&lt;br/&gt;
&lt;br/&gt;
applications/kitchensink/Kitchensink.java&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s a snippet from the log file:&lt;br/&gt;
&lt;br/&gt;
[2023-09-06T21:41:51.523634106Z] Gathering output for process 2528074&lt;br/&gt;
[2023-09-06T21:41:57.709835799Z] Waiting for completion for process 2528074&lt;br/&gt;
[2023-09-06T21:41:57.710031639Z] Waiting for completion finished for process 2528074&lt;br/&gt;
[stress.process.out] [512.838s][error][jvmti] _VTMS_transition_count: 1&lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [512.838s][error][jvmti] _VTMS_transition_disable_for_one_count: 0&lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [512.838s][error][jvmti] _VTMS_transition_disable_for_all_count: 1&lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti] main(main) exiting: 0 is_susp: 0 is_thread_susp: 0 is_vthread_susp: 0 is_VTMS_transition_disabler: 0, is_in_VTMS_transition = 0&lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti]   void java.lang.Object.wait0(long):-1&lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti]   void java.lang.Object.wait(long):375&lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti]   void java.lang.Thread.join(long):2045&lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti]   void java.lang.Thread.join():2121&lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti]   void applications.kitchensink.process.stress.modules.StressModule.joinModule():278&lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti]   void applications.kitchensink.process.stress.modules.StressModule.allJoin():349&lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti]   void applications.kitchensink.process.stress.Main.run(java.lang.String[]):97&lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti]   void applications.kitchensink.process.stress.Main.main(java.lang.String[]):156&lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti] &lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti] Reference Handler(Reference Handler) exiting: 0 is_susp: 0 is_thread_susp: 0 is_vthread_susp: 0 is_VTMS_transition_disabler: 0, is_in_VTMS_transition = 0&lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti]   void java.lang.ref.Reference.waitForReferencePendingList():-1&lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti]   void java.lang.ref.Reference.processPendingReferences():246&lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti]   void java.lang.ref.Reference$ReferenceHandler.run():208&lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti] &lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti] Finalizer(Finalizer) exiting: 0 is_susp: 0 is_thread_susp: 0 is_vthread_susp: 0 is_VTMS_transition_disabler: 0, is_in_VTMS_transition = 0&lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti]   void java.lang.Object.wait0(long):-1&lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti]   void java.lang.Object.wait(long):375&lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti]   void java.lang.Object.wait():348&lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti]   void java.lang.ref.NativeReferenceQueue.await():48&lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti]   java.lang.ref.Reference java.lang.ref.ReferenceQueue.remove0():158&lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti]   java.lang.ref.Reference java.lang.ref.NativeReferenceQueue.remove():89&lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti]   void java.lang.ref.Finalizer$FinalizerThread.run():173&lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti] &lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti] Signal Dispatcher(Signal Dispatcher) exiting: 0 is_susp: 0 is_thread_susp: 0 is_vthread_susp: 0 is_VTMS_transition_disabler: 0, is_in_VTMS_transition = 0&lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti] &lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti] Attach Listener(Attach Listener) exiting: 0 is_susp: 0 is_thread_susp: 0 is_vthread_susp: 0 is_VTMS_transition_disabler: 0, is_in_VTMS_transition = 0&lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti] &lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti] Service Thread(Service Thread) exiting: 0 is_susp: 0 is_thread_susp: 0 is_vthread_susp: 0 is_VTMS_transition_disabler: 0, is_in_VTMS_transition = 0&lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti] &lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti] Monitor Deflation Thread(Monitor Deflation Thread) exiting: 0 is_susp: 0 is_thread_susp: 0 is_vthread_susp: 0 is_VTMS_transition_disabler: 0, is_in_VTMS_transition = 0&lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [512.839s][error][jvmti] &lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[2023-09-06T21:42:57.717213657Z] Gathering output for process 2528384&lt;br/&gt;
[2023-09-06T21:42:57.726416155Z] Waiting for completion for process 2528384&lt;br/&gt;
[2023-09-06T21:42:57.726596555Z] Waiting for completion finished for process 2528384&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m starting this bug in hotspot/test so [~lmesnik] can take a look.</description>
                <environment></environment>
        <key id="5109793">JDK-8315827</key>
            <summary>Kitchensink.java and RenaissanceStressTest.java  time out with jvmti module errors</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mgronlun">Markus Gr&#246;nlund</assignee>
                                    <reporter username="dcubed">Daniel Daugherty</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>genzgc</label>
                            <label>intermittent</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>loom</label>
                            <label>noreg-hard</label>
                            <label>test-bigapps-Kitchensink</label>
                            <label>test-bigapps-Renaissance</label>
                            <label>tier3</label>
                    </labels>
                <created>Wed, 6 Sep 2023 19:13:55 -0700</created>
                <updated>Fri, 9 May 2025 20:26:53 -0700</updated>
                            <resolved>Wed, 6 Dec 2023 15:00:21 -0800</resolved>
                                    <version>17</version>
                    <version>21</version>
                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>11</watches>
                                                                                                                <comments>
                            <comment id="14776930" author="roboduke" created="Mon, 5 May 2025 12:15:29 -0700"  >[jdk21u-fix-request] Approval Request from Satyen Subramaniam&lt;br/&gt;
for backport. Fix prevents deadlock case by avoiding reading the thread status from the thread object as part of sampling (since we already know the state at this point).&lt;br/&gt;
&lt;br/&gt;
Risk: Low. Tip change was merged in December 2023 and is relatively trivial.&lt;br/&gt;
&lt;br/&gt;
Testing:&lt;br/&gt;
* GHA Sanity Checks&lt;br/&gt;
* Tier 1 and 2 tests locally</comment>
                            <comment id="14776912" author="roboduke" created="Mon, 5 May 2025 11:49:48 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1735&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1735&lt;/a&gt;&lt;br/&gt;
Date: 2025-05-05 18:44:31 +0000</comment>
                            <comment id="14632225" author="dukebot" created="Wed, 6 Dec 2023 15:00:20 -0800"  >Changeset: 75a7c199&lt;br/&gt;
Author:    Markus Gr&amp;#xF6;nlund &amp;lt;&lt;a href=&apos;mailto:mgronlun@openjdk.org&apos;&gt;mgronlun@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-12-06 22:59:26 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/75a7c199d8a3634b258cd713b8b77e026c2ecb4b&quot;&gt;https://git.openjdk.org/jdk/commit/75a7c199d8a3634b258cd713b8b77e026c2ecb4b&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14631799" author="roboduke" created="Tue, 5 Dec 2023 11:13:56 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/16982&quot;&gt;https://git.openjdk.org/jdk/pull/16982&lt;/a&gt;&lt;br/&gt;
Date: 2023-12-05 19:07:25 +0000</comment>
                            <comment id="14631346" author="mgronlun" created="Mon, 4 Dec 2023 15:14:04 -0800"  >This situation can be avoided by removing the sampler thread reading the thread status from the oop. That is what triggers the barrier. The thread status is a constant in this situation, 5.&lt;br/&gt;
&lt;br/&gt;
ALIVE = 1&lt;br/&gt;
RUNNABLE = 4</comment>
                            <comment id="14631130" author="egahlin" created="Mon, 4 Dec 2023 11:07:29 -0800"  >I think it&amp;#39;s too late to bring in changes to the sampling mechanism. My suggestion is to disable sampling with ZGC or keep it as is. I believe the latter is what we did for JDK 21?&lt;br/&gt;
&lt;br/&gt;
Workaround: &lt;br/&gt;
&lt;br/&gt;
$ java -XX:StartFlightRecording:method-profiling=off</comment>
                            <comment id="14631060" author="stefank" created="Mon, 4 Dec 2023 08:16:08 -0800"  >I think this bug could be solved by the proposed patch in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8321098&quot; title=&quot;Cooperative JFR Sampling&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8321098&quot;&gt;&lt;strike&gt;JDK-8321098&lt;/strike&gt;&lt;/a&gt;</comment>
                            <comment id="14621169" author="dholmes" created="Wed, 25 Oct 2023 18:45:05 -0700"  >I must admit I&amp;#39;m also surprised by how deep into the VM we have gone in this state: we&amp;#39;ve entered the runtime then initiated stackwatermark processing and then gone into unified logging - hence the deadlock. Is the issue that the suspension was allowed to happen because the thread is &amp;quot;in Java&amp;quot;, and if it were in_vm, the suspension would be deferred until it returns to Java?&lt;br/&gt;
&lt;br/&gt;
</comment>
                            <comment id="14621108" author="stefank" created="Wed, 25 Oct 2023 11:29:04 -0700"  >So, JFR has suspend a thread that is holding a lock and then it hangs when it indirectly tries to take the lock from the suspending thread. I don&amp;#39;t know what we in the GC can do about that. Could the thread poking around in the suspended thread skip accessing oops?</comment>
                            <comment id="14621089" author="mgronlun" created="Wed, 25 Oct 2023 10:30:11 -0700"  >Unsure what can be done here from a JFR perspective. The thread state is still reported to be in state thread_in_java, but it&amp;#39;s deep in VM code, even holding a VM-specific mutex.&lt;br/&gt;
&lt;br/&gt;
Moving to GC for their opinions.</comment>
                            <comment id="14617179" author="mgronlun" created="Tue, 10 Oct 2023 08:21:27 -0700"  >This situation where accessing a thread oop as part of asynchronous sampling is very complicated, especially with ZGC because loading the oop triggers quite heavy barriers. This becomes especially problematic with VirtualThreads, which involves a lot of problems in reading the vthread oop because of recursivity and deadlocks caused by the barriers.</comment>
                            <comment id="14613926" author="dholmes" created="Mon, 25 Sep 2023 17:01:42 -0700"  >Hard to say. It is a classic thread suspension deadlock. The question is whether it is reasonable for the code that is doing the logging to be doing it, and also to be suspendable at that point. In principle JFR should not suspend any thread that may hold a resource that JFR itself would need. I guess the question is whether JFR can know that in this particular case.</comment>
                            <comment id="14613599" author="egahlin" created="Mon, 25 Sep 2023 04:26:34 -0700"  >Is this really a JFR issue, and not a ZGC? </comment>
                            <comment id="14613242" author="lmesnik" created="Fri, 22 Sep 2023 09:43:49 -0700"  >Removed aarch64, the issue non-CPU specific. Is suspect that non-OS specific also.</comment>
                            <comment id="14613219" author="dcubed" created="Fri, 22 Sep 2023 08:20:27 -0700"  >Here&amp;#39;s a log file snippet from the jdk-22+16-1243-tier8 sighting:&lt;br/&gt;
&lt;br/&gt;
applications/renaissance/RenaissanceStressTest.java&lt;br/&gt;
&lt;br/&gt;
[2023-09-21T21:44:44.670122717Z] Gathering output for process 3087649&lt;br/&gt;
[2023-09-21T21:44:50.843547737Z] Waiting for completion for process 3087649&lt;br/&gt;
[2023-09-21T21:44:50.843729462Z] Waiting for completion finished for process 3087649&lt;br/&gt;
[stress.process.out] [531.871s][error][jvmti] _VTMS_transition_count: 6&lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti] _VTMS_transition_disable_for_one_count: 0&lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti] _VTMS_transition_disable_for_all_count: 1&lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti] main(main) exiting: 0 is_susp: 0 is_thread_susp: 0 is_vthread_susp: 0 is_VTMS_transition_disabler: 0, is_in_VTMS_transition = 0&lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti]   void java.lang.Object.wait0(long):-1&lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti]   void java.lang.Object.wait(long):375&lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti]   void java.lang.Thread.join(long):2045&lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti]   void java.lang.Thread.join():2121&lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti]   void applications.kitchensink.process.stress.modules.StressModule.joinModule():278&lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti]   void applications.kitchensink.process.stress.modules.StressModule.allJoin():349&lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti]   void applications.kitchensink.process.stress.Main.run(java.lang.String[]):97&lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti]   void applications.kitchensink.process.stress.Main.main(java.lang.String[]):156&lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti] &lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti] Reference Handler(Reference Handler) exiting: 0 is_susp: 0 is_thread_susp: 0 is_vthread_susp: 0 is_VTMS_transition_disabler: 0, is_in_VTMS_transition = 0&lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti]   void java.lang.ref.Reference.waitForReferencePendingList():-1&lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti]   void java.lang.ref.Reference.processPendingReferences():246&lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti]   void java.lang.ref.Reference$ReferenceHandler.run():208&lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti] &lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti] Finalizer(Finalizer) exiting: 0 is_susp: 0 is_thread_susp: 0 is_vthread_susp: 0 is_VTMS_transition_disabler: 0, is_in_VTMS_transition = 0&lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti]   void java.lang.Object.wait0(long):-1&lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti]   void java.lang.Object.wait(long):375&lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti]   void java.lang.Object.wait():348&lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti]   void java.lang.ref.NativeReferenceQueue.await():48&lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti]   java.lang.ref.Reference java.lang.ref.ReferenceQueue.remove0():158&lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti]   java.lang.ref.Reference java.lang.ref.NativeReferenceQueue.remove():89&lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti]   void java.lang.ref.Finalizer$FinalizerThread.run():173&lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti] &lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti] Signal Dispatcher(Signal Dispatcher) exiting: 0 is_susp: 0 is_thread_susp: 0 is_vthread_susp: 0 is_VTMS_transition_disabler: 0, is_in_VTMS_transition = 0&lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti] &lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti] Attach Listener(Attach Listener) exiting: 0 is_susp: 0 is_thread_susp: 0 is_vthread_susp: 0 is_VTMS_transition_disabler: 0, is_in_VTMS_transition = 0&lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti] &lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti] Service Thread(Service Thread) exiting: 0 is_susp: 0 is_thread_susp: 0 is_vthread_susp: 0 is_VTMS_transition_disabler: 0, is_in_VTMS_transition = 0&lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti] &lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti] Monitor Deflation Thread(Monitor Deflation Thread) exiting: 0 is_susp: 0 is_thread_susp: 0 is_vthread_susp: 0 is_VTMS_transition_disabler: 0, is_in_VTMS_transition = 0&lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[stress.process.out] [531.872s][error][jvmti] &lt;br/&gt;
[stress.process.out] &lt;br/&gt;
[2023-09-21T21:45:50.848422815Z] Gathering output for process 3087652&lt;br/&gt;
[2023-09-21T21:45:50.853463473Z] Waiting for completion for process 3087652&lt;br/&gt;
[2023-09-21T21:45:50.853584493Z] Waiting for completion finished for process 3087652</comment>
                            <comment id="14611342" author="lmesnik" created="Thu, 14 Sep 2023 15:29:56 -0700"  >BTW I have analyzed the link from the first comment.&lt;br/&gt;
Seems VTMTDisable is also stuck while waiting for handshake execution.</comment>
                            <comment id="14611341" author="lmesnik" created="Thu, 14 Sep 2023 15:25:34 -0700"  >The bug is reproduced with ZGC because JFR doesn&amp;#39;t try to allocate memory but triggers the read barrier which is ZGC/SingleZGC only.</comment>
                            <comment id="14611338" author="lmesnik" created="Thu, 14 Sep 2023 15:20:34 -0700"  >I think that it is a deadlock in JFR.&lt;br/&gt;
The stacktrace shows that JFR suspended the thread while it logging. So JFR thread can&amp;#39;t obtain log lock and resume thread. &lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
JFR Thread:&lt;br/&gt;
Thread 71 (Thread 0xfffa9997e1d0 (LWP 2526034)):&lt;br/&gt;
#0  0x0000ffffac3ee728 in do_futex_wait.constprop () from /lib64/libpthread.so.0&lt;br/&gt;
#1  0x0000ffffac3ee844 in __new_sem_wait_slow.constprop.0 () from /lib64/libpthread.so.0&lt;br/&gt;
#2  0x0000ffffab6c61bc in PosixSemaphore::wait() () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#3  0x0000ffffab33b524 in LogFileOutput::write(LogDecorations const&amp;amp;, char const*) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#4  0x0000ffffab341f30 in LogTagSet::vwrite(LogLevel::type, char const*, std::__va_list) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#5  0x0000ffffaad6d350 in void LogImpl&amp;lt;(LogTag::type)52, (LogTag::type)56, (LogTag::type)0, (LogTag::type)0, (LogTag::type)0, (LogTag::type)0&amp;gt;::write&amp;lt;(LogLevel::type)2&amp;gt;(char const*, ...) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#6  0x0000ffffaba4a5bc in ZPageAllocator::alloc_page_create(ZPageAllocation*) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#7  0x0000ffffaba4d6c8 in ZPageAllocator::alloc_page_finalize(ZPageAllocation*) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#8  0x0000ffffaba4f594 in ZPageAllocator::alloc_page(ZPageType, unsigned long, ZAllocationFlags, ZPageAge) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#9  0x0000ffffaba11f34 in ZHeap::alloc_page(ZPageType, unsigned long, ZAllocationFlags, ZPageAge) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#10 0x0000ffffaba448c8 in ZObjectAllocator::alloc_page(ZPageType, unsigned long, ZAllocationFlags) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#11 0x0000ffffaba44ce4 in ZObjectAllocator::alloc_object_in_shared_page(ZPage**, ZPageType, unsigned long, unsigned long, ZAllocationFlags) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#12 0x0000ffffaba635ac in ZRelocate::relocate_object(ZForwarding*, zaddress_unsafe) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#13 0x0000ffffaa7b23fc in AccessInternal::PostRuntimeDispatch&amp;lt;ZBarrierSet::AccessBarrier&amp;lt;286790ul, ZBarrierSet&amp;gt;, (AccessInternal::BarrierType)3, 286790ul&amp;gt;::oop_access_barrier(oop, long) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#14 0x0000ffffaab9b2ec in oopDesc::obj_field(int) const () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#15 0x0000ffffaafaf09c in java_lang_Thread::get_thread_status(oop) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#16 0x0000ffffab069f7c in OSThreadSampler::protected_task(SuspendedThreadTaskContext const&amp;amp;) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#17 0x0000ffffab6f2f04 in SuspendedThreadTask::internal_do_task() () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#18 0x0000ffffab7c6384 in SuspendedThreadTask::run() () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#19 0x0000ffffab06a0a8 in JfrThreadSampleClosure::sample_thread_in_java(JavaThread*, JfrStackFrame*, unsigned int) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#20 0x0000ffffab06ae9c in JfrThreadSampleClosure::do_sample_thread(JavaThread*, JfrStackFrame*, unsigned int, JfrSampleType) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#21 0x0000ffffab06df2c in JfrThreadSampler::task_stacktrace(JfrSampleType, JavaThread**) [clone .constprop.1] () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#22 0x0000ffffab06e518 in JfrThreadSampler::run() () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#23 0x0000ffffab825034 in Thread::call_run() () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#24 0x0000ffffab57e658 in thread_native_entry(Thread*) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#25 0x0000ffffac3e5908 in start_thread () from /lib64/libpthread.so.0&lt;br/&gt;
#26 0x0000ffffac26ae1c in thread_start () from /lib64/libc.so.6&lt;br/&gt;
&lt;br/&gt;
The target? thread:&lt;br/&gt;
Thread 73 (Thread 0xfffa995801d0 (LWP 2526036)):&lt;br/&gt;
#0  0x0000ffffac27d8ec in sigsuspend () from /lib64/libc.so.6&lt;br/&gt;
#1  0x0000ffffab6f3654 in SR_handler(int, siginfo_t*, void*) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#2  &amp;lt;signal handler called&amp;gt;&lt;br/&gt;
#3  0x0000ffffab33a0c4 in LogDecorations::decoration(LogDecorators::Decorator, char*, unsigned long) const () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#4  0x0000ffffab33c568 in LogFileStreamOutput::write_internal(LogDecorations const&amp;amp;, char const*) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#5  0x0000ffffab33b540 in LogFileOutput::write(LogDecorations const&amp;amp;, char const*) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#6  0x0000ffffab341f30 in LogTagSet::vwrite(LogLevel::type, char const*, std::__va_list) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#7  0x0000ffffaad6d350 in void LogImpl&amp;lt;(LogTag::type)52, (LogTag::type)56, (LogTag::type)0, (LogTag::type)0, (LogTag::type)0, (LogTag::type)0&amp;gt;::write&amp;lt;(LogLevel::type)2&amp;gt;(char const*, ...) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#8  0x0000ffffaba4a5bc in ZPageAllocator::alloc_page_create(ZPageAllocation*) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#9  0x0000ffffaba4d6c8 in ZPageAllocator::alloc_page_finalize(ZPageAllocation*) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#10 0x0000ffffaba4f594 in ZPageAllocator::alloc_page(ZPageType, unsigned long, ZAllocationFlags, ZPageAge) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#11 0x0000ffffaba11f34 in ZHeap::alloc_page(ZPageType, unsigned long, ZAllocationFlags, ZPageAge) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#12 0x0000ffffaba448c8 in ZObjectAllocator::alloc_page(ZPageType, unsigned long, ZAllocationFlags) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#13 0x0000ffffaba44ce4 in ZObjectAllocator::alloc_object_in_shared_page(ZPage**, ZPageType, unsigned long, unsigned long, ZAllocationFlags) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#14 0x0000ffffaba635ac in ZRelocate::relocate_object(ZForwarding*, zaddress_unsafe) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#15 0x0000ffffab9fac3c in ZUncoloredRootProcessWeakOopClosure::do_root(zaddress_unsafe*) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#16 0x0000ffffaba3e0bc in ZNMethod::nmethod_oops_do_inner(nmethod*, OopClosure*) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#17 0x0000ffffab9f7894 in ZBarrierSetNMethod::nmethod_entry_barrier(nmethod*) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#18 0x0000ffffaba7d068 in ZOnStackCodeBlobClosure::do_code_blob(CodeBlob*) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#19 0x0000ffffaba7d388 in ZStackWatermark::process(frame const&amp;amp;, RegisterMap&amp;amp;, void*) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#20 0x0000ffffab730e84 in StackWatermarkFramesIterator::process_one(void*) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#21 0x0000ffffab731434 in StackWatermark::process_one() () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#22 0x0000ffffab733524 in StackWatermark::before_unwind() () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#23 0x0000ffffab732a38 in StackWatermarkSet::before_unwind(JavaThread*) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#24 0x0000ffffaaf6f8ac in InterpreterRuntime::at_unwind(JavaThread*) () from /opt/mach5/mesos/work_dir/jib-master/install/jdk-22+14-1036/linux-aarch64-debug.jdk/jdk-22/fastdebug/lib/server/libjvm.so&lt;br/&gt;
#25 0x0000ffff94062f94 in ?? ()&lt;br/&gt;
#26 0x0000000000000005 in ?? ()&lt;br/&gt;
Backtrace stopped: previous frame identical to this frame (corrupt stack?)</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5158325">JDK-8356675</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i33197:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17419"><![CDATA[b27]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="374"><![CDATA[jfr]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17001"><![CDATA[Not verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>