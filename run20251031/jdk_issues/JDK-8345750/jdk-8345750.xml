<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 10:02:13 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8345750] Shenandoah: Test TestJcmdHeapDump.java#aggressive intermittent assert(gc_cause() == GCCause::_no_gc) failed: Over-writing cause </title>
                <link>https://bugs.openjdk.org/browse/JDK-8345750</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Test gc/shenandoah/TestJcmdHeapDump.java#aggressive intermittent assert(gc_cause() == GCCause::_no_gc) failed: Over-writing cause on linux-aarch64 by fastdebud build.&lt;br/&gt;
&lt;br/&gt;
The test log snippet:&lt;br/&gt;
STDOUT:&lt;br/&gt;
[2024-12-07T00:35:29.101488535Z] Gathering output for process 651326&lt;br/&gt;
[2024-12-07T00:35:29.518459263Z] Waiting for completion for process 651326&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (src/hotspot/share/gc/shenandoah/shenandoahHeap.cpp:1516), pid=650235, tid=650303&lt;br/&gt;
#  assert(gc_cause() == GCCause::_no_gc) failed: Over-writing cause&lt;br/&gt;
#&lt;br/&gt;
# JRE version: OpenJDK Runtime Environment (25.0) (fastdebug build 25-internal-e0d63987)&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM (fastdebug 25-internal-e0d63987, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, shenandoah gc, linux-aarch64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x163aee0]  ShenandoahHeap::on_cycle_start(GCCause::Cause, ShenandoahGeneration*)+0xfc&lt;br/&gt;
#&lt;br/&gt;
# Core dump will be written. Default location: /tmp/tone/run/jtreg/jt-work/jtreg/hotspot_jtreg/gc/shenandoah/TestJcmdHeapDump_aggressive/core.650235&lt;br/&gt;
#&lt;br/&gt;
# An error report file with more information is saved as:&lt;br/&gt;
# /tmp/tone/run/jtreg/jt-work/jtreg/hotspot_jtreg/gc/shenandoah/TestJcmdHeapDump_aggressive/hs_err_pid650235.log&lt;br/&gt;
[2024-12-07T00:35:29.842295115Z] Waiting for completion finished for process 651326</description>
                <environment>&lt;p&gt;+ uname -a&lt;br/&gt;
Linux iZwz92xkihseqslul5v5hiZ 5.10.134-17.3.al8.aarch64 #1 SMP Thu Oct 31 14:27:09 CST 2024 aarch64 aarch64 aarch64 GNU/Linux&lt;br/&gt;
+ cat /etc/os-release&lt;br/&gt;
NAME=&quot;Alibaba Cloud Linux&quot;&lt;br/&gt;
VERSION=&quot;3 (OpenAnolis Edition)&quot;&lt;br/&gt;
ID=&quot;alinux&quot;&lt;br/&gt;
ID_LIKE=&quot;rhel fedora centos anolis&quot;&lt;br/&gt;
VERSION_ID=&quot;3&quot;&lt;br/&gt;
VARIANT=&quot;OpenAnolis Edition&quot;&lt;br/&gt;
VARIANT_ID=&quot;openanolis&quot;&lt;br/&gt;
ALINUX_MINOR_ID=&quot;2104&quot;&lt;br/&gt;
ALINUX_UPDATE_ID=&quot;10&quot;&lt;br/&gt;
PLATFORM_ID=&quot;platform:al8&quot;&lt;br/&gt;
PRETTY_NAME=&quot;Alibaba Cloud Linux 3.2104 U10 (OpenAnolis Edition)&quot;&lt;br/&gt;
ANSI_COLOR=&quot;0;31&quot;&lt;br/&gt;
HOME_URL=&quot;https://www.aliyun.com/&quot;&lt;br/&gt;
+ free -h&lt;br/&gt;
&#160; &#160; &#160; &#160; &#160; &#160; &#160; total &#160; &#160; &#160; &#160;used &#160; &#160; &#160; &#160;free &#160; &#160; &#160;shared &#160;buff/cache &#160; available&lt;br/&gt;
Mem: &#160; &#160; &#160; &#160; &#160;492Gi &#160; &#160; &#160; 6.3Gi &#160; &#160; &#160; 444Gi &#160; &#160; &#160; 0.0Ki &#160; &#160; &#160; &#160;45Gi &#160; &#160; &#160; 486Gi&lt;br/&gt;
Swap: &#160; &#160; &#160; &#160; &#160; &#160;0B &#160; &#160; &#160; &#160; &#160;0B &#160; &#160; &#160; &#160; &#160;0B&lt;br/&gt;
+ lscpu&lt;br/&gt;
+ head -n 25&lt;br/&gt;
Architecture: &#160; &#160; &#160; &#160;aarch64&lt;br/&gt;
Byte Order: &#160; &#160; &#160; &#160; &#160;Little Endian&lt;br/&gt;
CPU(s): &#160; &#160; &#160; &#160; &#160; &#160; &#160;64&lt;br/&gt;
On-line CPU(s) list: 0-63&lt;br/&gt;
Thread(s) per core: &#160;1&lt;br/&gt;
Core(s) per socket: &#160;64&lt;br/&gt;
Socket(s): &#160; &#160; &#160; &#160; &#160; 1&lt;br/&gt;
NUMA node(s): &#160; &#160; &#160; &#160;1&lt;br/&gt;
Vendor ID: &#160; &#160; &#160; &#160; &#160; ARM&lt;br/&gt;
BIOS Vendor ID: &#160; &#160; &#160;Alibaba Cloud&lt;br/&gt;
Model: &#160; &#160; &#160; &#160; &#160; &#160; &#160; 0&lt;br/&gt;
Model name: &#160; &#160; &#160; &#160; &#160;Neoverse-N2&lt;br/&gt;
BIOS Model name: &#160; &#160; virt-rhel7.6.0&lt;br/&gt;
Stepping: &#160; &#160; &#160; &#160; &#160; &#160;r0p0&lt;br/&gt;
CPU MHz: &#160; &#160; &#160; &#160; &#160; &#160; 3000.000&lt;br/&gt;
CPU max MHz: &#160; &#160; &#160; &#160; 3000.0000&lt;br/&gt;
CPU min MHz: &#160; &#160; &#160; &#160; 3000.0000&lt;br/&gt;
BogoMIPS: &#160; &#160; &#160; &#160; &#160; &#160;100.00&lt;br/&gt;
L1d cache: &#160; &#160; &#160; &#160; &#160; 64K&lt;br/&gt;
L1i cache: &#160; &#160; &#160; &#160; &#160; 64K&lt;br/&gt;
L2 cache: &#160; &#160; &#160; &#160; &#160; &#160;1024K&lt;br/&gt;
L3 cache: &#160; &#160; &#160; &#160; &#160; &#160;65536K&lt;br/&gt;
NUMA node0 CPU(s): &#160; 0-63&lt;br/&gt;
Flags: &#160; &#160; &#160; &#160; &#160; &#160; &#160; fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm jscvt fcma lrcpc dcpop sha3 sm3 sm4 asimddp sha512 sve asimdfhm dit uscat ilrcpc flagm ssbs sb dcpodp sve2 sveaes svepmull svebitperm svesha3 svesm4 flagm2 frint svei8mm svebf16 i8mm bf16 dgh&lt;br/&gt;
+ java -version&lt;br/&gt;
openjdk version &quot;25-internal&quot; 2025-09-16&lt;br/&gt;
OpenJDK Runtime Environment (fastdebug build 25-internal-e0d63987)&lt;br/&gt;
OpenJDK 64-Bit Server VM (fastdebug build 25-internal-e0d63987, mixed mode, sharing)&lt;br/&gt;
+ java -Xinternalversion&lt;br/&gt;
OpenJDK 64-Bit Server VM (fastdebug 25-internal-e0d63987) for linux-aarch64 JRE (25-internal-e0d63987), built on 2024-12-07T00:09:16Z with gcc 10.2.1 20210130 (Red Hat 10.2.1-11)&lt;br/&gt;
+ jtreg -version&lt;br/&gt;
jtreg 7.4-dev+0&lt;br/&gt;
Installed in /tmp/tone/run/jtreg/jtreg/lib/jtreg.jar&lt;br/&gt;
Running on platform version 25-internal from /tmp/tone/run/jtreg/jdk-repo/build/linux-aarch64-server-fastdebug/images/jdk.&lt;br/&gt;
Built with Java(TM) 2 SDK, Version 11.0.21+9-LTS on June 14, 2024.&lt;br/&gt;
Copyright (c) 1999, 2022, Oracle and/or its affiliates. All rights reserved.&lt;br/&gt;
Use is subject to license terms.&lt;br/&gt;
JT Harness, version 6.0 ea b24 (June 14, 2024)&lt;br/&gt;
Java Assembler Tools, version 7.0 ea b09 (June 14, 2024)&lt;br/&gt;
TestNG: testng-7.3.0.jar, guice-5.1.0.jar, jcommander-1.82.jar&lt;br/&gt;
JUnit: junit-platform-console-standalone-1.10.2.jar&lt;br/&gt;
+ git remote -v&lt;br/&gt;
origin &#160;git@github.com:openjdk/jdk.git (fetch)&lt;br/&gt;
origin &#160;git@github.com:openjdk/jdk.git (push)&lt;br/&gt;
+ git branch&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;master&lt;br/&gt;
+ git log -n 1&lt;br/&gt;
+ head -n 1&lt;br/&gt;
commit e0d639878346946d0627a57b0eeb0cac8ca533fc&lt;br/&gt;
+ git status&lt;br/&gt;
On branch master&lt;br/&gt;
Your branch is up to date with &apos;origin/master&apos;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;nothing to commit, working tree clean&lt;br/&gt;
+ git diff&lt;/p&gt;</environment>
        <key id="5145676">JDK-8345750</key>
            <summary>Shenandoah: Test TestJcmdHeapDump.java#aggressive intermittent assert(gc_cause() == GCCause::_no_gc) failed: Over-writing cause </summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="wkemper">William Kemper</assignee>
                                    <reporter username="syan">Sendao Yan</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>gc-shenandoah</label>
                            <label>hgupdate-sync</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk23u-fix-request</label>
                    </labels>
                <created>Sat, 7 Dec 2024 05:29:05 -0800</created>
                <updated>Mon, 27 Jan 2025 11:02:25 -0800</updated>
                            <resolved>Tue, 21 Jan 2025 10:37:08 -0800</resolved>
                                    <version>24</version>
                                    <fixVersion>25</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="14741734" author="roboduke" created="Tue, 21 Jan 2025 13:26:39 -0800"  >[jdk23u-fix-request] Approval Request from William Kemper&lt;br/&gt;
This fixes an issue in which an ill-timed heap dump for Shenandoah could cause a crash or heap corruption. The fault was uncovered by running the `TestJcmdHeapDump` test repeatedly and the fix has been verified by the same. Shenandoah now follows the pattern established by ZGC for handling heap dump/inspection requests.</comment>
                            <comment id="14741732" author="roboduke" created="Tue, 21 Jan 2025 13:26:30 -0800"  >[jdk21u-fix-request] Approval Request from William Kemper&lt;br/&gt;
This fixes an issue in which an ill-timed heap dump for Shenandoah could cause a crash or heap corruption. The fault was uncovered by running the `TestJcmdHeapDump` test repeatedly and the fix has been verified by the same. Shenandoah now follows the pattern established by ZGC for handling heap dump/inspection requests.</comment>
                            <comment id="14741561" author="roboduke" created="Tue, 21 Jan 2025 11:45:42 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk23u/pull/237&quot;&gt;https://git.openjdk.org/jdk23u/pull/237&lt;/a&gt;&lt;br/&gt;
Date: 2025-01-21 19:39:12 +0000</comment>
                            <comment id="14741555" author="roboduke" created="Tue, 21 Jan 2025 11:30:17 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1350&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1350&lt;/a&gt;&lt;br/&gt;
Date: 2025-01-21 19:22:03 +0000</comment>
                            <comment id="14741493" author="roboduke" created="Tue, 21 Jan 2025 10:55:57 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/shenandoah-jdk21u/pull/151&quot;&gt;https://git.openjdk.org/shenandoah-jdk21u/pull/151&lt;/a&gt;&lt;br/&gt;
Date: 2025-01-21 18:48:27 +0000</comment>
                            <comment id="14741492" author="roboduke" created="Tue, 21 Jan 2025 10:55:55 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: jdk24&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/23221&quot;&gt;https://git.openjdk.org/jdk/pull/23221&lt;/a&gt;&lt;br/&gt;
Date: 2025-01-21 18:48:13 +0000</comment>
                            <comment id="14741483" author="dukebot" created="Tue, 21 Jan 2025 10:37:07 -0800"  >Changeset: 6a29a811&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    William Kemper &amp;lt;&lt;a href=&apos;mailto:wkemper@openjdk.org&apos;&gt;wkemper@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2025-01-21 18:36:19 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/6a29a8110ec38b4adc8163ba8651cbc935353f1d&quot;&gt;https://git.openjdk.org/jdk/commit/6a29a8110ec38b4adc8163ba8651cbc935353f1d&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14740693" author="roboduke" created="Fri, 17 Jan 2025 15:23:18 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/23186&quot;&gt;https://git.openjdk.org/jdk/pull/23186&lt;/a&gt;&lt;br/&gt;
Date: 2025-01-17 23:12:14 +0000</comment>
                            <comment id="14740689" author="wkemper" created="Fri, 17 Jan 2025 14:43:51 -0800"  >This is caused when an attempt to produce a heap dump conflicts with a concurrent cycle. The heap dump vm operation attempts to run a cycle directly on the VM thread with no regard for the state of the concurrent collection. Although Shenandoah _is_ technically capable of running an entire _full_ GCs on the vm thread, I would rather not add another dependency on full GCs, nor would I like to cancel an in-progress concurrent GC. Instead, Shenandoah will follow the pattern established ZGC in which the calling thread waits for a concurrent cycle to complete before taking the heap dump.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5148641">JDK-8348225</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5148830">JDK-8348394</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5148956">JDK-8348510</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="112375" name="TestJcmdHeapDump.java#aggressive.log" size="9098" author="syan" created="Sat, 7 Dec 2024 05:27:24 -0800"/>
                            <attachment id="112373" name="core.650235.tar.xz.z01" size="52428800" author="syan" created="Sat, 7 Dec 2024 05:29:01 -0800"/>
                            <attachment id="112374" name="core.650235.tar.xz.zip" size="1901754" author="syan" created="Sat, 7 Dec 2024 05:27:31 -0800"/>
                            <attachment id="112372" name="hs_err_pid650235.log" size="201769" author="syan" created="Sat, 7 Dec 2024 05:27:25 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19300"><![CDATA[aarch64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i390ij:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17335"><![CDATA[b07]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="209"><![CDATA[gc]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>