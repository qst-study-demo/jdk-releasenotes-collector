<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 09:20:09 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8340214] C2 compilation asserts with &quot;no node with a side effect&quot; in PhaseIdealLoop::try_sink_out_of_loop</title>
                <link>https://bugs.openjdk.org/browse/JDK-8340214</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>ADDITIONAL SYSTEM INFORMATION :&lt;br/&gt;
OpenJDK 64-Bit Server VM (fastdebug 21.0.5+5-Nightly) for linux-amd64&lt;br/&gt;
Redhat 8.9&lt;br/&gt;
&lt;br/&gt;
A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
While we were upgrading from java 8 to java 21, we encountered an issue where some of the files that our code writes were corrupted. We traced that to a small method that transfers bytes from an Unsafe based Buffer to java.nioByteBuffer. This was happening right after the method got compiled by C2. We believe that after inlining and loop optimizations, the generated code is incorrect (the update positionAddress instruction was likely moved out of the loop). I think we&amp;#39;ve confirmed that when we got a crash report by using a fastdebug build of the Java21.&lt;br/&gt;
&lt;br/&gt;
REGRESSION : Last worked in version 8u421&lt;br/&gt;
&lt;br/&gt;
ACTUAL -&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
# Internal Error (/home/jenkins/node/workspace/Corretto21/generic_linux/x64/build/Corretto21Src/installers/linux/universal/tar/corretto-build/buildRoot/src/hotspot/share/opto/loopopts.cpp:1643), pid=3104989, tid=3105002&lt;br/&gt;
# assert(!n-&amp;gt;is_Store() &amp;amp;&amp;amp; !n-&amp;gt;is_LoadStore()) failed: no node with a side effect&lt;br/&gt;
#&lt;br/&gt;
# JRE version: OpenJDK Runtime Environment Corretto-21.0.5.5.1 (21.0.5+5) (fastdebug build 21.0.5+5-Nightly)&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM Corretto-21.0.5.5.1 (fastdebug 21.0.5+5-Nightly, mixed mode, compressed oops, compressed class ptrs, parallel gc, linux-amd64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V [libjvm.so+0x11fb779] PhaseIdealLoop::try_sink_out_of_loop(Node*)+0xc89&lt;br/&gt;
#&lt;br/&gt;
# Core dump will be written. Default location: Core dumps may be processed with &amp;quot;/usr/lib/systemd/systemd-coredump %P %u %g %s %t %c %h %e&amp;quot; (or dumping to xxx/core.3104989)&lt;br/&gt;
#&lt;br/&gt;
# If you would like to submit a bug report, please visit:&lt;br/&gt;
# &lt;a href=&quot;https://github.com/corretto/corretto-21/issues/&quot;&gt;https://github.com/corretto/corretto-21/issues/&lt;/a&gt;&lt;br/&gt;
#&lt;br/&gt;
&lt;br/&gt;
---------- BEGIN SOURCE ----------&lt;br/&gt;
I haven&amp;#39;t been able to create a small reproducer that doesn&amp;#39;t use any of our internal code yet. The bug is pretty subtle. I am hoping that the hs_err report file could give us more insight into when it happens so that I can make a small executable test case. Is there any easy way to produce this, perhaps using the compiler replay functionality?&lt;br/&gt;
---------- END SOURCE ----------&lt;br/&gt;
&lt;br/&gt;
CUSTOMER SUBMITTED WORKAROUND :&lt;br/&gt;
Using either -XX:-SplitIfBlocks or -XX:CompileCommand=exclude,methodname&lt;br/&gt;
&lt;br/&gt;
We also rewrote the code in a slightly different way so it no longer happens.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
FREQUENCY : always </description>
                <environment></environment>
        <key id="5139090">JDK-8340214</key>
            <summary>C2 compilation asserts with &quot;no node with a side effect&quot; in PhaseIdealLoop::try_sink_out_of_loop</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="roland">Roland Westrelin</assignee>
                                    <reporter username="spayne">Sandra Payne</reporter>
                        <labels>
                            <label>c2</label>
                            <label>dcssp</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk23u-fix-SQE-ok</label>
                            <label>jdk23u-fix-request</label>
                            <label>jdk23u-fix-yes</label>
                            <label>oracle-triage-24</label>
                            <label>regression</label>
                            <label>reproducer-no</label>
                            <label>webbug</label>
                    </labels>
                <created>Fri, 13 Sep 2024 13:55:49 -0700</created>
                <updated>Fri, 24 Jan 2025 05:54:09 -0800</updated>
                            <resolved>Wed, 9 Oct 2024 08:08:10 -0700</resolved>
                                    <version>21</version>
                    <version>23</version>
                    <version>24</version>
                                    <fixVersion>24</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                                                                <comments>
                            <comment id="14718372" author="roboduke" created="Thu, 31 Oct 2024 13:29:30 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1117&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1117&lt;/a&gt;&lt;br/&gt;
Date: 2024-10-31 20:24:19 +0000</comment>
                            <comment id="14718371" author="goetz" created="Thu, 31 Oct 2024 13:23:47 -0700"  >Fix request [21u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 21.0.6-oracle.&lt;br/&gt;
Low to medium risk, small change but typical C2 risk. We should fix it due to good reproducability.&lt;br/&gt;
Clean backport.&lt;br/&gt;
Test passes and reproduces the issue without the fix.  SAP nightly testing passed.&lt;br/&gt;
</comment>
                            <comment id="14712578" author="roboduke" created="Mon, 14 Oct 2024 02:20:41 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk23u/pull/161&quot;&gt;https://git.openjdk.org/jdk23u/pull/161&lt;/a&gt;&lt;br/&gt;
Date: 2024-10-14 09:13:47 +0000</comment>
                            <comment id="14712574" author="thartmann" created="Mon, 14 Oct 2024 02:15:42 -0700"  >[jdk23u-fix-request]&lt;br/&gt;
Critical, customer reported issue leading to incorrect execution / file corruption. Fix is medium risk. Applies cleanly. Tier1-3 passed.</comment>
                            <comment id="14711605" author="dukebot" created="Wed, 9 Oct 2024 08:08:09 -0700"  >Changeset: ff2f39f2&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Roland Westrelin &amp;lt;&lt;a href=&apos;mailto:roland@openjdk.org&apos;&gt;roland@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-10-09 14:59:15 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/ff2f39f24018436556a8956ec55da433dc697437&quot;&gt;https://git.openjdk.org/jdk/commit/ff2f39f24018436556a8956ec55da433dc697437&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14709726" author="roboduke" created="Wed, 2 Oct 2024 04:27:46 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/21303&quot;&gt;https://git.openjdk.org/jdk/pull/21303&lt;/a&gt;&lt;br/&gt;
Date: 2024-10-02 11:21:43 +0000</comment>
                            <comment id="14705772" author="thartmann" created="Wed, 18 Sep 2024 00:29:29 -0700"  >Triggers first after &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8297933&quot; title=&quot;[REDO] Compiler should only use verified interface types for optimization&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8297933&quot;&gt;&lt;strike&gt;JDK-8297933&lt;/strike&gt;&lt;/a&gt; in JDK 21 b05. Roland, could you please have a look?</comment>
                            <comment id="14705748" author="thartmann" created="Tue, 17 Sep 2024 23:34:59 -0700"  >Perfect, I can reproduce the issue now. Investigating.</comment>
                            <comment id="14705747" author="rsurianaraya" created="Tue, 17 Sep 2024 23:25:41 -0700"  >Mail from submitter&lt;br/&gt;
===============&lt;br/&gt;
Thanks for your email.&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;I did spend more time on this and managed to create a standalone reproducible testcase. Please see attached file. I&amp;#39;ve used the command below to start it.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;~/XX/java/amazon-corretto-21.0.5.5.1-linux-x64-fastdebug/bin/java -XX:+UseParallelGC -XX:-TieredCompilation -XX:+PrintCompilation -XX:-BackgroundCompilation  UnsafeTestOsm2.java&amp;quot;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;The crash doesn&amp;#39;t happen with a non fastdebug build version. However, I believe the C2 Compiler generates incorrect code that corrupts the file we were writing to.&lt;br/&gt;
</comment>
                            <comment id="14705523" author="thartmann" created="Tue, 17 Sep 2024 03:05:06 -0700"  >Resolving as Incomplete until we get more information.</comment>
                            <comment id="14705434" author="thartmann" created="Mon, 16 Sep 2024 23:59:02 -0700"  >Regarding reproducing this with compiler replay: We would need the replay_pid*.log file + all the class files that are needed to replay the compilation. The reporter can check if the issue reproduces with:&lt;br/&gt;
&lt;br/&gt;
java XX:+ReplayCompiles -XX:+ReplayIgnoreInitErrors -XX:ReplayDataFile=replay_pid.log  -XX:-CompactStrings -XX:+UseParallelGC -XX:-TieredCompilation -cp CLASSPATH&lt;br/&gt;
&lt;br/&gt;
It would also help to get more information about the affected JDK releases.</comment>
                            <comment id="14705430" author="thartmann" created="Mon, 16 Sep 2024 23:36:14 -0700"  >[~fmatte] &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8294967&quot; title=&quot;C2 fails with assert(!n-&amp;gt;is_Store() &amp;amp;&amp;amp; !n-&amp;gt;is_LoadStore()) failed: no node with a side effect&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8294967&quot;&gt;&lt;strike&gt;JDK-8294967&lt;/strike&gt;&lt;/a&gt; -&amp;gt; &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8288981&quot; title=&quot;[Umbrella] C2: Fix issues with Skeleton/Assertion Predicates&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8288981&quot;&gt;&lt;strike&gt;JDK-8288981&lt;/strike&gt;&lt;/a&gt; does not affect release builds and must therefore be a different issue.&lt;br/&gt;
&lt;br/&gt;
It&amp;#39;s most likely another regression from &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8252372&quot; title=&quot;Check if cloning is required to move loads out of loops in PhaseIdealLoop::split_if_with_blocks_post()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8252372&quot;&gt;&lt;strike&gt;JDK-8252372&lt;/strike&gt;&lt;/a&gt; in JDK 17 that had a huge bug tail. Unfortunately, there is not much we can do without a reproducer. It might be related to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8336472&quot; title=&quot;C2: assert(!n-&amp;gt;is_Store() &amp;amp;&amp;amp; !n-&amp;gt;is_LoadStore()) failed: no node with a side effect&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8336472&quot;&gt;&lt;strike&gt;JDK-8336472&lt;/strike&gt;&lt;/a&gt; or one of the other bugs related to &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8252372&quot; title=&quot;Check if cloning is required to move loads out of loops in PhaseIdealLoop::split_if_with_blocks_post()&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8252372&quot;&gt;&lt;strike&gt;JDK-8252372&lt;/strike&gt;&lt;/a&gt; that we still have open.</comment>
                            <comment id="14705248" author="fmatte" created="Mon, 16 Sep 2024 06:48:05 -0700"  >Similar one of &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8288981&quot; title=&quot;[Umbrella] C2: Fix issues with Skeleton/Assertion Predicates&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8288981&quot;&gt;&lt;strike&gt;JDK-8288981&lt;/strike&gt;&lt;/a&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5143018">JDK-8343524</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5141845">JDK-8342506</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5141846">JDK-8342507</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5134350">JDK-8336472</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5143747">JDK-8344108</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5028509">JDK-8252372</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5088685">JDK-8297933</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5142449">JDK-8343038</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5140521">JDK-8341411</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="111136" name="UnsafeTestOsm2.java" size="11322" author="rsurianaraya" created="Tue, 17 Sep 2024 23:26:11 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10003" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Introduced In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17455"><![CDATA[b05]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10004" key="com.atlassian.jira.plugin.system.customfieldtypes:version">
                        <customfieldname>Introduced In Version</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="22711">21</customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i37x23:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17414"><![CDATA[b19]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>