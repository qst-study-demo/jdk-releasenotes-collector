<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 10:06:19 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8348562] ZGC: segmentation fault due to missing node type check in barrier elision analysis</title>
                <link>https://bugs.openjdk.org/browse/JDK-8348562</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Running jdk/jfr/api/consumer/streaming/TestFilledChunks.java with ZGC on PPC64 leads to a crash due to a missing node type check in the barrier elision analysis:&lt;br/&gt;
&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  SIGSEGV (0xb) at pc=0x00001000027ee234, pid=103220, tid=103252&lt;br/&gt;
#&lt;br/&gt;
# JRE version: OpenJDK Runtime Environment (25.0) (fastdebug build 25-internal-2025-01-23-1552158.rocastan.open)&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM (fastdebug 25-internal-2025-01-23-1552158.rocastan.open, mixed mode, tiered, compressed class ptrs, z gc, linux-ppc64le)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x1bde234]  get_base_and_offset(MachNode const*, long&amp;amp;)+0x354&lt;br/&gt;
#&lt;br/&gt;
&lt;br/&gt;
Stack trace (provided by [~mdoerr]):&lt;br/&gt;
&lt;br/&gt;
V  [libjvm.so+0xa1a3f0]  TypePtr::offset() const+0x14  (type.hpp:994)&lt;br/&gt;
V  [libjvm.so+0x1d35288]  get_base_and_offset(MachNode const*, long&amp;amp;)+0xb0  (zBarrierSetC2.cpp:557)&lt;br/&gt;
V  [libjvm.so+0x1d35818]  is_allocation(Node const*)+0x108  (zBarrierSetC2.cpp:629)&lt;br/&gt;
V  [libjvm.so+0x1d36230]  ZBarrierSetC2::analyze_dominating_barriers() const+0x19c  (zBarrierSetC2.cpp:759)&lt;br/&gt;
V  [libjvm.so+0x1d33ea0]  ZBarrierSetC2::late_barrier_analysis() const+0x54  (zBarrierSetC2.cpp:307)&lt;br/&gt;
V  [libjvm.so+0x167d36c]  PhaseOutput::perform_mach_node_analysis()+0x60  (output.cpp:258)&lt;br/&gt;
V  [libjvm.so+0x167dc50]  PhaseOutput::Output()+0x890  (output.cpp:346)&lt;br/&gt;
V  [libjvm.so+0xa0a57c]  Compile::Code_Gen()+0x4e4  (compile.cpp:3030)&lt;br/&gt;
V  [libjvm.so+0x9fd51c]  Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*)+0x179c  (compile.cpp:884)&lt;br/&gt;
V  [libjvm.so+0x80a220]  C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x1f0  (c2compiler.cpp:141)&lt;br/&gt;
&lt;br/&gt;
The crash has only been observed on PPC64, but there does not seem to be any fundamental reason (other than different addressing mode matching rules) that could prevent it from happening on other platforms.&lt;br/&gt;
&lt;br/&gt;
Thanks to [~mdoerr] for the original bug report, see more context here: &lt;a href=&quot;https://github.com/openjdk/jdk/pull/23235&quot;&gt;https://github.com/openjdk/jdk/pull/23235&lt;/a&gt;.</description>
                <environment></environment>
        <key id="5149019">JDK-8348562</key>
            <summary>ZGC: segmentation fault due to missing node type check in barrier elision analysis</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mdoerr">Martin Doerr</assignee>
                                    <reporter username="rcastanedalo">Roberto Castaneda Lozano</reporter>
                        <labels>
                            <label>CPU25_04-critical-approved</label>
                            <label>c2</label>
                            <label>hgupdate-sync</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk24-fix-request</label>
                            <label>jdk24-fix-yes</label>
                            <label>jdk24u-fix-SQE-ok</label>
                            <label>jdk24u-fix-request</label>
                            <label>jdk24u-fix-yes</label>
                            <label>oracle-triage-25</label>
                            <label>zgc</label>
                    </labels>
                <created>Fri, 24 Jan 2025 01:24:55 -0800</created>
                <updated>Wed, 19 Feb 2025 06:18:28 -0800</updated>
                            <resolved>Mon, 27 Jan 2025 02:15:25 -0800</resolved>
                                    <version>21</version>
                    <version>22</version>
                    <version>23</version>
                    <version>24</version>
                    <version>25</version>
                                    <fixVersion>25</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14749697" author="roboduke" created="Wed, 5 Feb 2025 05:31:41 -0800"  >[jdk21u-fix-request] Approval Request from Martin&lt;br/&gt;
The JVM crashes with SIGSEGV without this fix. The fix is very simple and applies cleanly. It only adds a null check and bails out if null. The current implementation crashes in this case.</comment>
                            <comment id="14746920" author="kvn" created="Mon, 3 Feb 2025 11:17:11 -0800"  >Fix request for JDK 24 approved.</comment>
                            <comment id="14746918" author="mdoerr" created="Mon, 3 Feb 2025 11:15:35 -0800"  >Fix Request (jdk24):&lt;br/&gt;
Backport reason: see [jdk24u-fix-request]. I prefer fixing it in jdk24. If approved, I will close the jdk24u PR.</comment>
                            <comment id="14746893" author="kvn" created="Mon, 3 Feb 2025 10:17:57 -0800"  >Pull request was created for JDK24 branch but Fix request and approval was done for JDK24u.&lt;br/&gt;
Do you want to fix it in JDK24 branch or in update repo?</comment>
                            <comment id="14746889" author="roboduke" created="Mon, 3 Feb 2025 10:03:15 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: jdk24&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/23422&quot;&gt;https://git.openjdk.org/jdk/pull/23422&lt;/a&gt;&lt;br/&gt;
Date: 2025-02-03 17:56:23 +0000</comment>
                            <comment id="14746477" author="thartmann" created="Fri, 31 Jan 2025 00:46:35 -0800"  >&amp;gt; Since it is now P2, should I create a PR for jdk24 instead of jdk24u?&lt;br/&gt;
&lt;br/&gt;
Yes, I think that would make sense.</comment>
                            <comment id="14746316" author="mdoerr" created="Thu, 30 Jan 2025 09:14:53 -0800"  >I haven&amp;#39;t tried to write a dedicated regression test. Current regression test is to run jdk/jfr tests with Generational ZGC on PPC64le. That reproduces the error.&lt;br/&gt;
After &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8346280&quot; title=&quot;C2: implement late barrier elision for G1&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8346280&quot;&gt;&lt;strike&gt;JDK-8346280&lt;/strike&gt;&lt;/a&gt;, the fix is needed for G1, too. The bug was observed there.&lt;br/&gt;
&lt;br/&gt;
Since it is now P2, should I create a PR for jdk24 instead of jdk24u?&lt;br/&gt;
</comment>
                            <comment id="14745077" author="thartmann" created="Wed, 29 Jan 2025 00:29:04 -0800"  >[~mdoerr] I assume it was not easily possible to add a targeted regression test for this?&lt;br/&gt;
&lt;br/&gt;
ILW = Crash during C2 compilation, with ZGC on PPC64, no workaround but disable compilation of affected method or use different GC = HMM = P2</comment>
                            <comment id="14744770" author="roboduke" created="Tue, 28 Jan 2025 01:50:08 -0800"  >[jdk24u-fix-request] Approval Request from Martin&lt;br/&gt;
The JVM crashes with SIGSEGV without this fix. The fix is very simple and applies cleanly. It only adds a null check and bails out if null. The current implementation crashes in this case.</comment>
                            <comment id="14744188" author="roboduke" created="Mon, 27 Jan 2025 03:07:55 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1361&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1361&lt;/a&gt;&lt;br/&gt;
Date: 2025-01-27 11:01:00 +0000</comment>
                            <comment id="14744174" author="roboduke" created="Mon, 27 Jan 2025 02:29:58 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk24u/pull/35&quot;&gt;https://git.openjdk.org/jdk24u/pull/35&lt;/a&gt;&lt;br/&gt;
Date: 2025-01-27 10:23:34 +0000</comment>
                            <comment id="14744167" author="dukebot" created="Mon, 27 Jan 2025 02:15:21 -0800"  >Changeset: afcc2b03&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Martin Doerr &amp;lt;&lt;a href=&apos;mailto:mdoerr@openjdk.org&apos;&gt;mdoerr@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2025-01-27 10:11:53 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/afcc2b03afc77f730300e1d92471466d56ed75fb&quot;&gt;https://git.openjdk.org/jdk/commit/afcc2b03afc77f730300e1d92471466d56ed75fb&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14743015" author="roboduke" created="Fri, 24 Jan 2025 02:44:33 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/23295&quot;&gt;https://git.openjdk.org/jdk/pull/23295&lt;/a&gt;&lt;br/&gt;
Date: 2025-01-24 10:38:29 +0000</comment>
                            <comment id="14742988" author="rcastanedalo" created="Fri, 24 Jan 2025 01:28:09 -0800"  >Hi [~mdoerr], I assigned this issue to you because you have already a patch available and are in a better position to test it (since the crash is only observed on PPC64). Feel free to assign it back to me if you disagree.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5149896">JDK-8349362</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5150210">JDK-8349657</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5150973">JDK-8350318</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5150993">JDK-8350339</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10000">
                    <name>Blocks</name>
                                            <outwardlinks description="blocks">
                                        <issuelink>
            <issuekey id="5146338">JDK-8346280</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5149130">JDK-8348656</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5099682">JDK-8307058</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="113073" name="hs_err_pid103220.log" size="185682" author="rcastanedalo" created="Fri, 24 Jan 2025 01:23:28 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10003" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Introduced In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17640"><![CDATA[b23]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10004" key="com.atlassian.jira.plugin.system.customfieldtypes:version">
                        <customfieldname>Introduced In Version</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="22711">21</customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i39kbv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17337"><![CDATA[b08]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>