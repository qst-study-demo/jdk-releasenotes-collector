<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 10:46:15 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8344925] translet-name ignored when package-name is also set</title>
                <link>https://bugs.openjdk.org/browse/JDK-8344925</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Background&lt;br/&gt;
&lt;br/&gt;
GraalVM native executables do not allow loading classes at runtime due to the closed world assumption. To make XSLT work with them, we generate XSLT Translet classes at build time and let native-image compile them into the native executable. For that to work reliably, we need to be able to set the name of the generated class so that we are then able to find the class and pass it to the native compiler.&lt;br/&gt;
&lt;br/&gt;
Steps to reproduce&lt;br/&gt;
&lt;br/&gt;
To generate a Translet class for a given XSL file, we perform steps similar to the following:&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
import javax.xml.transform.TransformerFactory;&lt;br/&gt;
import javax.xml.transform.stream.StreamSource;&lt;br/&gt;
import java.io.File;&lt;br/&gt;
import java.nio.file.Files;&lt;br/&gt;
import java.nio.file.Path;&lt;br/&gt;
import java.util.Comparator;&lt;br/&gt;
&lt;br/&gt;
public class Main {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main(String[] args) throws Exception {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TransformerFactory tf = TransformerFactory.newInstance();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tf.setAttribute(&amp;quot;generate-translet&amp;quot;, true);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tf.setAttribute(&amp;quot;translet-name&amp;quot;, &amp;quot;MyTranslet&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tf.setAttribute(&amp;quot;package-name&amp;quot;, &amp;quot;org.acme&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tf.setAttribute(&amp;quot;destination-directory&amp;quot;, &amp;quot;test&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Path test = Path.of(&amp;quot;test&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (Files.exists(test)) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Files.walk(test).sorted(Comparator.reverseOrder()).map(Path::toFile).forEach(File::delete);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;File xslFile = new File(args[0]);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tf.newTemplates(new StreamSource(Files.newInputStream(xslFile.toPath())));&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Files.list(Path.of(&amp;quot;test/org/acme&amp;quot;)).forEach(System.out::println);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
When this program is compiled through javac Main.java and run via java Main test.xsl, where test.xsl is any simple XSL file, such as&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;iso-8859-1&amp;quot;?&amp;gt;&lt;br/&gt;
&amp;lt;xsl:stylesheet version=&amp;quot;1.0&amp;quot; xmlns:xsl=&amp;quot;&lt;a href=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;http://www.w3.org/1999/XSL/Transform&lt;/a&gt;&amp;quot;&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;xsl:output method=&amp;quot;xml&amp;quot; version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;/&amp;gt;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;xsl:template match=&amp;quot;/request&amp;quot;&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;xsl:variable name=&amp;quot;name&amp;quot; select=&amp;quot;//name/text()&amp;quot;/&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;response&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;message&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;xsl:value-of select=&amp;quot;concat(&amp;#39;Hello, &amp;#39;, $name)&amp;quot;/&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/message&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/response&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/xsl:template&amp;gt;&lt;br/&gt;
&amp;lt;/xsl:stylesheet&amp;gt;&lt;br/&gt;
```&lt;br/&gt;
&lt;br/&gt;
then, we expect to find the generated translet file under test/org/acme/MyTranslet.class. In reality, the generated translet is under test/org/acme/die_verwandlung.class.&lt;br/&gt;
&lt;br/&gt;
Analysis&lt;br/&gt;
&lt;br/&gt;
The execution flow goes via com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl.newTemplates(Source), where a new com.sun.org.apache.xalan.internal.xsltc.trax.XSLTC is created and its setClassName(String) and setPackageName(String) are called.&lt;br/&gt;
&lt;br/&gt;
XSLTC.setClassName(String) does some sanitization of the passed className and if the _packageName field is set, it sets the _className field to _packageName + &amp;#39;.&amp;#39; + name.&lt;br/&gt;
&lt;br/&gt;
Because XSLTC._packageName is initialized to &amp;quot;die.verwandlung&amp;quot;, then, after the first call of setClassName(&amp;quot;MyTranslet&amp;quot;), the value of _packageName is &amp;quot;die.verwandlung.MyTranslet&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
The XSLTC.setPackageName(&amp;quot;org.acme&amp;quot;) called afterwards, first sets the _packageName field to the passed value and then, if _className != null, it calls setClassName(_className).&lt;br/&gt;
&lt;br/&gt;
In our situation, it effectively means calling setClassName(&amp;quot;die.verwandlung.MyTranslet&amp;quot;).&lt;br/&gt;
&lt;br/&gt;
The sanitization of the passed value done within this second setClassName() call transforms &amp;quot;die.verwandlung.MyTranslet&amp;quot; into &amp;quot;die_verwandlung&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
Afterwards, the _className field is set to _packageName + &amp;#39;.&amp;#39; + name which is &amp;quot;org.acme&amp;quot; + &amp;#39;.&amp;#39; + &amp;quot;die_verwandlung&amp;quot; in our case.&lt;br/&gt;
&lt;br/&gt;
Observation: the ASF Xalan does not initialize XSLTC._packageName to &amp;quot;die.verwandlung&amp;quot; and therefore the reproducer code works as expected there.&lt;br/&gt;
&lt;br/&gt;
Possible solutions&lt;br/&gt;
&lt;br/&gt;
A. In TransformerFactoryImpl.newTemplates(Source), call XSLTC.setPackageName(String) before XSLTC.setClassName(String).&lt;br/&gt;
&lt;br/&gt;
B. In XSLTC.setPackageName(String), instead of calling setClassName(_className), pass only the simple class name extracted from the _className field to setClassName(String).&lt;br/&gt;
&lt;br/&gt;
C. Make XSLTC.setClassName(String) throw an exception when it is called with a className containig ., / or \; document that it expects a simple name, document that it sets _className to a fully qualified name when _packageName is set; move all sanitization to callers of XSLTC.setClassName(String). (This implies solution B).</description>
                <environment></environment>
        <key id="5144744">JDK-8344925</key>
            <summary>translet-name ignored when package-name is also set</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="joehw">Joe Wang</assignee>
                                    <reporter username="galder">Galder Zamarre&#241;o</reporter>
                        <labels>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk24u-fix-SQE-ok-next</label>
                            <label>jdk24u-fix-request</label>
                            <label>jdk24u-fix-yes</label>
                    </labels>
                <created>Sun, 24 Nov 2024 21:40:52 -0800</created>
                <updated>Wed, 14 May 2025 01:54:52 -0700</updated>
                            <resolved>Thu, 6 Feb 2025 18:27:45 -0800</resolved>
                                    <version>25</version>
                                    <fixVersion>25</fixVersion>
                                    <component>xml</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                                                                <comments>
                            <comment id="14777267" author="roboduke" created="Tue, 6 May 2025 08:24:57 -0700"  >[jdk21u-fix-request] Approval Request from Galder Zamarre&amp;#xF1;o&lt;br/&gt;
The bug impacts Red Hat middleware engineers trying to adopt JDK&amp;#39;s xalan API. Without this fix, it is not possible to fix the generated class name rather than being random. This is necessary so that Java code that relies on JDK&amp;#39;s xalan API can run fine when compiled as a GraalVM native image, which requires class names that are loaded via reflection to be configured in advance.</comment>
                            <comment id="14754712" author="roboduke" created="Tue, 18 Feb 2025 21:43:02 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1412&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1412&lt;/a&gt;&lt;br/&gt;
Date: 2025-02-19 05:37:27 +0000</comment>
                            <comment id="14751779" author="roboduke" created="Thu, 13 Feb 2025 08:08:34 -0800"  >[jdk24u-fix-request] Approval Request from Galder Zamarre&amp;#xF1;o&lt;br/&gt;
The bug impacts Red Hat middleware engineers trying to adopt JDK&amp;#39;s xalan API</comment>
                            <comment id="14751665" author="roboduke" created="Thu, 13 Feb 2025 01:44:52 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk24u/pull/73&quot;&gt;https://git.openjdk.org/jdk24u/pull/73&lt;/a&gt;&lt;br/&gt;
Date: 2025-02-13 09:39:29 +0000</comment>
                            <comment id="14750146" author="dukebot" created="Thu, 6 Feb 2025 18:27:44 -0800"  >Changeset: 3989a199&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Joe Wang &amp;lt;&lt;a href=&apos;mailto:joehw@openjdk.org&apos;&gt;joehw@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2025-02-07 02:26:20 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/3989a199578fc1d91988cfdbb95f11dd6d4c7b81&quot;&gt;https://git.openjdk.org/jdk/commit/3989a199578fc1d91988cfdbb95f11dd6d4c7b81&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14748942" author="roboduke" created="Tue, 4 Feb 2025 10:35:09 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/23446&quot;&gt;https://git.openjdk.org/jdk/pull/23446&lt;/a&gt;&lt;br/&gt;
Date: 2025-02-04 18:30:34 +0000</comment>
                            <comment id="14742753" author="roboduke" created="Thu, 23 Jan 2025 13:55:18 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/22425&quot;&gt;https://git.openjdk.org/jdk/pull/22425&lt;/a&gt;&lt;br/&gt;
Date: 2024-11-28 01:09:47 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5150918">JDK-8350270</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5158624">JDK-8356943</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i38urf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17338"><![CDATA[b10]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>