<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 09:06:44 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8333144] docker tests do not work when ubsan is configured</title>
                <link>https://bugs.openjdk.org/browse/JDK-8333144</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Currently when we run with ubsan - enabled binaries (configure option --enable-ubsan, see &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8298448&quot; title=&quot;UndefinedBehaviorSanitizer&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8298448&quot;&gt;&lt;strike&gt;JDK-8298448&lt;/strike&gt;&lt;/a&gt;), the docker tests do not work.&lt;br/&gt;
For example :&lt;br/&gt;
&lt;br/&gt;
containers/docker/TestCPUSets.jtr&lt;br/&gt;
&lt;br/&gt;
[STDOUT]&lt;br/&gt;
/jdk/bin/java: error while loading shared libraries: libubsan.so.1: cannot open shared object file: No such file or directory&lt;br/&gt;
&lt;br/&gt;
The container where the test is executed does not contain the ubsan package;  we might skip the test in this case or find a way to add the ubsan package / lib(s) to the container.</description>
                <environment></environment>
        <key id="5130554">JDK-8333144</key>
            <summary>docker tests do not work when ubsan is configured</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mbaesken">Matthias Baesken</assignee>
                                    <reporter username="mbaesken">Matthias Baesken</reporter>
                        <labels>
                            <label>containers</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>noreg-self</label>
                            <label>ubsan</label>
                    </labels>
                <created>Wed, 29 May 2024 00:03:00 -0700</created>
                <updated>Wed, 25 Jun 2025 06:07:41 -0700</updated>
                            <resolved>Mon, 5 Aug 2024 00:03:20 -0700</resolved>
                                    <version>21</version>
                    <version>23</version>
                    <version>24</version>
                                    <fixVersion>24</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14792939" author="mbaesken" created="Wed, 25 Jun 2025 04:21:22 -0700"  >&amp;gt; Skipping them is fine with me too. Best to do that by using a new requires jtreg tag in jtreg-ext.&lt;br/&gt;
&lt;br/&gt;
Hi [~sgehwolf] probably I go for skipping;  we have now @requires !vm.asan   /  @requires vm.asan  (since &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8357826&quot; title=&quot;Avoid running some jtreg tests when asan is configured&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8357826&quot;&gt;&lt;strike&gt;JDK-8357826&lt;/strike&gt;&lt;/a&gt;) so the jtreg tag is already available.&lt;br/&gt;
&lt;br/&gt;
I created &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8360518&quot; title=&quot;Docker tests do not work when asan is configured&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8360518&quot;&gt;&lt;strike&gt;JDK-8360518&lt;/strike&gt;&lt;/a&gt; .&lt;br/&gt;
&lt;br/&gt;
If we want to change the container to enable running asan-ized binaries, the package depends on gcc used in the build ;  it could be libasan8  but for old gcc also libasan6  (or even something else).&lt;br/&gt;
So it is unclear to me what to add to make it  always work. </comment>
                            <comment id="14792847" author="sgehwolf" created="Wed, 25 Jun 2025 01:54:58 -0700"  >[~mbaesken] This sanitizer-enabled testing in docker seems to open a can of worms. If you really want container testing on such builds, how about you create a custom base image and specify those asan/ubsan whatever enabled base image/version pairs with -Djdk.test.docker.image.name=&amp;lt;name&amp;gt; -Djdk.test.docker.image.version=&amp;lt;version&amp;gt; properties. This frees you from whatever the deps are of those sanitizers. Skipping them is fine with me too. Best to do that by using a new requires jtreg tag in jtreg-ext.</comment>
                            <comment id="14792832" author="mbaesken" created="Wed, 25 Jun 2025 01:17:10 -0700"  >Hi [~sgehwolf]  unfortunately we have a similar issue when using address sanitizer ASAN (configure flag --enable-asan).  In this case we get an additional dependency to the ASAN lib  (might be libasan.so.8 or something else, there can be different versions on the system at once).&lt;br/&gt;
And later when java is executed in the container we run into something like this, because the container has no ASAN runtime lib in it :&lt;br/&gt;
[STDOUT]&lt;br/&gt;
Untagged: jdk-internal:test-containers-docker-TestCPUSets-cpusets&lt;br/&gt;
STDERR:&lt;br/&gt;
&amp;nbsp;stdout: [/jdk/bin/java: error while loading shared libraries: libasan.so.8: cannot open shared object file: No such file or directory&lt;br/&gt;
];&lt;br/&gt;
We could try to install  ASAN into the container (but this generates further deps for the containers and also we night need different libasan depending on the gcc/clang version).&lt;br/&gt;
Or skip those tests like we do for some others in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8357826&quot;&gt;https://bugs.openjdk.org/browse/JDK-8357826&lt;/a&gt; .&lt;br/&gt;
</comment>
                            <comment id="14723211" author="roboduke" created="Mon, 18 Nov 2024 08:26:10 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1161&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1161&lt;/a&gt;&lt;br/&gt;
Date: 2024-11-18 16:14:10 +0000</comment>
                            <comment id="14723202" author="mbaesken" created="Mon, 18 Nov 2024 08:17:51 -0800"  >jdk21u-dev backport request&lt;br/&gt;
I would like to have the patch in jdk21u-dev as well, because the issue is present there too.  The backport is clean;  regarding risk we need to bring 8338550 too to jdk21u-dev, will be done as a follow up.</comment>
                            <comment id="14699053" author="sgehwolf" created="Mon, 19 Aug 2024 01:26:54 -0700"  >If you must, you can amend configure to do that for you when you run with --enable-ubsan. But that&amp;#39;s for another day. Lets unbreak the docker testing first.</comment>
                            <comment id="14699052" author="sgehwolf" created="Mon, 19 Aug 2024 01:25:20 -0700"  >Sure, so set -Djdk.test.docker.image.isUbsan=true on builds which have --enable-ubsan.</comment>
                            <comment id="14699051" author="mbaesken" created="Mon, 19 Aug 2024 01:21:28 -0700"  >&amp;gt; Clearly, you must be configuring your builds somehow to use ubsan as it&amp;#39;s not turned on by default.&lt;br/&gt;
&lt;br/&gt;
The configure flag is &amp;#39;--enable-ubsan&amp;#39; .</comment>
                            <comment id="14699049" author="sgehwolf" created="Mon, 19 Aug 2024 01:18:07 -0700"  >&amp;gt; Should we set this automatically in some way or manual ? &lt;br/&gt;
&lt;br/&gt;
I&amp;#39;d say you set this for your builds where you have ubsan enabled with the relevant configure option. Clearly, you must be configuring your builds somehow to use ubsan as it&amp;#39;s not turned on by default. Not sure what you mean by manual vs. automatic in this context. See also &lt;a href=&quot;https://github.com/openjdk/jdk/blob/master/doc/testing.md#docker-tests&quot;&gt;https://github.com/openjdk/jdk/blob/master/doc/testing.md#docker-tests&lt;/a&gt; for how you can set those options in your make invocation.</comment>
                            <comment id="14698938" author="mbaesken" created="Sun, 18 Aug 2024 23:45:20 -0700"  >&amp;gt; Run with -Djdk.test.docker.image.isUbsan=true for ubsan enabled builds.&lt;br/&gt;
&lt;br/&gt;
Should we set this automatically in some way or manual ?</comment>
                            <comment id="14698755" author="sgehwolf" created="Fri, 16 Aug 2024 06:43:28 -0700"  >Suggested patch:&lt;br/&gt;
&lt;br/&gt;
$ git diff&lt;br/&gt;
diff --git a/test/lib/jdk/test/lib/containers/docker/DockerTestUtils.java b/test/lib/jdk/test/lib/containers/docker/DockerTestUtils.java&lt;br/&gt;
index c87796da47e..c6b720062af 100644&lt;br/&gt;
--- a/test/lib/jdk/test/lib/containers/docker/DockerTestUtils.java&lt;br/&gt;
+++ b/test/lib/jdk/test/lib/containers/docker/DockerTestUtils.java&lt;br/&gt;
@@ -157,7 +157,8 @@ public static void buildJdkContainerImage(String imageName, String dockerfileCon&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;generateDockerFile(buildDir.resolve(&amp;quot;Dockerfile&amp;quot;),&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DockerfileConfig.getBaseImageName(),&lt;br/&gt;
-                           DockerfileConfig.getBaseImageVersion());&lt;br/&gt;
+                           DockerfileConfig.getBaseImageVersion(),&lt;br/&gt;
+                           DockerfileConfig.getExtra());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// Copy JDK-under-test tree to the docker build directory.&lt;br/&gt;
@@ -320,14 +321,14 @@ private static String limitLines(String buffer, int nrOfLines) {&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private static void generateDockerFile(Path dockerfile, String baseImage,&lt;br/&gt;
-                                           String baseImageVersion) throws Exception {&lt;br/&gt;
+                                           String baseImageVersion, String extra) throws Exception {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String template =&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;FROM %s:%s\n&amp;quot; +&lt;br/&gt;
-            &amp;quot;RUN apt-get install libubsan1\n&amp;quot; +&lt;br/&gt;
+            &amp;quot;%s&amp;quot; +&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;COPY /jdk /jdk\n&amp;quot; +&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;ENV JAVA_HOME=/jdk\n&amp;quot; +&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;CMD [\&amp;quot;/bin/bash\&amp;quot;]\n&amp;quot;;&lt;br/&gt;
-        String dockerFileStr = String.format(template, baseImage, baseImageVersion);&lt;br/&gt;
+        String dockerFileStr = String.format(template, baseImage, baseImageVersion, extra);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Files.writeString(dockerfile, dockerFileStr);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
diff --git a/test/lib/jdk/test/lib/containers/docker/DockerfileConfig.java b/test/lib/jdk/test/lib/containers/docker/DockerfileConfig.java&lt;br/&gt;
index 9d73ad185f1..2d1c0700160 100644&lt;br/&gt;
--- a/test/lib/jdk/test/lib/containers/docker/DockerfileConfig.java&lt;br/&gt;
+++ b/test/lib/jdk/test/lib/containers/docker/DockerfileConfig.java&lt;br/&gt;
@@ -70,4 +70,13 @@ public static String getBaseImageVersion() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return &amp;quot;latest&amp;quot;;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
+&lt;br/&gt;
+    public static String getExtra() {&lt;br/&gt;
+        boolean isUbsan = Boolean.getBoolean(&amp;quot;jdk.test.docker.image.isUbsan&amp;quot;);&lt;br/&gt;
+        if (isUbsan) {&lt;br/&gt;
+            System.out.println(&amp;quot;DockerfileConfig: Adding ubsan to installed packages.&amp;quot;);&lt;br/&gt;
+            return &amp;quot;RUN apt-get install libubsan1\n&amp;quot;;&lt;br/&gt;
+        }&lt;br/&gt;
+        return &amp;quot;&amp;quot;; // empty by default&lt;br/&gt;
+    }&lt;br/&gt;
&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Run with -Djdk.test.docker.image.isUbsan=true for ubsan enabled builds.</comment>
                            <comment id="14698751" author="sgehwolf" created="Fri, 16 Aug 2024 06:27:48 -0700"  >The worst thing is that on RPM-based distros you&amp;#39;d likely get all tests skipped since building of the base image fails.</comment>
                            <comment id="14698750" author="sgehwolf" created="Fri, 16 Aug 2024 06:22:02 -0700"  >[~mbaesken] Sorry I seem to have missed the notification. Anyway, this fix breaks container tests when run on non APT distros. For example, when I run tests on Fedora 39 like so:&lt;br/&gt;
&lt;br/&gt;
# rm -rf JTwork/ JTreport/ &amp;amp;&amp;amp; /disk/openjdk/upstream-sources/jtreg-7.4+1/bin/jtreg -verbose:summary -testjdk:./build/linux-x86_64-server-release/images/jdk -Djdk.test.docker.image.name=fedora -Djdk.test.docker.image.version=39 test/hotspot/jtreg/containers/docker/DockerBasicTest.java&lt;br/&gt;
&lt;br/&gt;
It fails with:&lt;br/&gt;
&lt;br/&gt;
Full child process STDOUT was saved to docker-stdout-48215.log&lt;br/&gt;
[2024-08-16T13:15:37.020346500Z] Waiting for completion for process 48215&lt;br/&gt;
[2024-08-16T13:15:37.020437331Z] Waiting for completion finished for process 48215&lt;br/&gt;
DockerfileConfig: using custom image name: fedora&lt;br/&gt;
DockerfileConfig: using custom image version: 39&lt;br/&gt;
[COMMAND]&lt;br/&gt;
docker build --no-cache --tag jdk-internal:test-containers-docker-DockerBasicTest-basic jdk-internal-test-containers-docker-DockerBasicTest-basic&lt;br/&gt;
[2024-08-16T13:15:38.600886247Z] Gathering output for process 48228&lt;br/&gt;
[ELAPSED: 4390 ms]&lt;br/&gt;
[STDERR]&lt;br/&gt;
DEPRECATED: The legacy builder is deprecated and will be removed in a future release.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Install the buildx component to build images with BuildKit:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://docs.docker.com/go/buildx/&quot;&gt;https://docs.docker.com/go/buildx/&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
The command &amp;#39;/bin/sh -c apt-get install libubsan1&amp;#39; returned a non-zero code: 127&lt;br/&gt;
&lt;br/&gt;
[STDOUT]&lt;br/&gt;
Sending build context to Docker daemon  1.083GB&lt;br/&gt;
&lt;br/&gt;
Step 1/5 : FROM fedora:39&lt;br/&gt;
&amp;nbsp;---&amp;gt; c81c8ae4dda7&lt;br/&gt;
Step 2/5 : RUN apt-get install libubsan1&lt;br/&gt;
&amp;nbsp;---&amp;gt; Running in 4a85b39972f5&lt;br/&gt;
\u001b[91m/bin/sh: line 1: apt-get: command not found&lt;br/&gt;
\u001b[0m&lt;br/&gt;
Full child process STDOUT was saved to docker-stdout-48228.log&lt;br/&gt;
[2024-08-16T13:15:42.990834092Z] Waiting for completion for process 48228&lt;br/&gt;
[2024-08-16T13:15:42.990952020Z] Waiting for completion finished for process 48228&lt;br/&gt;
----------System.err:(32/1661)*----------&lt;br/&gt;
&amp;nbsp;stdout: [Sending build context to Docker daemon  1.083GB&lt;br/&gt;
&lt;br/&gt;
Step 1/5 : FROM fedora:39&lt;br/&gt;
&amp;nbsp;---&amp;gt; c81c8ae4dda7&lt;br/&gt;
Step 2/5 : RUN apt-get install libubsan1&lt;br/&gt;
&amp;nbsp;---&amp;gt; Running in 4a85b39972f5&lt;br/&gt;
\u001b[91m/bin/sh: line 1: apt-get: command not found&lt;br/&gt;
\u001b[0m];&lt;br/&gt;
&amp;nbsp;stderr: [DEPRECATED: The legacy builder is deprecated and will be removed in a future release.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Install the buildx component to build images with BuildKit:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://docs.docker.com/go/buildx/&quot;&gt;https://docs.docker.com/go/buildx/&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
The command &amp;#39;/bin/sh -c apt-get install libubsan1&amp;#39; returned a non-zero code: 127&lt;br/&gt;
]&lt;br/&gt;
&amp;nbsp;exitValue = 127&lt;br/&gt;
&lt;br/&gt;
jtreg.SkippedException: Building docker image failed. Details:&lt;br/&gt;
Expected to get exit value of [0], exit value is: [127]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.test.lib.containers.docker.DockerTestUtils.buildImage(DockerTestUtils.java:190)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.test.lib.containers.docker.DockerTestUtils.buildJdkContainerImage(DockerTestUtils.java:170)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at jdk.test.lib.containers.docker.DockerTestUtils.buildJdkContainerImage(DockerTestUtils.java:132)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at DockerBasicTest.main(DockerBasicTest.java:51)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.lang.reflect.Method.invoke(Method.java:588)&lt;br/&gt;
&lt;br/&gt;
Obviously, since apt-get is debian/ubuntu specific. The basic Dockerfile needs to be distro agnostic.</comment>
                            <comment id="14695702" author="dukebot" created="Mon, 5 Aug 2024 00:03:17 -0700"  >Changeset: fbe8a81d&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Matthias Baesken &amp;lt;&lt;a href=&apos;mailto:mbaesken@openjdk.org&apos;&gt;mbaesken@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-08-05 05:57:41 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/fbe8a81d1900d0de1920ad1df6ad574f3da4bd51&quot;&gt;https://git.openjdk.org/jdk/commit/fbe8a81d1900d0de1920ad1df6ad574f3da4bd51&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14684983" author="roboduke" created="Wed, 26 Jun 2024 06:39:06 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/19907&quot;&gt;https://git.openjdk.org/jdk/pull/19907&lt;/a&gt;&lt;br/&gt;
Date: 2024-06-26 13:32:32 +0000</comment>
                            <comment id="14683620" author="mbaesken" created="Fri, 21 Jun 2024 03:59:52 -0700"  >We currently compile (see UBSAN_CFLAGS)  with -DUNDEFINED_BEHAVIOR_SANITIZER when ubsan support is enabled in the configure step; should we somehow pass this to the test (e.g. test lib method or property?)  and in this case avoid the docker tests ?&lt;br/&gt;
Other option might be to adjust generateDockerFile and add some &amp;#39;RUN apt-get install &amp;lt;ubsan-pkg-name&amp;gt;&amp;#39;  to get the needed package, but this would be distro-specific, not sure if this is what we want ?</comment>
                            <comment id="14677143" author="mbaesken" created="Wed, 29 May 2024 03:12:15 -0700"  >[~sgehwolf] any ideas ? Should we maybe add a check to the docker tests, and skip them in case ubsan is enabled ?&lt;br/&gt;
Unfortunately such a check does not yet exist afaik.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5144353">JDK-8344605</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5162676">JDK-8360518</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5089292">JDK-8298448</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5136963">JDK-8338550</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i36ioz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17338"><![CDATA[b10]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="192"><![CDATA[runtime]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>