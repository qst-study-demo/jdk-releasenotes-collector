<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 08:55:33 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8318442] java/net/httpclient/ManyRequests2.java fails intermittently on Linux</title>
                <link>https://bugs.openjdk.org/browse/JDK-8318442</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>On Linux, especially on Linux ppc64le test machines  (RHEL8.5, Ubuntu 22.04)  we see intermittent failures of java/net/httpclient/ManyRequests2.java .&lt;br/&gt;
Failure seems to be this :&lt;br/&gt;
Oct 18, 2023 8:47:49 AM sun.net.httpserver.ServerImpl$Exchange run&lt;br/&gt;
FINER: ServerImpl.Exchange (5)&lt;br/&gt;
java.lang.AssertionError: State is not REQUEST (IDLE)&lt;br/&gt;
	at jdk.httpserver/sun.net.httpserver.ServerImpl.requestCompleted(ServerImpl.java:1001)&lt;br/&gt;
	at jdk.httpserver/sun.net.httpserver.FixedLengthInputStream.readImpl(FixedLengthInputStream.java:63)&lt;br/&gt;
	at jdk.httpserver/sun.net.httpserver.LeftOverInputStream.read(LeftOverInputStream.java:99)&lt;br/&gt;
	at java.base/java.io.InputStream.readNBytes(InputStream.java:412)&lt;br/&gt;
	at java.base/java.io.InputStream.readAllBytes(InputStream.java:349)&lt;br/&gt;
	at EchoHandler.handle(EchoHandler.java:48)&lt;br/&gt;
	at ManyRequests$TestEchoHandler.handle(ManyRequests.java:147)&lt;br/&gt;
	at jdk.httpserver/com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98)&lt;br/&gt;
	at jdk.httpserver/sun.net.httpserver.AuthFilter.doFilter(AuthFilter.java:82)&lt;br/&gt;
	at jdk.httpserver/com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:101)&lt;br/&gt;
	at jdk.httpserver/sun.net.httpserver.ServerImpl$Exchange$LinkHandler.handle(ServerImpl.java:871)&lt;br/&gt;
	at jdk.httpserver/com.sun.net.httpserver.Filter$Chain.doFilter(Filter.java:98)&lt;br/&gt;
	at jdk.httpserver/sun.net.httpserver.ServerImpl$Exchange.run(ServerImpl.java:845)&lt;br/&gt;
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)&lt;br/&gt;
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1570)&lt;br/&gt;
&lt;br/&gt;
Is the state IDLE maybe also valid under some circumstances ?&lt;br/&gt;
Or should we mark the test &amp;quot;intermittent&amp;quot;  ?</description>
                <environment></environment>
        <key id="5112753">JDK-8318442</key>
            <summary>java/net/httpclient/ManyRequests2.java fails intermittently on Linux</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="djelinski">Daniel Jelinski</assignee>
                                    <reporter username="mbaesken">Matthias Baesken</reporter>
                        <labels>
                            <label>intermittent</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk23u-fix-request</label>
                            <label>noreg-self</label>
                            <label>ursqe-triaged</label>
                    </labels>
                <created>Wed, 18 Oct 2023 05:32:25 -0700</created>
                <updated>Mon, 16 Dec 2024 06:42:55 -0800</updated>
                            <resolved>Wed, 6 Nov 2024 00:05:13 -0800</resolved>
                                    <version>21</version>
                    <version>22</version>
                    <version>23</version>
                                    <fixVersion>24</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14731991" author="mbaesken" created="Fri, 13 Dec 2024 06:29:31 -0800"  >jdk17u-dev backport request&lt;br/&gt;
I would like to have the patch in jdk17u-dev as well, because the issue is present there too. The backport is almost clean (some diff in the strides) and low risk,</comment>
                            <comment id="14731985" author="roboduke" created="Fri, 13 Dec 2024 05:52:25 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/3113&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/3113&lt;/a&gt;&lt;br/&gt;
Date: 2024-12-13 13:47:28 +0000</comment>
                            <comment id="14722373" author="mbaesken" created="Thu, 14 Nov 2024 06:55:04 -0800"  >jdk21u-dev backport request&lt;br/&gt;
I would like to have the patch in jdk21u-dev as well, because the issue is present there too. The backport is clean and low risk,</comment>
                            <comment id="14722372" author="roboduke" created="Thu, 14 Nov 2024 06:54:13 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1155&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1155&lt;/a&gt;&lt;br/&gt;
Date: 2024-11-14 14:44:43 +0000</comment>
                            <comment id="14720271" author="mbaesken" created="Fri, 8 Nov 2024 00:46:52 -0800"  >jdk23u backport request&lt;br/&gt;
I would like to have the patch in jdk23u as well, because the issue is present there too. The backport is clean and low risk,</comment>
                            <comment id="14719478" author="roboduke" created="Wed, 6 Nov 2024 00:18:25 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk23u/pull/217&quot;&gt;https://git.openjdk.org/jdk23u/pull/217&lt;/a&gt;&lt;br/&gt;
Date: 2024-11-06 08:10:18 +0000</comment>
                            <comment id="14719474" author="dukebot" created="Wed, 6 Nov 2024 00:05:12 -0800"  >Changeset: 06d8216a&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Matthias Baesken &amp;lt;&lt;a href=&apos;mailto:mbaesken@openjdk.org&apos;&gt;mbaesken@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-11-06 08:03:26 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/06d8216a4ef6b883119459da7e52b37d16cd2f03&quot;&gt;https://git.openjdk.org/jdk/commit/06d8216a4ef6b883119459da7e52b37d16cd2f03&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14719188" author="roboduke" created="Tue, 5 Nov 2024 04:15:33 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/21900&quot;&gt;https://git.openjdk.org/jdk/pull/21900&lt;/a&gt;&lt;br/&gt;
Date: 2024-11-05 12:09:37 +0000</comment>
                            <comment id="14712178" author="mbaesken" created="Fri, 11 Oct 2024 05:35:35 -0700"  >Unfortunately we still see the failures quite often.&lt;br/&gt;
I probably have to add, that we run fastdebug binaries ;  those are not so &amp;quot;fast&amp;quot; on Linux ppc64le where we see most failures.&lt;br/&gt;
With increased timeout values and  idleInterval  settings  we can workaround those issues, so it would be good to adjust those values :&lt;br/&gt;
&lt;br/&gt;
--- a/test/jdk/java/net/httpclient/ManyRequests2.java&lt;br/&gt;
+++ b/test/jdk/java/net/httpclient/ManyRequests2.java&lt;br/&gt;
@@ -33,16 +33,16 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;* @compile ../../../com/sun/net/httpserver/EchoHandler.java&lt;br/&gt;
&amp;nbsp;&amp;nbsp;* @compile ../../../com/sun/net/httpserver/FileServerHandler.java&lt;br/&gt;
&amp;nbsp;&amp;nbsp;* @build ManyRequests ManyRequests2&lt;br/&gt;
- * @run main/othervm/timeout=40 -Dtest.XFixed=true&lt;br/&gt;
+ * @run main/othervm/timeout=400  -Dsun.net.httpserver.idleInterval=400 -Dtest.XFixed=true&lt;br/&gt;
&amp;nbsp;&amp;nbsp;*                              -Djdk.tracePinnedThreads=full&lt;br/&gt;
&amp;nbsp;&amp;nbsp;*                              -Djdk.httpclient.HttpClient.log=channel ManyRequests2&lt;br/&gt;
- * @run main/othervm/timeout=40 -Dtest.XFixed=true -Dtest.insertDelay=true&lt;br/&gt;
+ * @run main/othervm/timeout=400  -Dsun.net.httpserver.idleInterval=400 -Dtest.XFixed=true -Dtest.insertDelay=true&lt;br/&gt;
&amp;nbsp;&amp;nbsp;*                              -Djdk.tracePinnedThreads=full&lt;br/&gt;
&amp;nbsp;&amp;nbsp;*                              -Djdk.httpclient.HttpClient.log=channel ManyRequests2&lt;br/&gt;
- * @run main/othervm/timeout=40 -Dtest.XFixed=true -Dtest.chunkSize=64&lt;br/&gt;
+ * @run main/othervm/timeout=400  -Dsun.net.httpserver.idleInterval=400 -Dtest.XFixed=true -Dtest.chunkSize=64&lt;br/&gt;
&amp;nbsp;&amp;nbsp;*                              -Djdk.tracePinnedThreads=full&lt;br/&gt;
&amp;nbsp;&amp;nbsp;*                              -Djdk.httpclient.HttpClient.log=channel ManyRequests2&lt;br/&gt;
- * @run main/othervm/timeout=400 -Djdk.internal.httpclient.debug=true&lt;br/&gt;
+ * @run main/othervm/timeout=400 -Dsun.net.httpserver.idleInterval=400 -Djdk.internal.httpclient.debug=true&lt;br/&gt;
&amp;nbsp;&amp;nbsp;*                              -Djdk.tracePinnedThreads=full&lt;br/&gt;
&amp;nbsp;&amp;nbsp;*                              -Djdk.httpclient.HttpClient.log=channel&lt;br/&gt;
&amp;nbsp;&amp;nbsp;*                              -Dtest.XFixed=true -Dtest.insertDelay=true&lt;br/&gt;
</comment>
                            <comment id="14641240" author="JIRAUSER19825" created="Wed, 17 Jan 2024 09:26:08 -0800"  >I&amp;#39;m closing this as a duplicate again; the recent failures were not related to a failing assertion, and deserve a separate ticket, if we choose to provide a workaround.&lt;br/&gt;
&lt;br/&gt;
[~mbaesken] let me know if reducing the load on the test machine is an option for you; if not, I&amp;#39;ll open a PR to increase the server idle timeout.</comment>
                            <comment id="14637758" author="JIRAUSER19825" created="Fri, 5 Jan 2024 07:49:37 -0800"  >Matthias provided the logs offline. The failure appears to be caused by extreme load on the machine. This time the failure was in the test case with debug logging enabled. There are multiple 10+ second gaps in the logs, so the machine was definitely busy with something else.&lt;br/&gt;
&lt;br/&gt;
Adding -Dsun.net.httpserver.idleInterval=400 to the problematic case should improve the changes of success.</comment>
                            <comment id="14637428" author="mbaesken" created="Thu, 4 Jan 2024 05:21:41 -0800"  >Hi [~djelinski],  I did a couple of standalone runs of   java/net/httpclient/ManyRequests2.java  (so only one job at a time) and did not see the failure so it could indeed be related to the load and/or the number of parallel jobs.&lt;br/&gt;
</comment>
                            <comment id="14637319" author="JIRAUSER19825" created="Wed, 3 Jan 2024 23:28:00 -0800"  >Hi [~mbaesken], could you post the failing test output? I&amp;#39;d like to confirm if this failure is indeed caused by a slow machine, and not some other failure.&lt;br/&gt;
&lt;br/&gt;
Also, does the test still fail if you reduce the number of tests run in parallel (JTREG_JOBS)?</comment>
                            <comment id="14635995" author="mbaesken" created="Thu, 21 Dec 2023 04:49:58 -0800"  >Unfortunately we still see a couple of failures recently in out CI when running java/net/httpclient/ManyRequests2.java (again especially on some Linux ppc64le machines, jdk22 and now also jdk23).&lt;br/&gt;
In the log of the latest error I see at the end of stdout :&lt;br/&gt;
	 failed: java.util.concurrent.CompletionException: java.io.IOException: HTTP/1.1 header parser received no bytes&lt;br/&gt;
		  Caused by: java.io.IOException: HTTP/1.1 header parser received no bytes&lt;br/&gt;
		  Caused by: java.net.SocketException: Connection reset</comment>
                            <comment id="14622454" author="JIRAUSER19825" created="Tue, 31 Oct 2023 08:56:35 -0700"  >Thanks [~mbaesken] for testing.&lt;br/&gt;
&lt;br/&gt;
I integrated that PR under &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8299058&quot; title=&quot;AssertionError in sun.net.httpserver.ServerImpl when connection is idle&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8299058&quot;&gt;&lt;strike&gt;JDK-8299058&lt;/strike&gt;&lt;/a&gt;; I&amp;#39;m closing this as a duplicate. Please reopen if the test keeps failing.</comment>
                            <comment id="14622025" author="mbaesken" created="Mon, 30 Oct 2023 06:14:48 -0700"  >&amp;gt; [~mbaesken] could you check if &lt;a href=&quot;https://github.com/openjdk/jdk/pull/16366&quot;&gt;https://github.com/openjdk/jdk/pull/16366&lt;/a&gt; helps with the test failures?&lt;br/&gt;
&lt;br/&gt;
Hi [~djelinski], with the PR above, no new test failures occurred so far . </comment>
                            <comment id="14621222" author="mbaesken" created="Thu, 26 Oct 2023 00:33:57 -0700"  >&amp;gt; [~mbaesken] could you check if &lt;a href=&quot;https://github.com/openjdk/jdk/pull/16366&quot;&gt;https://github.com/openjdk/jdk/pull/16366&lt;/a&gt; helps with the test failures?&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ll test it.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; I think it should improve the situation; the ultimate fix would involve increasing idle timeouts for this test.&lt;br/&gt;
&lt;br/&gt;
Yes this is probably needed on those slow machines.  Or otherwise, maybe mark the test intermittent because we know it might fail in some environments ?</comment>
                            <comment id="14621091" author="JIRAUSER19825" created="Wed, 25 Oct 2023 10:31:02 -0700"  >[~mbaesken] could you check if &lt;a href=&quot;https://github.com/openjdk/jdk/pull/16366&quot;&gt;https://github.com/openjdk/jdk/pull/16366&lt;/a&gt; helps with the test failures?&lt;br/&gt;
&lt;br/&gt;
I think it should improve the situation; the ultimate fix would involve increasing idle timeouts for this test.</comment>
                            <comment id="14621011" author="mbaesken" created="Wed, 25 Oct 2023 07:00:25 -0700"  >The last failure (with Daniels patch applied to jdk sources) was from :&lt;br/&gt;
run main/othervm/timeout=40 -Dtest.XFixed=true -Dtest.insertDelay=true -Djdk.tracePinnedThreads=full -Djdk.httpclient.HttpClient.log=channel ManyRequests2</comment>
                            <comment id="14621003" author="dfuchs" created="Wed, 25 Oct 2023 06:41:50 -0700"  >It might be useful to know for which of the `@run` line in the test the failure occurs. </comment>
                            <comment id="14621001" author="mbaesken" created="Wed, 25 Oct 2023 06:31:31 -0700"  >&amp;gt; Other possible explanation is that the connections really time out after 30 seconds. But that would require a very slow / overloaded server, &lt;br/&gt;
&amp;gt; and a very slow HttpConnection.close() operation. Which is also possible, I haven&amp;#39;t checked it yet.&lt;br/&gt;
&lt;br/&gt;
The whole  jtreg  jdk tier2 takes   5h 53m   on the machine showing the problems (other machines e.g. macOS, Linux x86_64 take more  like ~ 2 hours).&lt;br/&gt;
So it is indeed a rather slow environment. Not sure if it is slow enough to cause these issues .</comment>
                            <comment id="14620996" author="JIRAUSER19825" created="Wed, 25 Oct 2023 06:21:59 -0700"  >Normally you&amp;#39;d find that somewhere in syslog, under ntp.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m asking because what seems to happen here is that the IdleTimeoutTask is trying to close connections that the client is trying to reuse. The IdleTimeoutTask is supposed to close connections after 30 seconds of inactivity, and the test usually finishes well under that time - and even when it doesn&amp;#39;t finish, it&amp;#39;s supposed to reuse connections instead of letting them time out. Based on the above, misconfigured NTP servers are the most common explanation.&lt;br/&gt;
&lt;br/&gt;
Other possible explanation is that the connections really time out after 30 seconds. But that would require a very slow / overloaded server, and a very slow HttpConnection.close() operation. Which is also possible, I haven&amp;#39;t checked it yet.</comment>
                            <comment id="14620990" author="mbaesken" created="Wed, 25 Oct 2023 05:58:54 -0700"  >From the log / jtr I could not see backwards running times, but maybe the output is not that detailed to show this?  I ask some people more familiar with the Linux ppc64le servers,  maybe they can give some hints about the system times.&lt;br/&gt;
Btw. where do you see indications of time going backwards ?</comment>
                            <comment id="14620980" author="JIRAUSER19825" created="Wed, 25 Oct 2023 05:28:33 -0700"  >Thanks, [~mbaesken] I think we are on to something.&lt;br/&gt;
&lt;br/&gt;
Is the time going backwards on the affected machines? We are using System.currentTimeMillis() to determine when the connection should be closed, and it looks like the values returned by that function are incorrect. Either that, or the machine is making 30 second pauses between requests.</comment>
                            <comment id="14620883" author="mbaesken" created="Wed, 25 Oct 2023 00:09:15 -0700"  >After adding the patch the test still fails; I am getting the exception below.&lt;br/&gt;
&lt;br/&gt;
java.util.concurrent.CompletionException: java.io.IOException: HTTP/1.1 header parser received no bytes&lt;br/&gt;
	at java.base/java.util.concurrent.CompletableFuture.encodeRelay(CompletableFuture.java:368)&lt;br/&gt;
	at java.base/java.util.concurrent.CompletableFuture.completeRelay(CompletableFuture.java:377)&lt;br/&gt;
	at java.base/java.util.concurrent.CompletableFuture$UniCompose.tryFire(CompletableFuture.java:1152)&lt;br/&gt;
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)&lt;br/&gt;
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2194)&lt;br/&gt;
	at java.net.http/jdk.internal.net.http.Http1Response.onReadError(Http1Response.java:469)&lt;br/&gt;
	at java.net.http/jdk.internal.net.http.Http1Response$HeadersReader.onReadError(Http1Response.java:591)&lt;br/&gt;
	at java.net.http/jdk.internal.net.http.Http1AsyncReceiver.checkForErrors(Http1AsyncReceiver.java:302)&lt;br/&gt;
	at java.net.http/jdk.internal.net.http.Http1AsyncReceiver.flush(Http1AsyncReceiver.java:268)&lt;br/&gt;
	at java.net.http/jdk.internal.net.http.common.SequentialScheduler$LockingRestartableTask.run(SequentialScheduler.java:182)&lt;br/&gt;
	at java.net.http/jdk.internal.net.http.common.SequentialScheduler$CompleteRestartableTask.run(SequentialScheduler.java:149)&lt;br/&gt;
	at java.net.http/jdk.internal.net.http.common.SequentialScheduler$SchedulableTask.run(SequentialScheduler.java:207)&lt;br/&gt;
	at java.base/java.util.concurrent.ThreadPerTaskExecutor$TaskRunner.run(ThreadPerTaskExecutor.java:314)&lt;br/&gt;
	at java.base/java.lang.VirtualThread.run(VirtualThread.java:318)&lt;br/&gt;
Caused by: java.io.IOException: HTTP/1.1 header parser received no bytes&lt;br/&gt;
	at java.net.http/jdk.internal.net.http.common.Utils.wrapWithExtraDetail(Utils.java:440)&lt;br/&gt;
	at java.net.http/jdk.internal.net.http.Http1Response$HeadersReader.onReadError(Http1Response.java:590)&lt;br/&gt;
	... 7 more&lt;br/&gt;
Caused by: java.net.SocketException: Connection reset&lt;br/&gt;
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:403)&lt;br/&gt;
	at java.base/sun.nio.ch.SocketChannelImpl.implRead(SocketChannelImpl.java:435)&lt;br/&gt;
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:493)&lt;br/&gt;
	at java.net.http/jdk.internal.net.http.SocketTube.readAvailable(SocketTube.java:1178)&lt;br/&gt;
	at java.net.http/jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription.read(SocketTube.java:841)&lt;br/&gt;
	at java.net.http/jdk.internal.net.http.SocketTube$SocketFlowTask.run(SocketTube.java:181)&lt;br/&gt;
	at java.net.http/jdk.internal.net.http.common.SequentialScheduler$SchedulableTask.run(SequentialScheduler.java:207)&lt;br/&gt;
	at java.net.http/jdk.internal.net.http.common.SequentialScheduler.runOrSchedule(SequentialScheduler.java:280)&lt;br/&gt;
	at java.net.http/jdk.internal.net.http.common.SequentialScheduler.runOrSchedule(SequentialScheduler.java:233)&lt;br/&gt;
	at java.net.http/jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable(SocketTube.java:782)&lt;br/&gt;
	at java.net.http/jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent.signalEvent(SocketTube.java:965)&lt;br/&gt;
	at java.net.http/jdk.internal.net.http.SocketTube$SocketFlowEvent.handle(SocketTube.java:253)&lt;br/&gt;
	at java.net.http/jdk.internal.net.http.HttpClientImpl$SelectorManager.handleEvent(HttpClientImpl.java:1476)&lt;br/&gt;
	at java.net.http/jdk.internal.net.http.HttpClientImpl$SelectorManager.lambda$run$3(HttpClientImpl.java:1421)&lt;br/&gt;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&lt;br/&gt;
	at java.net.http/jdk.internal.net.http.HttpClientImpl$SelectorManager.run(HttpClientImpl.java:1421)</comment>
                            <comment id="14620505" author="mbaesken" created="Tue, 24 Oct 2023 01:11:10 -0700"  >Hi [~jdelinski] , thanks for providing the patch, I&amp;#39;ll test it for some days in our nightly tests.</comment>
                            <comment id="14620115" author="JIRAUSER19825" created="Mon, 23 Oct 2023 02:45:18 -0700"  >[~mbaesken] could you check if this patch helps?&lt;br/&gt;
```&lt;br/&gt;
--- a/src/jdk.httpserver/share/classes/sun/net/httpserver/ServerImpl.java&lt;br/&gt;
+++ b/src/jdk.httpserver/share/classes/sun/net/httpserver/ServerImpl.java&lt;br/&gt;
@@ -528,8 +528,8 @@ public void run() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// connection. In either case, we mark that the request&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// has now started on this connection.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;requestStarted(conn);&lt;br/&gt;
+                                        handle (chan, conn);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
-                                    handle (chan, conn);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assert false : &amp;quot;Unexpected non-readable key:&amp;quot; + key;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
```&lt;br/&gt;
Looks like accepting connections might race with closing idle connections here.</comment>
                            <comment id="14619245" author="dfuchs" created="Wed, 18 Oct 2023 08:46:58 -0700"  >There maybe a race condition here. We need to investigate.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5144009">JDK-8344296</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5144224">JDK-8344488</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5145460">JDK-8345552</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5145549">JDK-8345630</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5146341">JDK-8346283</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                                                <inwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5089989">JDK-8299058</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i33jh7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17433"><![CDATA[b23]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="193"><![CDATA[java.net]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>