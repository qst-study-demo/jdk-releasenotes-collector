<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 09:08:20 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8334475] UnsafeIntrinsicsTest.java#ZGenerationalDebug assert(!assert_on_failure) failed: Has low-order bits set</title>
                <link>https://bugs.openjdk.org/browse/JDK-8334475</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The test compiler/gcbarriers/UnsafeIntrinsicsTest.java#ZGenerationalDebug fails by assert on Windows aarch64 on fastdebug binaries as follows&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (s\src\hotspot\share\gc/z/zAddress.inline.hpp:300), pid=5296, tid=4352&lt;br/&gt;
#  assert(!assert_on_failure) failed: Has low-order bits set: 0xbdbd323532317063&lt;br/&gt;
#&lt;br/&gt;
# JRE version:  (24.0+2) (fastdebug build )&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM (fastdebug 24+2-b3, mixed mode, tiered, compressed class ptrs, z gc, windows-aarch64)&lt;br/&gt;
# CreateCoredumpOnCrash turned off, no core file dumped&lt;br/&gt;
#&lt;br/&gt;
#&lt;br/&gt;
&lt;br/&gt;
---------------  S U M M A R Y ------------&lt;br/&gt;
&lt;br/&gt;
Command Line: -Dtest.vm.opts= -Dtest.tool.vm.opts= -Dtest.compiler.opts= -Dtest.java.opts=-Djbr.catch.SIGABRT=true -Dtest.jdk=D:\BuildAgent\work\a4596779d36397b2\jbrsdk-24-windows-aarch64-fastdebug-b3 -Dcompile.jdk=D:\BuildAgent\work\a4596779d36397b2\jbrsdk-24-windows-aarch64-fastdebug-b3 -Dtest.timeout.factor=2.0 -Dtest.nativepath=D:\BuildAgent\work\a4596779d36397b2\support\test\hotspot\jtreg\native -Dtest.root=D:\BuildAgent\work\a4596779d36397b2\test\hotspot\jtreg -Dtest.name=compiler/gcbarriers/UnsafeIntrinsicsTest.java#ZGenerationalDebug -Dtest.file=D:\BuildAgent\work\a4596779d36397b2\test\hotspot\jtreg\compiler\gcbarriers\UnsafeIntrinsicsTest.java -Dtest.src=D:\BuildAgent\work\a4596779d36397b2\test\hotspot\jtreg\compiler\gcbarriers -Dtest.src.path=D:\BuildAgent\work\a4596779d36397b2\test\hotspot\jtreg\compiler\gcbarriers;D:\BuildAgent\work\a4596779d36397b2\test\lib -Dtest.classes=D:\BuildAgent\work\a4596779d36397b2\JTwork\classes\0\compiler\gcbarriers\UnsafeIntrinsicsTest_ZGenerationalDebug.d -Dtest.class.path=D:\BuildAgent\work\a4596779d36397b2\JTwork\classes\0\compiler\gcbarriers\UnsafeIntrinsicsTest_ZGenerationalDebug.d;D:\BuildAgent\work\a4596779d36397b2\JTwork\classes\0\test\lib -Dtest.modules=java.base/jdk.internal.misc:+open --add-modules=java.base --add-exports=java.base/jdk.internal.misc=ALL-UNNAMED --add-opens=java.base/jdk.internal.misc=ALL-UNNAMED -Djbr.catch.SIGABRT=true -Djava.library.path=D:\BuildAgent\work\a4596779d36397b2\support\test\hotspot\jtreg\native -XX:+UseZGC -XX:+ZGenerational -XX:+UnlockDiagnosticVMOptions -XX:+ZVerifyOops -XX:ZCollectionInterval=1 -XX:-CreateCoredumpOnCrash -XX:CompileCommand=dontinline,*::mergeImpl* com.sun.javatest.regtest.agent.MainWrapper D:\BuildAgent\work\a4596779d36397b2\JTwork\compiler\gcbarriers\UnsafeIntrinsicsTest_ZGenerationalDebug.d\main.1.jta&lt;br/&gt;
&lt;br/&gt;
Host: jre-w11a-azr1, Ampere(R) Altra(R) Processor, 4 cores, 15G,  Windows 11 , 64 bit Build 22621 (10.0.22621.3672)&lt;br/&gt;
Time: Tue Jun 18 11:30:48 2024 Coordinated Universal Time elapsed time: 0.114944 seconds (0d 0h 0m 0s)&lt;br/&gt;
&lt;br/&gt;
---------------  T H R E A D  ---------------&lt;br/&gt;
&lt;br/&gt;
Current thread (0x000002c97529a200):  JavaThread &amp;quot;main&amp;quot;             [_thread_in_vm, id=4352, stack(0x000000d1e0f00000,0x000000d1e1000000) (1024K)]&lt;br/&gt;
&lt;br/&gt;
Stack: [0x000000d1e0f00000,0x000000d1e1000000]&lt;br/&gt;
Native frames: &amp;lt;unavailable&amp;gt;&lt;br/&gt;
Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)&lt;br/&gt;
j  java.lang.Object.clone()Ljava/lang/Object;+0 java.base&lt;br/&gt;
j  java.util.Arrays.copyOfRange([BII)[B+11 java.base&lt;br/&gt;
j  java.lang.String.&amp;lt;init&amp;gt;(Ljava/lang/AbstractStringBuilder;Ljava/lang/Void;)V+32 java.base&lt;br/&gt;
j  java.lang.StringBuilder.toString()Ljava/lang/String;+16 java.base&lt;br/&gt;
j  sun.nio.cs.StandardCharsets.toLower(Ljava/lang/String;)Ljava/lang/String;+121 java.base&lt;br/&gt;
j  sun.nio.cs.StandardCharsets.lookup(Ljava/lang/String;)Ljava/nio/charset/Charset;+44 java.base&lt;br/&gt;
j  sun.nio.cs.StandardCharsets.charsetForName(Ljava/lang/String;)Ljava/nio/charset/Charset;+6 java.base&lt;br/&gt;
j  java.nio.charset.Charset.lookup2(Ljava/lang/String;)Ljava/nio/charset/Charset;+39 java.base&lt;br/&gt;
j  java.nio.charset.Charset.lookup(Ljava/lang/String;)Ljava/nio/charset/Charset;+40 java.base&lt;br/&gt;
j  java.nio.charset.Charset.isSupported(Ljava/lang/String;)Z+1 java.base&lt;br/&gt;
j  java.lang.System.initPhase1()V+37 java.base&lt;br/&gt;
v  ~StubRoutines::call_stub 0x000002c907530180&lt;br/&gt;
Lock stack of current Java thread (top to bottom):&lt;br/&gt;
LockStack[0]: sun.nio.cs.StandardCharsets &lt;br/&gt;
{0x0000040000017ed0} - klass: &amp;#39;sun/nio/cs/StandardCharsets&amp;#39;&lt;br/&gt;
&amp;nbsp;- ---- fields (total size 5 words):&lt;br/&gt;
&amp;nbsp;- private &amp;#39;classMap&amp;#39; &amp;#39;Ljava/util/Map;&amp;#39; @16  null (0x0000000000000000)&lt;br/&gt;
&amp;nbsp;- private &amp;#39;aliasMap&amp;#39; &amp;#39;Ljava/util/Map;&amp;#39; @24  null (0x0000000000000000)&lt;br/&gt;
&amp;nbsp;- private &amp;#39;cache&amp;#39; &amp;#39;Ljava/util/Map;&amp;#39; @32  null (0x0000000000000000)&lt;br/&gt;
```&lt;br/&gt;
see the attached hs_err.txt&lt;br/&gt;
&lt;br/&gt;
The failure was observed on jdk24, jdk21 &lt;br/&gt;
&lt;br/&gt;
Reproducibility: 100%</description>
                <environment></environment>
        <key id="5132107">JDK-8334475</key>
            <summary>UnsafeIntrinsicsTest.java#ZGenerationalDebug assert(!assert_on_failure) failed: Has low-order bits set</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="swesonga">Saint Wesonga</assignee>
                                    <reporter username="vprovodin">Vitaly Provodin</reporter>
                        <labels>
                            <label>genzgc</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk23u-fix-SQE-ok</label>
                            <label>jdk23u-fix-request</label>
                            <label>jdk23u-fix-yes</label>
                            <label>oraclejdk-na</label>
                    </labels>
                <created>Tue, 18 Jun 2024 05:11:31 -0700</created>
                <updated>Thu, 28 Nov 2024 13:10:15 -0800</updated>
                            <resolved>Tue, 13 Aug 2024 01:12:39 -0700</resolved>
                                    <version>21</version>
                    <version>23</version>
                    <version>24</version>
                                    <fixVersion>24</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>10</watches>
                                                                                                                <comments>
                            <comment id="14725792" author="roboduke" created="Sun, 24 Nov 2024 17:00:37 -0800"  >[jdk21u-fix-request] Approval Request from Saint Wesonga&lt;br/&gt;
for jdk21u backport with all tier1 tests passing and the UnsafeIntrinsicsTest.java#ZGenerationalDebug test now passing in the Windows AArch64 fastdebug build.</comment>
                            <comment id="14725308" author="roboduke" created="Fri, 22 Nov 2024 08:34:33 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1176&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1176&lt;/a&gt;&lt;br/&gt;
Date: 2024-11-22 16:28:02 +0000</comment>
                            <comment id="14714953" author="roboduke" created="Sat, 19 Oct 2024 10:54:39 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk23u/pull/198&quot;&gt;https://git.openjdk.org/jdk23u/pull/198&lt;/a&gt;&lt;br/&gt;
Date: 2024-10-19 17:50:53 +0000</comment>
                            <comment id="14714951" author="JIRAUSER21019" created="Sat, 19 Oct 2024 10:42:47 -0700"  >Requesting backport of this fix to jdk23u. The UnsafeIntrinsicsTest.java#ZGenerationalDebug test now passes on Windows AArch64 with this change.</comment>
                            <comment id="14710970" author="roboduke" created="Mon, 7 Oct 2024 10:11:32 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1032&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1032&lt;/a&gt;&lt;br/&gt;
Date: 2024-10-07 17:02:15 +0000</comment>
                            <comment id="14710969" author="JIRAUSER21019" created="Mon, 7 Oct 2024 10:04:31 -0700"  >Requesting backport of this fix to jdk21u. UnsafeIntrinsicsTest.java#ZGenerationalDebug test now passes on Windows AArch64 with this change. All tier1 tests also passed.</comment>
                            <comment id="14697834" author="dukebot" created="Tue, 13 Aug 2024 01:12:38 -0700"  >Changeset: 5bf27098&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Saint Wesonga &amp;lt;&lt;a href=&apos;mailto:saint.wesonga@microsoft.com&apos;&gt;saint.wesonga@microsoft.com&lt;/a&gt;&amp;gt;&lt;br/&gt;
Committer: Axel Boldt-Christmas &amp;lt;&lt;a href=&apos;mailto:aboldtch@openjdk.org&apos;&gt;aboldtch@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-08-13 08:10:29 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/5bf27098e22172ed5d3ec0c43fe0553f8322c4b1&quot;&gt;https://git.openjdk.org/jdk/commit/5bf27098e22172ed5d3ec0c43fe0553f8322c4b1&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14696379" author="mikael" created="Tue, 6 Aug 2024 11:37:30 -0700"  >Thank you. I updated the issue to reflect that.</comment>
                            <comment id="14696378" author="JIRAUSER21019" created="Tue, 6 Aug 2024 11:35:44 -0700"  >This issue only affects Windows AArch64 fastdebug. The fix does not have to be in 23 and it is okay to lower the priority of the issue.</comment>
                            <comment id="14696375" author="mikael" created="Tue, 6 Aug 2024 11:26:12 -0700"  >Reviewing remaining open issues in preparation for entering the RC phase later this week:&lt;br/&gt;
&lt;br/&gt;
Assuming this issue only happens in fastdebug (on windows-aarch64/zgc) the priority is more realistically something like:&lt;br/&gt;
&lt;br/&gt;
ILW=HLL -&amp;gt; P4&lt;br/&gt;
&lt;br/&gt;
That, in turn, means it is not a candidate for jdk23 at this point. Let me know your thoughts, otherwise I will be updating the issue accordingly before Thursday.</comment>
                            <comment id="14693773" author="roboduke" created="Tue, 30 Jul 2024 08:46:17 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/20390&quot;&gt;https://git.openjdk.org/jdk/pull/20390&lt;/a&gt;&lt;br/&gt;
Date: 2024-07-30 15:37:38 +0000</comment>
                            <comment id="14693037" author="JIRAUSER21019" created="Fri, 26 Jul 2024 09:05:42 -0700"  >This is a Windows AArch64 port specific bug (and not a ZGC implementation bug).&lt;br/&gt;
It can be reproduced by running &amp;quot;java -XX:+UseZGC -XX:+ZGenerational -XX:+ZVerifyOops -version&amp;quot;&lt;br/&gt;
It only happens in fastdebug because -DCHECK_UNHANDLED_OOPS is only used in fastdebug: see &lt;a href=&quot;https://github.com/openjdk/jdk/blob/b3bf31a0a08da679ec2fd21613243fb17b1135a9/make/hotspot/lib/JvmFlags.gmk#L77-L82&quot;&gt;https://github.com/openjdk/jdk/blob/b3bf31a0a08da679ec2fd21613243fb17b1135a9/make/hotspot/lib/JvmFlags.gmk#L77-L82&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
This can be reproduced in slowdebug by configuring slowdebug using --with-extra-cflags=-DCHECK_UNHANDLED_OOPS&lt;br/&gt;
The bug is in &lt;a href=&quot;https://github.com/openjdk/jdk/blob/b3bf31a0a08da679ec2fd21613243fb17b1135a9/src/hotspot/os_cpu/windows_aarch64/copy_windows_aarch64.hpp#L106&quot;&gt;https://github.com/openjdk/jdk/blob/b3bf31a0a08da679ec2fd21613243fb17b1135a9/src/hotspot/os_cpu/windows_aarch64/copy_windows_aarch64.hpp#L106&lt;/a&gt; - it implements pd_conjoint_jlongs_atomic by calling pd_conjoint_oops_atomic.&lt;br/&gt;
When CHECK_UNHANDLED_OOPS is defined, the copying of each value in pd_conjoint_oops_atomic calls oop::operator= instead of just copying the jlong.&lt;br/&gt;
oop::operator= then treats the value to be copied as a pointer, causing the assertion failure in this bug.&lt;br/&gt;
The fix is to directly copy the jlongs as is done on other platforms. I am testing the fix then will open a PR.</comment>
                            <comment id="14692796" author="mikael" created="Thu, 25 Jul 2024 11:00:01 -0700"  >Please note that we are now only two weeks away from entering the RC phase.</comment>
                            <comment id="14690280" author="JIRAUSER21019" created="Tue, 16 Jul 2024 14:12:12 -0700"  >@mikael @karianna - I have reproduced this failure but have not yet tracked down the root cause.</comment>
                            <comment id="14690276" author="mikael" created="Tue, 16 Jul 2024 14:02:59 -0700"  >Any update on this [~swesonga][~karianna]?</comment>
                            <comment id="14684047" author="stefank" created="Mon, 24 Jun 2024 02:25:08 -0700"  >Thanks!</comment>
                            <comment id="14683868" author="karianna" created="Sat, 22 Jun 2024 18:25:36 -0700"  >Yes, we&amp;#39;ll pick this one up, I&amp;#39;ll assign to me in the first instance.</comment>
                            <comment id="14682744" author="stefank" created="Tue, 18 Jun 2024 15:25:14 -0700"  >[~vprovodin] Thanks for the answers!&lt;br/&gt;
&lt;br/&gt;
[~karianna] Do you know of anyone in Microsoft that could take a look at this issue.</comment>
                            <comment id="14682739" author="vprovodin" created="Tue, 18 Jun 2024 14:23:26 -0700"  >Hi [~stefank]&lt;br/&gt;
&lt;br/&gt;
&amp;gt; Does this happen if you run with -Xint only?&lt;br/&gt;
yes. See the log hs_err_pid2684_Xint&lt;br/&gt;
&lt;br/&gt;
&amp;gt; Is this happening with unmodified code from github.com/openjdk/jdk?&lt;br/&gt;
Binaries were built on the revision &lt;a href=&quot;https://github.com/openjdk/jdk/commit/614b99a8f8360dc0a6a018f06fb336c6883f0f4a&quot;&gt;https://github.com/openjdk/jdk/commit/614b99a8f8360dc0a6a018f06fb336c6883f0f4a&lt;/a&gt; - src, make are identical to github.com/openjdk/jdk&lt;br/&gt;
test contains some additional folders but test/hotspot is identical to github.com/openjdk/jdk&lt;br/&gt;
&lt;br/&gt;
&amp;gt; Does this only happen on Windows AArch64?&lt;br/&gt;
Yes. I could not reproduce this issue on on Windows x86-64</comment>
                            <comment id="14682689" author="stefank" created="Tue, 18 Jun 2024 10:20:02 -0700"  >One more question. Does this only happen on Windows AArch64? It&amp;#39;s not a platform that we focus on. Maybe someone from Microsoft can help looking at this?</comment>
                            <comment id="14682621" author="thartmann" created="Tue, 18 Jun 2024 06:36:36 -0700"  >No JIT compilations have taken place yet either:&lt;br/&gt;
&lt;br/&gt;
CodeCache: size=245760Kb, used=894Kb, max_used=894Kb, free=244865Kb&lt;br/&gt;
&amp;nbsp;total_blobs=532, nmethods=0, adapters=507, full_count=0&lt;br/&gt;
Compilation: enabled, stopped_count=0, restarted_count=0&lt;br/&gt;
&lt;br/&gt;
Compilation events (0 events):&lt;br/&gt;
No events&lt;br/&gt;
&lt;br/&gt;
Moving this back to hotspot/gc for now.</comment>
                            <comment id="14682599" author="stefank" created="Tue, 18 Jun 2024 05:44:25 -0700"  >Hi [~vprovodin],&lt;br/&gt;
&lt;br/&gt;
Thanks for reporting. It&amp;#39;s interesting that it crashes very early, no GC has even been started at this point. Some questions:&lt;br/&gt;
&lt;br/&gt;
* Does this happen if you run with -Xint only?&lt;br/&gt;
&lt;br/&gt;
* Is this happening with unmodified code from github.com/openjdk/jdk?</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5145077">JDK-8345228</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5143159">JDK-8343644</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="109793" name="hs_err_pid2684_Xint.txt" size="42515" author="vprovodin" created="Tue, 18 Jun 2024 14:23:24 -0700"/>
                            <attachment id="109788" name="hs_err_pid5296.txt" size="43129" author="vprovodin" created="Tue, 18 Jun 2024 05:14:17 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19300"><![CDATA[aarch64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17005"><![CDATA[windows]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i36sa3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17311"><![CDATA[b11]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="209"><![CDATA[gc]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>