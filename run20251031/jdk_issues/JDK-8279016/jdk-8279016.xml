<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Thu Sep 25 23:47:42 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8279016] JFR Leak Profiler is broken with Shenandoah</title>
                <link>https://bugs.openjdk.org/browse/JDK-8279016</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The JFR leak profiler associates an Edge* with an object by putting the Edge* into an array, and storing the index to the Edge* into the object&amp;#39;s mark-word, and setting the lowest two bits of that mark-word.&lt;br/&gt;
However, in Shenandoah, a similar scheme is used to indicate forwarding objects: the lowest two bits in object&amp;#39;s mark are set, and the reference to the forwarding object in the upper bits of the header. We may go through the load-reference-barrier of an object that has an associated Edge* in BFSClosure::do_oop(), which would decode the assumed forwarding pointer, get the index instead of the reference, and eventually crash, when trying to dereference anything from there.&lt;br/&gt;
&lt;br/&gt;
Notice that &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8275415&quot; title=&quot;Prepare Leak Profiler for Lilliput&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8275415&quot;&gt;&lt;strike&gt;JDK-8275415&lt;/strike&gt;&lt;/a&gt; changed the association scheme from full Edge* in the mark-word to the index, but the general problem was pre-existing.&lt;br/&gt;
&lt;br/&gt;
As an aside, in Shenandoah, we distinguish forwarding pointers from JVMTI heap-walk &amp;#39;marked&amp;#39; objects by checking for the upper mark-bits to be NULL. JFR breaks this scheme (which is rather brittle in itself) by putting the Edge* association in the mark-word too.&lt;br/&gt;
&lt;br/&gt;
We may want to consider something similar to: &lt;a href=&quot;https://github.com/openjdk/lilliput/pull/18&quot;&gt;https://github.com/openjdk/lilliput/pull/18&lt;/a&gt;</description>
                <environment></environment>
        <key id="5065062">JDK-8279016</key>
            <summary>JFR Leak Profiler is broken with Shenandoah</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="shade">Aleksey Shipilev</assignee>
                                    <reporter username="rkennke">Roman Kennke</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>gc-shenandoah</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>redhat-interest</label>
                    </labels>
                <created>Mon, 20 Dec 2021 08:58:39 -0800</created>
                <updated>Mon, 3 Mar 2025 02:09:47 -0800</updated>
                            <resolved>Wed, 6 Nov 2024 08:41:40 -0800</resolved>
                                    <version>11</version>
                    <version>17</version>
                    <version>21</version>
                    <version>24</version>
                                    <fixVersion>24</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>8</watches>
                                                                                                                <comments>
                            <comment id="14756961" author="roboduke" created="Thu, 27 Feb 2025 09:05:30 -0800"  >[jdk21u-fix-request] Approval Request from Aleksey Shipil&amp;#xEB;v&lt;br/&gt;
Works around Shenandoah+JFR bug by disabling Leak Profiler instead of misbehaving. Applies cleanly. Testing passes. Was in mainline for a couple of month with only minor test bugtail, see &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8343754&quot; title=&quot;Problemlist jdk/jfr/event/oldobject/TestShenandoah.java after JDK-8279016&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8343754&quot;&gt;&lt;strike&gt;JDK-8343754&lt;/strike&gt;&lt;/a&gt;. Risk is low-medium: affects JFR code, but in a clean manner.</comment>
                            <comment id="14756938" author="roboduke" created="Thu, 27 Feb 2025 08:08:59 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1439&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1439&lt;/a&gt;&lt;br/&gt;
Date: 2025-02-27 16:00:16 +0000</comment>
                            <comment id="14719961" author="shade" created="Thu, 7 Nov 2024 02:17:03 -0800"  >Right. I overlooked the case when we just run with Shenandoah without explicitly specifying -XX:+UseShenandoahGC. I&amp;#39;ll fix it: &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8343754&quot; title=&quot;Problemlist jdk/jfr/event/oldobject/TestShenandoah.java after JDK-8279016&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8343754&quot;&gt;&lt;strike&gt;JDK-8343754&lt;/strike&gt;&lt;/a&gt;</comment>
                            <comment id="14719936" author="mbaesken" created="Thu, 7 Nov 2024 00:59:13 -0800"  >We get now this on a lot (all?) platforms in test jdk/jfr/event/oldobject/TestShenandoah.java and the test times out/fails :&lt;br/&gt;
&lt;br/&gt;
Could not find leaking object, retrying...&lt;br/&gt;
[]&lt;br/&gt;
Could not find leaking object, retrying...&lt;br/&gt;
[]&lt;br/&gt;
Could not find leaking object, retrying...&lt;br/&gt;
[]&lt;br/&gt;
Could not find leaking object, retrying...&lt;br/&gt;
[]&lt;br/&gt;
Could not find leaking object, retrying...&lt;br/&gt;
[]&lt;br/&gt;
Could not find leaking object, retrying...</comment>
                            <comment id="14719804" author="dukebot" created="Wed, 6 Nov 2024 08:41:39 -0800"  >Changeset: 0be7118b&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Aleksey Shipilev &amp;lt;&lt;a href=&apos;mailto:shade@openjdk.org&apos;&gt;shade@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-11-06 16:38:55 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/0be7118b2f761b416ebf8cbb11473d51e80be409&quot;&gt;https://git.openjdk.org/jdk/commit/0be7118b2f761b416ebf8cbb11473d51e80be409&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14692744" author="roboduke" created="Thu, 25 Jul 2024 07:26:32 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/20328&quot;&gt;https://git.openjdk.org/jdk/pull/20328&lt;/a&gt;&lt;br/&gt;
Date: 2024-07-25 11:26:45 +0000</comment>
                            <comment id="14692597" author="shade" created="Thu, 25 Jul 2024 04:07:15 -0700"  >&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8337194&quot; title=&quot;Shenandoah: Multiple forwardings detected in JFR Leak Profiler tests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8337194&quot;&gt;&lt;strike&gt;JDK-8337194&lt;/strike&gt;&lt;/a&gt; shows it is still a practical problem, when JFR op hits in the middle of concurrent GC that has non-trivial mark words. I am reopening and fixing it.</comment>
                            <comment id="14597253" author="rkennke" created="Wed, 19 Jul 2023 05:26:16 -0700"  >This is not actually an issue: the mark-word of affected object is saved before and restored after the leak-profiler safepoint. That should be safe.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5151850">JDK-8351030</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                                                <inwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5135154">JDK-8337194</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5143292">JDK-8343754</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5142355">JDK-8342951</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5060556">JDK-8275415</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2vgi3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17433"><![CDATA[b23]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="374"><![CDATA[jfr]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>