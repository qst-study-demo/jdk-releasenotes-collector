<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 10:49:39 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8347173] java/net/DatagramSocket/InterruptibleDatagramSocket.java fails with virtual thread factory</title>
                <link>https://bugs.openjdk.org/browse/JDK-8347173</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Test&lt;br/&gt;
java/net/DatagramSocket/InterruptibleDatagramSocket.java fails with virtual thread factory&lt;br/&gt;
&lt;br/&gt;
The log&lt;br/&gt;
Testing interrupt of DatagramSocket receive on endpoint /[0:0:0:0:0:0:0:0]:38751&lt;br/&gt;
----------System.err:(14/866)----------&lt;br/&gt;
java.net.SocketException: Closed by interrupt&lt;br/&gt;
	at java.base/sun.nio.ch.DatagramSocketAdaptor.receive(DatagramSocketAdaptor.java:199)&lt;br/&gt;
	at java.base/java.net.DatagramSocket.receive(DatagramSocket.java:638)&lt;br/&gt;
	at InterruptibleDatagramSocket.test0(InterruptibleDatagramSocket.java:63)&lt;br/&gt;
	at InterruptibleDatagramSocket.test(InterruptibleDatagramSocket.java:76)&lt;br/&gt;
	at InterruptibleDatagramSocket.main(InterruptibleDatagramSocket.java:103)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run(MainActionHelper.java:333)&lt;br/&gt;
	at java.base/java.lang.VirtualThread.run(VirtualThread.java:466)&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test threw exception: java.net.SocketException&lt;br/&gt;
JavaTest Message: shutting down test&lt;br/&gt;
&lt;br/&gt;
result: Failed. Execution failed: `main&amp;#39; threw exception: java.net.SocketException: Closed by interrupt&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
test result: Failed. Execution failed: `main&amp;#39; threw exception: java.net.SocketException: Closed by interrupt</description>
                <environment></environment>
        <key id="5147421">JDK-8347173</key>
            <summary>java/net/DatagramSocket/InterruptibleDatagramSocket.java fails with virtual thread factory</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jpai">Jaikiran Pai</assignee>
                                    <reporter username="lmesnik">Leonid Mesnik</reporter>
                        <labels>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk24u-fix-SQE-ok</label>
                            <label>jdk24u-fix-request</label>
                            <label>jdk24u-fix-yes</label>
                            <label>noreg-self</label>
                    </labels>
                <created>Tue, 7 Jan 2025 22:57:18 -0800</created>
                <updated>Mon, 28 Apr 2025 07:31:56 -0700</updated>
                            <resolved>Tue, 14 Jan 2025 17:15:16 -0800</resolved>
                                    <version>25</version>
                                    <fixVersion>25</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14773417" author="roboduke" created="Thu, 24 Apr 2025 08:19:19 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1705&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1705&lt;/a&gt;&lt;br/&gt;
Date: 2025-04-24 15:09:45 +0000</comment>
                            <comment id="14773411" author="goetz" created="Thu, 24 Apr 2025 08:04:36 -0700"  >Fix request [21u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 21.0.8-oracle.&lt;br/&gt;
No risk, only a test change&lt;br/&gt;
Clean backport.&lt;br/&gt;
Test passes. SAP nighlty testing passed.</comment>
                            <comment id="14765000" author="roboduke" created="Fri, 28 Mar 2025 03:16:44 -0700"  >[jdk24u-fix-request] Approval Request from Govindan Srinivassan&lt;br/&gt;
&amp;quot;Test issue java/net/DatagramSocket/InterruptibleDatagramSocket.java fails with virtual thread factory&amp;quot;</comment>
                            <comment id="14764740" author="roboduke" created="Thu, 27 Mar 2025 09:18:06 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk24u/pull/157&quot;&gt;https://git.openjdk.org/jdk24u/pull/157&lt;/a&gt;&lt;br/&gt;
Date: 2025-03-25 07:37:45 +0000</comment>
                            <comment id="14738778" author="dukebot" created="Tue, 14 Jan 2025 17:15:15 -0800"  >Changeset: 35be4a43&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Jaikiran Pai &amp;lt;&lt;a href=&apos;mailto:jpai@openjdk.org&apos;&gt;jpai@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2025-01-15 01:10:32 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/35be4a432b55070f53a6f1aa74994ffb70f07947&quot;&gt;https://git.openjdk.org/jdk/commit/35be4a432b55070f53a6f1aa74994ffb70f07947&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14737851" author="roboduke" created="Mon, 13 Jan 2025 06:32:10 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/23074&quot;&gt;https://git.openjdk.org/jdk/pull/23074&lt;/a&gt;&lt;br/&gt;
Date: 2025-01-13 14:22:40 +0000</comment>
                            <comment id="14737845" author="jpai" created="Mon, 13 Jan 2025 06:15:39 -0800"  >&amp;gt; I don&amp;#39;t have a strong opinion on InterruptibleDatagramSocket. It looks like the main method could be modified to change test(s, false) to call test(s, true) when the current thread is a virtual thread. &lt;br/&gt;
&lt;br/&gt;
That doesn&amp;#39;t appear to be enough because of what seems to be an unspecified expectation in the test. The test expects the SocketException that gets thrown in such cases to have a exception cause of ClosedByInterruptException:&lt;br/&gt;
&lt;br/&gt;
try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;test0(s); // DatagramSocket.receive()&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw new RuntimeException(&amp;quot;Receive shouldn&amp;#39;t have succeeded&amp;quot;);&lt;br/&gt;
}&lt;br/&gt;
...&lt;br/&gt;
catch (SocketException e) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if ((e.getCause() instanceof ClosedByInterruptException) &amp;amp;&amp;amp; interruptible) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;Got expected ClosedByInterruptException: &amp;quot; + e);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw e;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
...&lt;br/&gt;
&lt;br/&gt;
I don&amp;#39;t see that specified in the DatagramSocket.receive(), so it might be that we will have to re-evaluate that test code separately.&lt;br/&gt;
&lt;br/&gt;
For now, I&amp;#39;ll raise a PR to skip execution of this test in virtual thread mode. Like you note, given that test/jdk/java/net/vthread/BlockingSocketOps.java already tests this semantic, skipping this test for virtual threads should be OK.&lt;br/&gt;
&lt;br/&gt;
On a general note, maybe we should consider introducing a JDK specific property like &amp;quot;jtreg.main.launch.thread&amp;quot; which then allows us to consistently mark tests like these with:&lt;br/&gt;
&lt;br/&gt;
@requires jtreg.main.launch.thread != &amp;quot;VirtualThread&amp;quot;&lt;br/&gt;
&lt;br/&gt;
instead of having problem listing files to track such tests.</comment>
                            <comment id="14736822" author="lmesnik" created="Wed, 8 Jan 2025 14:21:22 -0800"  >If it doesn&amp;#39;t make sense to fix the test, then let just left this bug and assign it me. I&amp;#39;m going to exclude it test went adding more testing with virtual threads. Probably, add requires support for this.</comment>
                            <comment id="14736557" author="alanb" created="Wed, 8 Jan 2025 00:06:58 -0800"  >test/jdk/java/net/vthread/BlockingSocketOps.java has testDatagramSocketReceiveInterrupt to test a virtual thread calling DatagramSocket.receive. &lt;br/&gt;
&lt;br/&gt;
I don&amp;#39;t have a strong opinion on InterruptibleDatagramSocket. It looks like the main method could be modified to change test(s, false) to call test(s, true) when the current thread is a virtual thread. This would duplicate the testing in the other test, but okay.</comment>
                            <comment id="14736495" author="jpai" created="Tue, 7 Jan 2025 23:38:31 -0800"  >Hello Alan [~alanb], do you recommend that we update the test to accomodate and verify the specification of DatagramSocket.receive() when run through a virtual thread? Or would you prefer that we problem list this for virtual threads?</comment>
                            <comment id="14736479" author="alanb" created="Tue, 7 Jan 2025 23:34:32 -0800"  >This is the same issue as &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8347171&quot; title=&quot;(dc) java/nio/channels/DatagramChannel/InterruptibleOrNot.java fails with virtual thread factory&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8347171&quot;&gt;&lt;strike&gt;JDK-8347171&lt;/strike&gt;&lt;/a&gt;. DatagramSocket.receive is specified to be interruptible when a virtual thread blocks on this method so this test is not appropriate for JTREG_TEST_THREAD_FACTORY=Virtual.  In the loom repo, this test is excluded via ProblemList-Virtual.txt.</comment>
                            <comment id="14736442" author="lmesnik" created="Tue, 7 Jan 2025 22:57:39 -0800"  >Test fails if executed with virtual thread factory only. The main() is executed by virtual thread instead of kernel thread.&lt;br/&gt;
&lt;br/&gt;
The bug is failed for further investigation. If it is expected behavior, the bug could be just closed.&lt;br/&gt;
&lt;br/&gt;
Use&lt;br/&gt;
make run-test JTREG_TEST_THREAD_FACTORY=Virtual TEST=java/net/DatagramSocket/InterruptibleDatagramSocket.java&lt;br/&gt;
to run locally.&lt;br/&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5152562">JDK-8351687</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5152563">JDK-8351688</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5157181">JDK-8355730</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i39ahn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17334"><![CDATA[b06]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="193"><![CDATA[java.net]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>