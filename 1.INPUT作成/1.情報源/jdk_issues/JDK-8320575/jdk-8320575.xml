<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 08:57:02 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8320575] generic type information lost on mandated parameters of record&apos;s compact constructors</title>
                <link>https://bugs.openjdk.org/browse/JDK-8320575</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>ADDITIONAL SYSTEM INFORMATION :&lt;br/&gt;
Tested on MacBook Pro M2, Ventura 13.4&lt;br/&gt;
Java 21.0.1&lt;br/&gt;
&lt;br/&gt;
A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
When, via reflection, trying to determine the generic type of an argument of the default record constructor,&lt;br/&gt;
the generic type cannot be determined in Java 21.&lt;br/&gt;
This did work in pre 21 versions. Tested in 17.0.9.&lt;br/&gt;
&lt;br/&gt;
REGRESSION : Last worked in version 17.0.9&lt;br/&gt;
&lt;br/&gt;
STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :&lt;br/&gt;
Run provided test case.&lt;br/&gt;
&lt;br/&gt;
EXPECTED VERSUS ACTUAL BEHAVIOR :&lt;br/&gt;
EXPECTED -&lt;br/&gt;
Expect generic type to be available in the default record constructor.&lt;br/&gt;
ACTUAL -&lt;br/&gt;
No generic type information available.&lt;br/&gt;
&lt;br/&gt;
---------- BEGIN SOURCE ----------&lt;br/&gt;
import java.util.Optional;&lt;br/&gt;
&lt;br/&gt;
public class Reproducer {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;interface NoConstructorDeclarations {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;record Person(Optional&amp;lt;String&amp;gt; name, Optional&amp;lt;Integer&amp;gt; age) {}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;interface AnnotatedCompactConstructor {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;record Person(Optional&amp;lt;String&amp;gt; name, Optional&amp;lt;Integer&amp;gt; age) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Deprecated public Person {}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;interface AnotatedExplicitCanonicalConstructor  {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;record Person(Optional&amp;lt;String&amp;gt; name, Optional&amp;lt;Integer&amp;gt; age) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Deprecated&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public Person(Optional&amp;lt;String&amp;gt; name, Optional&amp;lt;Integer&amp;gt; age) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.name = name;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.age = age;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main(String args[]) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for(var approach: Reproducer.class.getDeclaredClasses()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Class&amp;lt;?&amp;gt; recordClass = approach.getClasses()[0];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(approach.getSimpleName());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var constructor = recordClass.getConstructors()[0];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(constructor.isAnnotationPresent(Deprecated.class));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for(var p: constructor.getParameters()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(p);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
---------- END SOURCE ----------&lt;br/&gt;
&lt;br/&gt;
CUSTOMER SUBMITTED WORKAROUND :&lt;br/&gt;
Explicitly add a canonical constructor with all record properties.&lt;br/&gt;
&lt;br/&gt;
FREQUENCY : always&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5115047">JDK-8320575</key>
            <summary>generic type information lost on mandated parameters of record&apos;s compact constructors</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="vromero">Vicente Arturo Romero Zaldivar</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>dcsad</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>regression</label>
                            <label>reproducer-yes</label>
                            <label>webbug</label>
                    </labels>
                <created>Mon, 20 Nov 2023 00:52:13 -0800</created>
                <updated>Sat, 5 Apr 2025 19:35:11 -0700</updated>
                            <resolved>Fri, 24 May 2024 13:44:41 -0700</resolved>
                                    <version>21</version>
                    <version>22</version>
                    <version>23</version>
                                    <fixVersion>23</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>9</watches>
                                                                                                                <comments>
                            <comment id="14710790" author="roboduke" created="Mon, 7 Oct 2024 01:02:03 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1026&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1026&lt;/a&gt;&lt;br/&gt;
Date: 2024-10-07 07:56:28 +0000</comment>
                            <comment id="14710785" author="goetz" created="Mon, 7 Oct 2024 00:57:42 -0700"  >Fix request [21u]&lt;br/&gt;
&lt;br/&gt;
I backport this for parity with 21.0.6-oracle. CSR available.&lt;br/&gt;
Medium risk, it changes behaviour but also fixes an issue.&lt;br/&gt;
Clean backport, but I removed parts according to CSR&lt;br/&gt;
Test passes and fails without the fix. SAP nightly testing passed.</comment>
                            <comment id="14676118" author="dukebot" created="Fri, 24 May 2024 13:44:40 -0700"  >Changeset: 7bf1989f&lt;br/&gt;
Author:    Vicente Romero &amp;lt;&lt;a href=&apos;mailto:vromero@openjdk.org&apos;&gt;vromero@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-05-24 20:43:23 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/7bf1989f59695c3d08b4bd116fb4c022cf9661f4&quot;&gt;https://git.openjdk.org/jdk/commit/7bf1989f59695c3d08b4bd116fb4c022cf9661f4&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14633421" author="roboduke" created="Mon, 11 Dec 2023 15:39:19 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/17070&quot;&gt;https://git.openjdk.org/jdk/pull/17070&lt;/a&gt;&lt;br/&gt;
Date: 2023-12-11 23:33:16 +0000</comment>
                            <comment id="14632541" author="vromero" created="Thu, 7 Dec 2023 21:09:40 -0800"  >caused by: &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8292275&quot; title=&quot;javac does not emit SYNTHETIC and MANDATED flags for parameters by default&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8292275&quot;&gt;&lt;strike&gt;JDK-8292275&lt;/strike&gt;&lt;/a&gt;, introduced in: jdk-21+21. But not that fix for &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8292275&quot; title=&quot;javac does not emit SYNTHETIC and MANDATED flags for parameters by default&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8292275&quot;&gt;&lt;strike&gt;JDK-8292275&lt;/strike&gt;&lt;/a&gt; introduced the error. I think that it just uncovered a (hidden | known) issue in reflection:&lt;br/&gt;
&lt;br/&gt;
this patch fixes the problem:&lt;br/&gt;
```&lt;br/&gt;
diff --git a/src/java.base/share/classes/java/lang/reflect/Executable.java b/src/java.base/share/classes/java/lang/reflect/Executable.java&lt;br/&gt;
index 420be5029b0..092dde8177d 100644&lt;br/&gt;
--- a/src/java.base/share/classes/java/lang/reflect/Executable.java&lt;br/&gt;
+++ b/src/java.base/share/classes/java/lang/reflect/Executable.java&lt;br/&gt;
@@ -340,8 +340,8 @@ Type[] getAllGenericParameterTypes() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int fromidx = 0;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (int i = 0; i &amp;lt; out.length; i++) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;final Parameter param = params[i];&lt;br/&gt;
-                    if (param.isSynthetic() || param.isImplicit()) {&lt;br/&gt;
-                        // If we hit a synthetic or mandated parameter,&lt;br/&gt;
+                    if (param.isSynthetic()) {&lt;br/&gt;
+                        // If we hit a synthetic parameter,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// use the non generic parameter info.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;out[i] = nonGenericParamTypes[i];&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else {&lt;br/&gt;
```&lt;br/&gt;
but the specification of java.lang.reflect.Executable::getGenericParameterTypes states:&lt;br/&gt;
```&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* If&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* generic information is present, only parameters explicitly&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* present in the source will be returned; if generic information&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* is not present, implicit and synthetic parameters may be&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* returned as well.&lt;br/&gt;
```&lt;br/&gt;
so now that the mandated flag is added to formal parameters of a compact constructor of a record class, theirs generic information is just ignored. Although the reporter found the issue for records, this is a general issue with mandated parameters</comment>
                            <comment id="14628322" author="adev" created="Tue, 21 Nov 2023 23:06:57 -0800"  >JDK 17:&lt;br/&gt;
========&lt;br/&gt;
PS C:\test&amp;gt; java Reproducer&lt;br/&gt;
AnotatedExplicitCanonicalConstructor&lt;br/&gt;
true&lt;br/&gt;
java.util.Optional&amp;lt;java.lang.String&amp;gt; name&lt;br/&gt;
java.util.Optional&amp;lt;java.lang.Integer&amp;gt; age&lt;br/&gt;
&lt;br/&gt;
AnnotatedCompactConstructor&lt;br/&gt;
true&lt;br/&gt;
java.util.Optional&amp;lt;java.lang.String&amp;gt; name&lt;br/&gt;
java.util.Optional&amp;lt;java.lang.Integer&amp;gt; age&lt;br/&gt;
&lt;br/&gt;
NoConstructorDeclarations&lt;br/&gt;
false&lt;br/&gt;
java.util.Optional&amp;lt;java.lang.String&amp;gt; name&lt;br/&gt;
java.util.Optional&amp;lt;java.lang.Integer&amp;gt; age&lt;br/&gt;
&lt;br/&gt;
JDK 21.0.1:&lt;br/&gt;
==========&lt;br/&gt;
PS C:\test&amp;gt; C:\jdk\jdk-21.0.1\bin\java Reproducer&lt;br/&gt;
AnotatedExplicitCanonicalConstructor&lt;br/&gt;
true&lt;br/&gt;
java.util.Optional&amp;lt;java.lang.String&amp;gt; name&lt;br/&gt;
java.util.Optional&amp;lt;java.lang.Integer&amp;gt; age&lt;br/&gt;
&lt;br/&gt;
AnnotatedCompactConstructor&lt;br/&gt;
true&lt;br/&gt;
&amp;nbsp;java.util.Optional name&lt;br/&gt;
&amp;nbsp;java.util.Optional age&lt;br/&gt;
&lt;br/&gt;
NoConstructorDeclarations&lt;br/&gt;
false&lt;br/&gt;
java.util.Optional&amp;lt;java.lang.String&amp;gt; name&lt;br/&gt;
java.util.Optional&amp;lt;java.lang.Integer&amp;gt; age&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Open JDK 22:&lt;br/&gt;
=============&lt;br/&gt;
PS C:\test&amp;gt; C:\jdk\openjdk-22-ea+16_windows-x64_bin\jdk-22\bin\java Reproducer&lt;br/&gt;
AnotatedExplicitCanonicalConstructor&lt;br/&gt;
true&lt;br/&gt;
java.util.Optional&amp;lt;java.lang.String&amp;gt; name&lt;br/&gt;
java.util.Optional&amp;lt;java.lang.Integer&amp;gt; age&lt;br/&gt;
&lt;br/&gt;
AnnotatedCompactConstructor&lt;br/&gt;
true&lt;br/&gt;
java.util.Optional&amp;lt;java.lang.String&amp;gt; name&lt;br/&gt;
java.util.Optional&amp;lt;java.lang.Integer&amp;gt; age&lt;br/&gt;
&lt;br/&gt;
NoConstructorDeclarations&lt;br/&gt;
false&lt;br/&gt;
java.util.Optional&amp;lt;java.lang.String&amp;gt; name&lt;br/&gt;
java.util.Optional&amp;lt;java.lang.Integer&amp;gt;&lt;br/&gt;
&lt;br/&gt;
The issue is thus reproducible in JDK 21</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5132255">JDK-8334608</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5143390">JDK-8343828</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10400">
                    <name>CSR</name>
                                            <outwardlinks description="csr for">
                                        <issuelink>
            <issuekey id="5116717">JDK-8321819</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                                                <inwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5127770">JDK-8331026</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5081204">JDK-8292275</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5154910">JDK-8353799</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="107297" name="Reproducer.java" size="1239" author="adev" created="Tue, 21 Nov 2023 23:08:15 -0800"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                <customfield id="customfield_10004" key="com.atlassian.jira.plugin.system.customfieldtypes:version">
                        <customfieldname>Introduced In Version</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="22711">21</customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i33x8r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17411"><![CDATA[b25]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="668"><![CDATA[java.lang:reflect]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>