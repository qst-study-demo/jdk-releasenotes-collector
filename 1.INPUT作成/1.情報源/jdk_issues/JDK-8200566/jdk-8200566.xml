<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 10:07:36 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8200566] DistributionPointFetcher fails to fetch CRLs if the DistributionPoints field contains more than one DistributionPoint and the first one fails</title>
                <link>https://bugs.openjdk.org/browse/JDK-8200566</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>FULL PRODUCT VERSION :&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
ADDITIONAL OS VERSION INFORMATION :&lt;br/&gt;
Microsoft Windows [Version 10.0.14393]&lt;br/&gt;
The codepath is such that this affects other OSes, as well.&lt;br/&gt;
&lt;br/&gt;
A DESCRIPTION OF THE PROBLEM :&lt;br/&gt;
I&amp;#39;ve created a Certificate which contain two CRLDistributionPoint in the CRLDistributionPoints field. These are two separate HTTP web servers, which provide the same CRL. &lt;br/&gt;
&lt;br/&gt;
I see the following happen when I use the PKIX CertPathValidator:&lt;br/&gt;
If the first listed endpoint is unavailable (causing an IOException either by blocking the port in the firewall or shutting down the software), then revocation checking will fail even though the CRL is available on the next CRL DistributionPoint.&lt;br/&gt;
&lt;br/&gt;
From what I can determine, the cause is that the for-loop in: &lt;a href=&quot;http://hg.openjdk.java.net/jdk/jdk/file/71c04702a3d5/src/java.base/share/classes/sun/security/provider/certpath/DistributionPointFetcher.java#l134&quot;&gt;http://hg.openjdk.java.net/jdk/jdk/file/71c04702a3d5/src/java.base/share/classes/sun/security/provider/certpath/DistributionPointFetcher.java#l134&lt;/a&gt;&lt;br/&gt;
will exit early with an exception and never check the second CRL DistributionPoint.&lt;br/&gt;
&lt;br/&gt;
The result of the failure is stored in the CRL cache. If the underlying URICertStore is called within the CRL Check Interval, then the same method (which otherwise throws the exception) will return an empty collection instead and the second DistributionPoint is checked as expected. &lt;br/&gt;
&lt;br/&gt;
This was observed in JRE 8u144 but the same for-loop is present in the latest JDK.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :&lt;br/&gt;
1. Create a certificate with multiple HTTP Endpoints stored in different DistributionPoint fields&lt;br/&gt;
2. Make the CRL available on the second HTTP Endpoint and ensure that the first endpoint is unavailable.&lt;br/&gt;
3. Setup the PKIX CerthPathValidator&lt;br/&gt;
4. Validate the created Certificate against the PKIX CertPathValidator&lt;br/&gt;
5. Validate the created Certificate a second time (within 30 second) against the PKIX CertPathValidator.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
EXPECTED VERSUS ACTUAL BEHAVIOR :&lt;br/&gt;
EXPECTED -&lt;br/&gt;
Both validation checks should succeed. &lt;br/&gt;
ACTUAL -&lt;br/&gt;
The first validation check fails with an &amp;quot;Unable to determine revocation status due to network error&amp;quot;. &lt;br/&gt;
&lt;br/&gt;
The second validation check fetches the CRL from the second distribution point and succeeds the revocation checking.&lt;br/&gt;
&lt;br/&gt;
REPRODUCIBILITY :&lt;br/&gt;
This bug can be reproduced always.&lt;br/&gt;
&lt;br/&gt;
CUSTOMER SUBMITTED WORKAROUND :&lt;br/&gt;
Only specify one CRL DistributionPoint in certificates.&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
        <key id="4955565">JDK-8200566</key>
            <summary>DistributionPointFetcher fails to fetch CRLs if the DistributionPoints field contains more than one DistributionPoint and the first one fails</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mullan">Sean Mullan</assignee>
                                    <reporter username="webbuggrp">Webbug Group</reporter>
                        <labels>
                            <label>dcs-processed</label>
                            <label>dcs-pso</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>reproducer-yes</label>
                            <label>webbug</label>
                    </labels>
                <created>Mon, 19 Mar 2018 02:17:09 -0700</created>
                <updated>Mon, 21 Apr 2025 01:18:14 -0700</updated>
                            <resolved>Mon, 8 Apr 2024 13:11:05 -0700</resolved>
                                    <version>8</version>
                    <version>11</version>
                                    <fixVersion>23</fixVersion>
                                    <component>security-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14771120" author="roboduke" created="Thu, 17 Apr 2025 06:24:53 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1673&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1673&lt;/a&gt;&lt;br/&gt;
Date: 2025-04-17 13:15:56 +0000</comment>
                            <comment id="14771112" author="goetz" created="Thu, 17 Apr 2025 06:13:47 -0700"  >Fix request [21u]&lt;br/&gt;
&lt;br/&gt;
I would like to backport this bug fix. I think this should be fixed in current LTS, too.&lt;br/&gt;
The change is rather obvious, thus the risk of breaking something is rather small. But security is a delicate part of the code. Luckily the change is well tested. &lt;br/&gt;
Clean backport.&lt;br/&gt;
Test passes and reproduces the issue. SAP nightly testing passed.</comment>
                            <comment id="14663717" author="dukebot" created="Mon, 8 Apr 2024 13:11:04 -0700"  >Changeset: e7026465&lt;br/&gt;
Author:    Sean Mullan &amp;lt;&lt;a href=&apos;mailto:mullan@openjdk.org&apos;&gt;mullan@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-04-08 20:08:56 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/e70264654570155a39d0841ce82b9dd52ca0389c&quot;&gt;https://git.openjdk.org/jdk/commit/e70264654570155a39d0841ce82b9dd52ca0389c&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14663229" author="roboduke" created="Fri, 5 Apr 2024 06:22:52 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/18656&quot;&gt;https://git.openjdk.org/jdk/pull/18656&lt;/a&gt;&lt;br/&gt;
Date: 2024-04-05 13:17:21 +0000</comment>
                            <comment id="14663202" author="mullan" created="Fri, 5 Apr 2024 05:27:50 -0700"  >The cache is working correctly. If there is an error fetching a CRL, the cache treats subsequent fetches for the same CRL as non-existent to avoid repeated fetching errors until the cache is cleared.&lt;br/&gt;
&lt;br/&gt;
However, the code should be changed to continue to look for other CRLs on the CRL Distribution Point before giving up.</comment>
                            <comment id="14513851" author="mullan" created="Thu, 28 Jul 2022 07:44:17 -0700"  >Re-opening.&lt;br/&gt;
&lt;br/&gt;
Took another look at this issue, and realized there is an issue and that the revocation behavior should behave the same whether or not the cache is used.</comment>
                            <comment id="14373235" author="pnarayanaswa" created="Sun, 11 Oct 2020 21:59:32 -0700"  >Additional Information from submitter:&lt;br/&gt;
===========================&lt;br/&gt;
I just noticed that this has been closed with the resolution: Not an Issue&lt;br/&gt;
&lt;br/&gt;
&amp;quot;When a CRLDP includes more than one DistributionPoint, each CRL may be segmented, and therefore all CRLs must be downloaded to ensure all reason codes are checked.&amp;quot;&lt;br/&gt;
&lt;br/&gt;
This is not the behavior of the revocation checking. This implies that revocation checking should always fail for the example given.&lt;br/&gt;
This is not the case.&lt;br/&gt;
&lt;br/&gt;
The checking will fail on the first attempt, but if the second attempt is within 30 seconds (the cached time for the previous error). Then revocation checking is successful, even though the first CRL is never checked. Which conflicts with the above statement that all CRLs must be downloaded.&lt;br/&gt;
&lt;br/&gt;
Either the first attempt would have to fetch both CRLs and determine that it has a complete CRL and make the decision based on this or the each subsequent attempt would have to fail (regardless of cached errors) since the first CRL cannot be retrieved.&lt;br/&gt;
&lt;br/&gt;
I believe that the key point from Section 4.2.1.13 of RFC 5280 is &amp;quot;... each name describes a different mechanism  ...&amp;quot;. If the example would use two HTTP URIs pointing to the same CRL. Should these be expressed as two different GeneralNames in two different DistributionPoint&amp;#39;s, since they use the same mechanism (http). Or should they be included as two different GeneralNames in the same DistributionPoint, since they provide the same CRL.&lt;br/&gt;
</comment>
                            <comment id="14327767" author="mullan" created="Tue, 31 Mar 2020 13:05:41 -0700"  >Section 4.2.1.13 of RFC 5280 [1] says that:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;If the DistributionPointName contains multiple values, each name&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;describes a different mechanism to obtain the same CRL.  For example,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;the same CRL could be available for retrieval through both LDAP and&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;HTTP.&lt;br/&gt;
&lt;br/&gt;
However, the certificate in this bug report does not follow this format for the CRLDP extension. In the test certificate, the CRLDP contains two DistributionPoint fields using different retrieval mechanisms for the same CRL. Since this is the same CRL, it should have instead included those in the DistributionPointName (which is a SEQUENCE of GeneralName) of one DistributionPoint, and this would have fixed the issue. For example, instead of this:&lt;br/&gt;
&lt;br/&gt;
#2: ObjectId: 2.5.29.31 Criticality=false&lt;br/&gt;
CRLDistributionPoints [&lt;br/&gt;
&amp;nbsp;&amp;nbsp;[DistributionPoint:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[URIName: &lt;a href=&quot;http://127.0.0.1:48180/crl/will/always/fail/testkey-iaik.crl&quot;&gt;http://127.0.0.1:48180/crl/will/always/fail/testkey-iaik.crl&lt;/a&gt;]&lt;br/&gt;
, DistributionPoint:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[URIName: file:./testkey-iaik.crl]&lt;br/&gt;
]]&lt;br/&gt;
&lt;br/&gt;
it should be:&lt;br/&gt;
&lt;br/&gt;
#2: ObjectId: 2.5.29.31 Criticality=false&lt;br/&gt;
CRLDistributionPoints [&lt;br/&gt;
&amp;nbsp;&amp;nbsp;[DistributionPoint:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[URIName: &lt;a href=&quot;http://127.0.0.1:48180/crl/will/always/fail/testkey-iaik.crl,&quot;&gt;http://127.0.0.1:48180/crl/will/always/fail/testkey-iaik.crl,&lt;/a&gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;URIName: file:./testkey-iaik.crl]&lt;br/&gt;
]]&lt;br/&gt;
&lt;br/&gt;
When a CRLDP includes more than one DistributionPoint, each CRL may be segmented, and therefore all CRLs must be downloaded to ensure all reason codes are checked.&lt;br/&gt;
&lt;br/&gt;
[1] &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc5280.html#section-4.2.1.13&quot;&gt;https://www.rfc-editor.org/rfc/rfc5280.html#section-4.2.1.13&lt;/a&gt;</comment>
                            <comment id="14167521" author="psonal" created="Tue, 27 Mar 2018 22:28:36 -0700"  >Attached is test case provided by the submitter.&lt;br/&gt;
CrlDistPointIssue.java - Source&lt;br/&gt;
trust.crt - Trust Anchor&lt;br/&gt;
testkey-iaik.crl - CRL signed by the Trust Anchor&lt;br/&gt;
entity.crt - End-entity we want to validate. &lt;br/&gt;
This certificate has two CRL DistributionPoints. The first one point to localhost:48081 and is assumed to always fail. The other is a file-URI which looks in the working directory for the crl. In a real-world case the distribution point would not be set with a file URI. It is included so that the program is able to successfully validate the certificate without a web-server.&lt;br/&gt;
The program sets up a PKIX CertPathValidator with a PKIXRevocationChecker which will only check CRLS. It performs two checks, the first one fails and the second one is successful. Then it waits 30 seconds to clear the URICertStore-cache performs two new checks, with the same result. &lt;br/&gt;
The expected behavior would be that the revocation checking is successful on every validate-call, since the CRL is always available on the second endpoint. &lt;br/&gt;
&lt;br/&gt;
</comment>
                            <comment id="14167520" author="psonal" created="Tue, 27 Mar 2018 22:27:04 -0700"  >Following are the test results :&lt;br/&gt;
JDK 8u161 - Fail&lt;br/&gt;
JDK 10-+46 - Fail&lt;br/&gt;
JDk 11-ea + 4 - Fail&lt;br/&gt;
&lt;br/&gt;
Output :&lt;br/&gt;
########################## Checking&lt;br/&gt;
########################## Validation failed&lt;br/&gt;
########################## Checking again&lt;br/&gt;
########################## Validation Successful since it fetched the CRL from the file&lt;br/&gt;
########################## Checking again&lt;br/&gt;
########################## Validation failed&lt;br/&gt;
########################## Checking again&lt;br/&gt;
########################## Validation Successful since it fetched the CRL from the file&lt;br/&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5156470">JDK-8355101</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                                                <inwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5038448">JDK-8264158</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="75818" name="CrlDistPointIssue.java" size="3598" author="psonal" created="Tue, 27 Mar 2018 22:23:23 -0700"/>
                            <attachment id="75817" name="entity.crt" size="2222" author="psonal" created="Tue, 27 Mar 2018 22:23:23 -0700"/>
                            <attachment id="75816" name="testkey-iaik.crl" size="714" author="psonal" created="Tue, 27 Mar 2018 22:23:23 -0700"/>
                            <attachment id="75815" name="trust.crt" size="1946" author="psonal" created="Tue, 27 Mar 2018 22:23:23 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2d2wj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17354"><![CDATA[b18]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="195"><![CDATA[java.security]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>