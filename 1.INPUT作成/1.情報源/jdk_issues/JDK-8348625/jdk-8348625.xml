<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Fri Sep 26 00:11:52 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8348625] [21u, 17u] Revert JDK-8185862 to restore old java.awt.headless behavior on Windows</title>
                <link>https://bugs.openjdk.org/browse/JDK-8348625</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8185862&quot; title=&quot;AWT Assertion Failure in ::GetDIBits(hBMDC, hBM, 0, 1, 0, gpBitmapInfo, 0) &amp;#39;awt_Win32GraphicsDevice.cpp&amp;#39;, at line 185&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8185862&quot;&gt;&lt;strike&gt;JDK-8185862&lt;/strike&gt;&lt;/a&gt; changed the detection of headless mode on Windows by enumerating displays and turning on headless mode when only virtual devices exist. This causes problems with several use cases, mostly for automatic testing, e.g. &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8336862&quot; title=&quot;New detection of headless mode on Windows causes problems for automatic tests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8336862&quot;&gt;JDK-8336862&lt;/a&gt;, &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8340992&quot; title=&quot;Headless Mode on Windows no Longer Works as Before&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8340992&quot;&gt;&lt;strike&gt;JDK-8340992&lt;/strike&gt;&lt;/a&gt;, &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8341294&quot; title=&quot;EDT throws java.awt.AWTError while repainting in an VM without a connection&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8341294&quot;&gt;JDK-8341294&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
While the new detection mode seems correct from its idea, we should revert the change for the current LTS update releases and try to focus on fixing issues with explicitly using -Djava.awt.headless=true in the head release.</description>
                <environment></environment>
        <key id="5149091">JDK-8348625</key>
            <summary>[21u, 17u] Revert JDK-8185862 to restore old java.awt.headless behavior on Windows</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://bugs.openjdk.org/images/jbsImages/p2.png">P2</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="clanger">Christoph Langer</assignee>
                                    <reporter username="clanger">Christoph Langer</reporter>
                        <labels>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk24u-fix-request</label>
                    </labels>
                <created>Sun, 26 Jan 2025 00:44:00 -0800</created>
                <updated>Mon, 19 May 2025 03:14:28 -0700</updated>
                            <resolved>Fri, 31 Jan 2025 02:26:44 -0800</resolved>
                                    <version>17.0.12</version>
                    <version>21.0.4</version>
                                    <fixVersion>21.0.7</fixVersion>
                                    <component>client-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>6</watches>
                                                                                                                <comments>
                            <comment id="14781107" author="clanger" created="Mon, 19 May 2025 03:14:28 -0700"  >[~afarley] there is no intend to remove the new behavior from head but rather to fix it. Currently [~dbriemann] is working on fixing this, e.g. in &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8341294&quot; title=&quot;EDT throws java.awt.AWTError while repainting in an VM without a connection&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8341294&quot;&gt;JDK-8341294&lt;/a&gt;. However, he was struggling to reproduce the problem. On another issue, the idea was to somehow allowing the old behavior when a user explicitly sets -Djava.awt.headless=false, see &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8336862&quot; title=&quot;New detection of headless mode on Windows causes problems for automatic tests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8336862&quot;&gt;JDK-8336862&lt;/a&gt;. Also for that one, we&amp;#39;d need some scenario/reproducer on which base such a change could be developed.&lt;br/&gt;
&lt;br/&gt;
Apart from that, JDK24u is closed for changes now, so the fix request will not be approved any more. I also don&amp;#39;t see a PR for 24u.&lt;br/&gt;
</comment>
                            <comment id="14780806" author="afarley" created="Fri, 16 May 2025 07:36:26 -0700"  >Also, can this be removed from jdk25 and jdk-head? Seems odd that we&amp;#39;d have to repeatedly undo this change to unbreak workflows.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m not opposed to re-introducing this into the jdk once solutions have been found for this matter.</comment>
                            <comment id="14780805" author="afarley" created="Fri, 16 May 2025 07:34:45 -0700"  >Fix request (24u):&lt;br/&gt;
Same reasoning as for 21u and jdk17u.&lt;br/&gt;
&amp;quot;Undo&amp;quot; Commit: &lt;a href=&quot;https://github.com/adamfarley/jdk/commit/fc79d49ca7031134b626583910f33f5e3cf67e68&quot;&gt;https://github.com/adamfarley/jdk/commit/fc79d49ca7031134b626583910f33f5e3cf67e68&lt;/a&gt;&lt;br/&gt;
&amp;quot;Security Action Removal&amp;quot; Commit: &lt;a href=&quot;https://github.com/adamfarley/jdk/commit/6e1575f22914369acd3f20189f84452cc023b132&quot;&gt;https://github.com/adamfarley/jdk/commit/6e1575f22914369acd3f20189f84452cc023b132&lt;/a&gt;&lt;br/&gt;
Commits tested here: &lt;a href=&quot;https://ci.adoptium.net/job/build-scripts/job/jobs/job/jdk24u/job/jdk24u-windows-x64-temurin/10/&quot;&gt;https://ci.adoptium.net/job/build-scripts/job/jobs/job/jdk24u/job/jdk24u-windows-x64-temurin/10/&lt;/a&gt;&lt;br/&gt;
Note: Build stage passed fine. Later stage failed for unrelated reasons.</comment>
                            <comment id="14751017" author="clanger" created="Tue, 11 Feb 2025 06:18:54 -0800"  >Fix request (17u):&lt;br/&gt;
Same reasoning as for 21u. This reverts a backport which mainly addressed an issue unveiled by tests in a &amp;quot;headless&amp;quot; Windows environment. However, the change that was introduced by the fix broke existing CI integrations of users, and it will help quite a few folks when the old behavior gets restored.&lt;br/&gt;
Backport tested in SAP nightlies, no regressions spotted.</comment>
                            <comment id="14750096" author="roboduke" created="Thu, 6 Feb 2025 12:14:31 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/3270&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/3270&lt;/a&gt;&lt;br/&gt;
Date: 2025-02-06 20:10:03 +0000</comment>
                            <comment id="14749564" author="dukebot" created="Wed, 5 Feb 2025 03:44:02 -0800"  >Changeset: e1967d51&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Christoph Langer &amp;lt;&lt;a href=&apos;mailto:clanger@openjdk.org&apos;&gt;clanger@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2025-01-31 10:23:00 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk21u/commit/e1967d5124309de5276ab88d1bcf4d24f2620dab&quot;&gt;https://git.openjdk.org/jdk21u/commit/e1967d5124309de5276ab88d1bcf4d24f2620dab&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14746493" author="dukebot" created="Fri, 31 Jan 2025 02:26:43 -0800"  >Changeset: e1967d51&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Christoph Langer &amp;lt;&lt;a href=&apos;mailto:clanger@openjdk.org&apos;&gt;clanger@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2025-01-31 10:23:00 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/commit/e1967d5124309de5276ab88d1bcf4d24f2620dab&quot;&gt;https://git.openjdk.org/jdk21u-dev/commit/e1967d5124309de5276ab88d1bcf4d24f2620dab&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14746265" author="sgehwolf" created="Thu, 30 Jan 2025 07:31:36 -0800"  >OK, thanks.</comment>
                            <comment id="14746248" author="clanger" created="Thu, 30 Jan 2025 06:45:48 -0800"  >No, I think for 21 and 17 there should not be a redo. And in the head releases I&amp;#39;ll have a look at fixing the RDP issue, I&amp;#39;m optimistic for that. Hopefully, with that we can enable &amp;quot;-Djava.awt.headless=true&amp;quot; as a viable alternative for customers that go forward with their Java version and need that kind of headful testing in a headless environment.</comment>
                            <comment id="14746219" author="sgehwolf" created="Thu, 30 Jan 2025 05:38:53 -0800"  >Yes. Lets unbreak some JDK 21/17 users.&lt;br/&gt;
&lt;br/&gt;
[~clanger] Is there a &amp;quot;REDO&amp;quot; like bug for this? I suppose there will be an attempt again to make it work in certain headless environments by specifying a property or some such. Would be good to be able to watch such a bug. Thanks!</comment>
                            <comment id="14746218" author="clanger" created="Thu, 30 Jan 2025 05:26:59 -0800"  >Fix request (21u):&lt;br/&gt;
This reverts a backport which mainly addressed an issue unveiled by tests in a &amp;quot;headless&amp;quot; Windows environment. However, the change that was introduced by the fix broke existing CI integrations of users, and it will help quite a few folks when the old behavior gets restored.&lt;br/&gt;
</comment>
                            <comment id="14744236" author="aivanov" created="Mon, 27 Jan 2025 05:35:03 -0800"  >In this case, we know the specific versions where the problem was introduced, I updated the &#8216;Affects Versions&#8217; field.</comment>
                            <comment id="14744137" author="sgehwolf" created="Mon, 27 Jan 2025 00:54:44 -0800"  >[~clanger] AFAIK,  &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8185862&quot; title=&quot;AWT Assertion Failure in ::GetDIBits(hBMDC, hBM, 0, 1, 0, gpBitmapInfo, 0) &amp;#39;awt_Win32GraphicsDevice.cpp&amp;#39;, at line 185&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8185862&quot;&gt;&lt;strike&gt;JDK-8185862&lt;/strike&gt;&lt;/a&gt; isn&amp;#39;t in OpenJDK 11. The bug synopsis mentions 11. Is that correct?</comment>
                            <comment id="14744037" author="roboduke" created="Sun, 26 Jan 2025 04:39:41 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1359&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1359&lt;/a&gt;&lt;br/&gt;
Date: 2025-01-26 12:35:01 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5150547">JDK-8349922</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10600">
                    <name>Causes</name>
                                                                <inwardlinks description="caused by">
                                        <issuelink>
            <issuekey id="4937217">JDK-8185862</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10003" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Introduced In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17303"><![CDATA[b01]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10004" key="com.atlassian.jira.plugin.system.customfieldtypes:version">
                        <customfieldname>Introduced In Version</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="23085">21.0.4</customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17005"><![CDATA[windows]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i39krv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17304"><![CDATA[b01]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="196"><![CDATA[java.awt]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>