<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 10:00:48 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8345296] AArch64: VM crashes with SIGILL when prctl is disallowed</title>
                <link>https://bugs.openjdk.org/browse/JDK-8345296</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>We have caught this in some prod environments, where prctl is forbidden by the sandboxing mechanism. This fails the JVM, because we have the following code to check for SVE vector length:&lt;br/&gt;
&lt;br/&gt;
int VM_Version::get_current_sve_vector_length() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;assert(VM_Version::supports_sve(), &amp;quot;should not call this&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;return prctl(PR_SVE_GET_VL);&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
That code returns `-1` when `prctl` is disallowed, which JVM then blindly interprets as vector length:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;if (UseSVE &amp;gt; 0) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_initial_sve_vector_length = get_current_sve_vector_length();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
This incorrect vector length would then be fed into AArch64 assembler, eventually leading to emitting illegal instructions, and thus getting a SIGILL when executing that incorrectly generated code. With modern JDKs, this reliably happens on JVM startup.&lt;br/&gt;
&lt;br/&gt;
Workaround: -XX:UseSVE=0</description>
                <environment></environment>
        <key id="5145168">JDK-8345296</key>
            <summary>AArch64: VM crashes with SIGILL when prctl is disallowed</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="shade">Aleksey Shipilev</assignee>
                                    <reporter username="shade">Aleksey Shipilev</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>noreg-hard</label>
                            <label>oracle-triage-24</label>
                    </labels>
                <created>Mon, 2 Dec 2024 03:28:54 -0800</created>
                <updated>Wed, 12 Mar 2025 01:32:29 -0700</updated>
                            <resolved>Tue, 3 Dec 2024 08:32:57 -0800</resolved>
                                    <version>17</version>
                    <version>21</version>
                    <version>23</version>
                    <version>24</version>
                                    <fixVersion>24</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>9</watches>
                                                                                                                <comments>
                            <comment id="14757043" author="dholmes" created="Thu, 27 Feb 2025 18:35:28 -0800"  >Yes the workaround works, but it exposed a build bug that wasn&amp;#39;t passing through the jvmargs value to all invocations of tools from the boot JDK.</comment>
                            <comment id="14756848" author="shade" created="Thu, 27 Feb 2025 03:33:27 -0800"  >&amp;gt; People are running into this when using a JDK 23 boot JDK. &lt;br/&gt;
&lt;br/&gt;
Right... I haven&amp;#39;t checked on failing hardware, but I suspect something like `./configure --with-boot-jdk-jvmargs=-XX:UseSVE=0 ...` should workaround it, until we switch to JDK 24 as boot JDK in a month or so.</comment>
                            <comment id="14756726" author="dholmes" created="Wed, 26 Feb 2025 20:41:02 -0800"  >Okay so we missed the 23.0.2 cutoff. Pity. People are running into this when using a JDK 23 boot JDK.</comment>
                            <comment id="14756420" author="shade" created="Wed, 26 Feb 2025 01:36:27 -0800"  >&amp;gt; Why didn&amp;#39;t this get backported to JDK 23? &lt;br/&gt;
&lt;br/&gt;
You mean &amp;quot;in addition to JDK 17 and JDK 21&amp;quot;?&lt;br/&gt;
&lt;br/&gt;
I believe this is what happened. The original fix and the backports emerged pretty close to Jan 2025 release window, I think we were past the window for normal, non-critical integration. We initially targeted critical backports for Jan 2025 release, so it would cover 21.0.6, 17.0.14, 23.0.2. There was a backport PR open against jdk23u by Kerem. But then upstream maintainers (reasonably!) pushed back, and the backports landed at future Apr 2025 releases, 21.0.7 and 17.0.15. By that time, 23u would be dead, replaced by 24.0.1. The fix would be there. In other words, in April 2025 the fix lands in all currently maintained JDK trains at once.&lt;br/&gt;
&lt;br/&gt;
Granted, we could have shipped this as critical backport in 23.0.2 ahead of 17u and 21u, but we kinda expected similar pushback we got in 17u and 21u :)</comment>
                            <comment id="14755563" author="dholmes" created="Fri, 21 Feb 2025 13:32:44 -0800"  >Why didn&amp;#39;t this get backported to JDK 23?</comment>
                            <comment id="14731570" author="roboduke" created="Thu, 12 Dec 2024 07:25:21 -0800"  >[jdk21u-fix-request] Approval Request from Kerem Kat&lt;br/&gt;
Fix VM crash on production workloads when prctl is disallowed, on AArch64 with SVE.</comment>
                            <comment id="14731569" author="roboduke" created="Thu, 12 Dec 2024 07:25:11 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk23u/pull/231&quot;&gt;https://git.openjdk.org/jdk23u/pull/231&lt;/a&gt;&lt;br/&gt;
Date: 2024-12-12 15:18:26 +0000</comment>
                            <comment id="14731568" author="roboduke" created="Thu, 12 Dec 2024 07:24:59 -0800"  >[jdk17u-fix-request] Approval Request from Kerem Kat&lt;br/&gt;
Fix VM crash on production workloads when prctl is disallowed, on AArch64 with SVE.</comment>
                            <comment id="14731557" author="roboduke" created="Thu, 12 Dec 2024 06:17:58 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/3111&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/3111&lt;/a&gt;&lt;br/&gt;
Date: 2024-12-12 14:11:14 +0000</comment>
                            <comment id="14731473" author="shade" created="Thu, 12 Dec 2024 02:15:52 -0800"  >Cesar is sleeping right now, so I&amp;#39;ll give more context: we have a report for a similar crash on recent MacOS *and* Alpine: &lt;a href=&quot;https://github.com/corretto/corretto-21/issues/85&quot;&gt;https://github.com/corretto/corretto-21/issues/85&lt;/a&gt;. Nightly builds that contain this fix print the warning added by this patch, and do not crash. This suggests the problem fixed by this issue is a bit more widespread than we initially believed. This is why we are now expediting the backports :)</comment>
                            <comment id="14731437" author="thartmann" created="Thu, 12 Dec 2024 00:16:04 -0800"  >I don&amp;#39;t have access to such a system but others might have. [~cslucas] are you suspecting that the issues you are seeing on OSX 15.2 have a different root cause or why are you still investigating now that the issue is fixed?</comment>
                            <comment id="14731248" author="cslucas" created="Wed, 11 Dec 2024 15:38:14 -0800"  >Apparently this is happening on OSX 15.2 as well. [~thartmann], [~kvn] we are trying to get our hands on a 15.2 OSX (released today), are you already able to run tests on that version by any chance?</comment>
                            <comment id="14731123" author="roboduke" created="Wed, 11 Dec 2024 09:31:48 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1222&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1222&lt;/a&gt;&lt;br/&gt;
Date: 2024-12-11 17:24:05 +0000</comment>
                            <comment id="14727807" author="dukebot" created="Tue, 3 Dec 2024 08:32:56 -0800"  >Changeset: 3c60f0b2&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Aleksey Shipilev &amp;lt;&lt;a href=&apos;mailto:shade@openjdk.org&apos;&gt;shade@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-12-03 16:28:41 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/3c60f0b2bb75150d49da9ab94d88b767275de5e2&quot;&gt;https://git.openjdk.org/jdk/commit/3c60f0b2bb75150d49da9ab94d88b767275de5e2&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14727636" author="chagedorn" created="Tue, 3 Dec 2024 00:00:47 -0800"  >ILW = SIGILL when prctl is forbidden, only when prctl is forbidden and with SVE, use -XX:UseSVE=0 = HLM = P3</comment>
                            <comment id="14727389" author="roboduke" created="Mon, 2 Dec 2024 04:43:57 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/22479&quot;&gt;https://git.openjdk.org/jdk/pull/22479&lt;/a&gt;&lt;br/&gt;
Date: 2024-12-02 12:17:26 +0000</comment>
                            <comment id="14727386" author="shade" created="Mon, 2 Dec 2024 04:34:32 -0800"  >Reproducer:&lt;br/&gt;
&lt;br/&gt;
```&lt;br/&gt;
$ cat seccomp-test.c&lt;br/&gt;
#include &amp;lt;unistd.h&amp;gt;&lt;br/&gt;
#include &amp;lt;sys/prctl.h&amp;gt;&lt;br/&gt;
#include &amp;lt;seccomp.h&amp;gt;&lt;br/&gt;
#include &amp;lt;linux/seccomp.h&amp;gt;&lt;br/&gt;
#include &amp;lt;errno.h&amp;gt;&lt;br/&gt;
&lt;br/&gt;
int main(int argc, char *argv[]) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scmp_filter_ctx ctx = seccomp_init(SCMP_ACT_ALLOW);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;seccomp_rule_add(ctx, SCMP_ACT_ERRNO(EPERM), SCMP_SYS(prctl), 0);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;seccomp_load(ctx);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;char** args = {NULL};&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;execvp(&amp;quot;build/linux-aarch64-server-fastdebug/images/jdk/bin/java&amp;quot;, args);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// execvp(&amp;quot;build/linux-aarch64-server-release/images/jdk/bin/java&amp;quot;, args);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;seccomp_release(ctx);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return 0;&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
$  gcc -lseccomp seccomp-test.c -o seccomp-test &lt;br/&gt;
&lt;br/&gt;
$ ./seccomp-test&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  Internal Error (/home/shipilev/shipilev-jdk/src/hotspot/share/utilities/powerOfTwo.hpp:112), pid=5725, tid=5726&lt;br/&gt;
#  assert(value &amp;gt; 0) failed: Invalid value&lt;br/&gt;
#&lt;br/&gt;
# JRE version:  (24.0) (fastdebug build )&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM (fastdebug 24-internal-adhoc.shipilev.shipilev-jdk, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-aarch64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# V  [libjvm.so+0x12aeb7c]  Matcher::scalable_predicate_reg_slots()+0xb4&lt;br/&gt;
#&lt;br/&gt;
# No core dump will be written. Core dumps have been disabled. To enable core dumping, try &amp;quot;ulimit -c unlimited&amp;quot; before starting Java again&lt;br/&gt;
#&lt;br/&gt;
# An error report file with more information is saved as:&lt;br/&gt;
# /local/home/shipilev/shipilev-jdk/hs_err_pid5725.log&lt;br/&gt;
&lt;br/&gt;
&amp;lt;change to &amp;quot;release&amp;quot; in seccomp-test.c&amp;gt;&lt;br/&gt;
&lt;br/&gt;
$ ./seccomp-test&lt;br/&gt;
#&lt;br/&gt;
# A fatal error has been detected by the Java Runtime Environment:&lt;br/&gt;
#&lt;br/&gt;
#  SIGILL (0x4) at pc=0x0000ffff93656210, pid=21490, tid=21491&lt;br/&gt;
#&lt;br/&gt;
# JRE version:  (24.0) (build )&lt;br/&gt;
# Java VM: OpenJDK 64-Bit Server VM (24-internal-adhoc.shipilev.shipilev-jdk, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, linux-aarch64)&lt;br/&gt;
# Problematic frame:&lt;br/&gt;
# j  java.lang.System.registerNatives()V+0 &lt;a href=&apos;mailto:java.base@24-internal&apos;&gt;java.base@24-internal&lt;/a&gt;&lt;br/&gt;
#&lt;br/&gt;
# No core dump will be written. Core dumps have been disabled. To enable core dumping, try &amp;quot;ulimit -c unlimited&amp;quot; before starting Java again&lt;br/&gt;
#&lt;br/&gt;
# An error report file with more information is saved as:&lt;br/&gt;
# /local/home/shipilev/shipilev-jdk/hs_err_pid21490.log&lt;br/&gt;
#&lt;br/&gt;
# The crash happened outside the Java Virtual Machine in native code.&lt;br/&gt;
# See problematic frame for where to report the bug.&lt;br/&gt;
#&lt;br/&gt;
```</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5146234">JDK-8346189</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5146562">JDK-8346487</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5151605">JDK-8350863</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5151867">JDK-8351044</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5000858">JDK-8231441</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i38xdn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17419"><![CDATA[b27]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>