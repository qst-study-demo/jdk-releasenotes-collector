<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 10:22:38 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8328107] Shenandoah/C2: TestVerifyLoopOptimizations test failure</title>
                <link>https://bugs.openjdk.org/browse/JDK-8328107</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>Running the following test:&lt;br/&gt;
&lt;br/&gt;
make run-test TEST=compiler/loopopts/TestVerifyLoopOptimizations.java TEST_VM_OPTS=&amp;quot;-XX:+UseShenandoahGC&amp;quot;&lt;br/&gt;
&lt;br/&gt;
fails with:&lt;br/&gt;
&lt;br/&gt;
#  Internal Error (/home/admin/src/openjdk/jdk/src/hotspot/share/opto/loopnode.hpp:470), pid=2362836, tid=2362881&lt;br/&gt;
#  assert(cle != nullptr) failed: loopexit is null&lt;br/&gt;
&lt;br/&gt;
Current CompileTask:&lt;br/&gt;
C2:18095 3693    b  4       java.lang.invoke.LambdaMetafactory::metafactory (71 bytes)&lt;br/&gt;
&lt;br/&gt;
Stack: [0x0000fffee79e6000,0x0000fffee7be4000],  sp=0x0000fffee7bde510,  free space=2017k&lt;br/&gt;
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)&lt;br/&gt;
V  [libjvm.so+0x11e7a94]  IdealLoopTree::verify_tree(IdealLoopTree*) const+0x6d4  (loopnode.hpp:470)&lt;br/&gt;
V  [libjvm.so+0x11e78a8]  IdealLoopTree::verify_tree(IdealLoopTree*) const+0x4e8  (loopnode.cpp:5149)&lt;br/&gt;
V  [libjvm.so+0x11ea728]  PhaseIdealLoop::verify() const+0x2d8  (loopnode.cpp:4926)&lt;br/&gt;
V  [libjvm.so+0x11eb30c]  PhaseIdealLoop::build_and_optimize()+0xa4c  (loopnode.cpp:4725)&lt;br/&gt;
V  [libjvm.so+0x930094]  PhaseIdealLoop::optimize(PhaseIterGVN&amp;amp;, LoopOptsMode)+0x304  (loopnode.hpp:1115)&lt;br/&gt;
V  [libjvm.so+0x929b5c]  Compile::optimize_loops(PhaseIterGVN&amp;amp;, LoopOptsMode)+0x68  (compile.cpp:2189)&lt;br/&gt;
V  [libjvm.so+0x1653c94]  ShenandoahBarrierC2Support::expand(Compile*, PhaseIterGVN&amp;amp;)+0xd0  (shenandoahSupport.cpp:58)&lt;br/&gt;
V  [libjvm.so+0x1582554]  ShenandoahBarrierSetC2::expand_barriers(Compile*, PhaseIterGVN&amp;amp;) const+0x14  (shenandoahBarrierSetC2.cpp:750)&lt;br/&gt;
V  [libjvm.so+0x92ba7c]  Compile::Optimize()+0xcdc  (compile.cpp:2465)&lt;br/&gt;
V  [libjvm.so+0x92e75c]  Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*)+0x15a8  (compile.cpp:861)&lt;br/&gt;
V  [libjvm.so+0x77a838]  C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*)+0x174  (c2compiler.cpp:142)&lt;br/&gt;
V  [libjvm.so+0x93b364]  CompileBroker::invoke_compiler_on_method(CompileTask*)+0xab0  (compileBroker.cpp:2305)&lt;br/&gt;
V  [libjvm.so+0x93bf74]  CompileBroker::compiler_thread_loop()+0x634  (compileBroker.cpp:1964)&lt;br/&gt;
V  [libjvm.so+0xdf3f70]  JavaThread::thread_main_inner()+0xec  (javaThread.cpp:721)&lt;br/&gt;
V  [libjvm.so+0x179d104]  Thread::call_run()+0xb0  (thread.cpp:221)&lt;br/&gt;
V  [libjvm.so+0x13debb8]  thread_native_entry(Thread*)+0x138  (os_linux.cpp:864)&lt;br/&gt;
&lt;br/&gt;
It only seems to happen with Shenandoah, not with other GCs. Also, I can easily reproduce the problem on linux-x86_64 and linux-aarch64, but not on macosx-aarch64.&lt;br/&gt;
&lt;br/&gt;
The assert seems to have started occuring with &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8309622&quot; title=&quot;Re-examine the cache mechanism in BaseLocale&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8309622&quot;&gt;&lt;strike&gt;JDK-8309622&lt;/strike&gt;&lt;/a&gt;, but I don&amp;#39;t think this is the root cause of the problem.</description>
                <environment></environment>
        <key id="5124113">JDK-8328107</key>
            <summary>Shenandoah/C2: TestVerifyLoopOptimizations test failure</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="3" iconUrl="https://bugs.openjdk.org/images/jbsImages/p3.png">P3</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="roland">Roland Westrelin</assignee>
                                    <reporter username="rkennke">Roman Kennke</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>c2</label>
                            <label>gc-shenandoah</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>oracle-triage-23</label>
                            <label>oraclejdk-na</label>
                    </labels>
                <created>Wed, 13 Mar 2024 08:57:22 -0700</created>
                <updated>Mon, 21 Apr 2025 11:04:00 -0700</updated>
                            <resolved>Fri, 14 Jun 2024 06:52:30 -0700</resolved>
                                    <version>17</version>
                    <version>21</version>
                    <version>23</version>
                                    <fixVersion>24</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>7</watches>
                                                                                                                <comments>
                            <comment id="14768275" author="roboduke" created="Tue, 8 Apr 2025 12:35:07 -0700"  >[jdk21u-fix-request] Approval Request from Satyen Subramaniam&lt;br/&gt;
for backport. Fix replaces CountedLoop with a Loop node when a load barrier is expanded on the backedge of the counted loop.&lt;br/&gt;
&lt;br/&gt;
Risk: Low. Change should only address breaking case, and adds test to confirm functionality. Only affects Shenandoah. Change was merged in June 2024 in tip.&lt;br/&gt;
&lt;br/&gt;
Testing: &lt;br/&gt;
* GHA Sanity Checks&lt;br/&gt;
* Tier 1 and 2 tests locally</comment>
                            <comment id="14768240" author="roboduke" created="Tue, 8 Apr 2025 10:57:39 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1616&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1616&lt;/a&gt;&lt;br/&gt;
Date: 2025-04-08 17:48:56 +0000</comment>
                            <comment id="14681729" author="dukebot" created="Fri, 14 Jun 2024 06:52:28 -0700"  >Changeset: b5212d7b&lt;br/&gt;
Author:    Roland Westrelin &amp;lt;&lt;a href=&apos;mailto:roland@openjdk.org&apos;&gt;roland@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-06-14 13:50:21 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/b5212d7bfe78b18c18e45c42c724a22365709328&quot;&gt;https://git.openjdk.org/jdk/commit/b5212d7bfe78b18c18e45c42c724a22365709328&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14673844" author="roboduke" created="Thu, 16 May 2024 00:41:59 -0700"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/19259&quot;&gt;https://git.openjdk.org/jdk/pull/19259&lt;/a&gt;&lt;br/&gt;
Date: 2024-05-16 07:37:46 +0000</comment>
                            <comment id="14670770" author="shade" created="Fri, 3 May 2024 09:45:39 -0700"  >Hey Roland, do you have cycles to take a look at it? </comment>
                            <comment id="14657554" author="JIRAUSER20520" created="Thu, 14 Mar 2024 14:16:59 -0700"  >Problem compilation unit is for LambdaMetafactory::metafactory(). Before &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8309622&quot; title=&quot;Re-examine the cache mechanism in BaseLocale&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8309622&quot;&gt;&lt;strike&gt;JDK-8309622&lt;/strike&gt;&lt;/a&gt;, we never compile this method. We run into the assertion for this loop &lt;a href=&quot;https://github.com/openjdk/jdk/blob/87bd6caca03745c21172c3b5e8b0d28724810352/src/java.base/share/classes/java/lang/invoke/InnerClassLambdaMetafactory.java#L190-L193&quot;&gt;https://github.com/openjdk/jdk/blob/87bd6caca03745c21172c3b5e8b0d28724810352/src/java.base/share/classes/java/lang/invoke/InnerClassLambdaMetafactory.java#L190-L193&lt;/a&gt;. I believe the faulty transformation is in ShenadoahBarrierC2Support::pin_and_expand &lt;a href=&quot;https://github.com/openjdk/jdk/blob/87bd6caca03745c21172c3b5e8b0d28724810352/src/hotspot/share/gc/shenandoah/c2/shenandoahSupport.cpp#L1106&quot;&gt;https://github.com/openjdk/jdk/blob/87bd6caca03745c21172c3b5e8b0d28724810352/src/hotspot/share/gc/shenandoah/c2/shenandoahSupport.cpp#L1106&lt;/a&gt;. We run into the assertion because the backedge&amp;#39;s control is not a BaseCountedLoopEnd &lt;a href=&quot;https://github.com/openjdk/jdk/blob/87bd6caca03745c21172c3b5e8b0d28724810352/src/hotspot/share/opto/loopnode.hpp#L459&quot;&gt;https://github.com/openjdk/jdk/blob/87bd6caca03745c21172c3b5e8b0d28724810352/src/hotspot/share/opto/loopnode.hpp#L459&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
Attaching the IdealGraphVis file shen.xml. Issue occurs in between Before Beautify Loops 8 and BeforeIterGVN 34. I suspect the issue occurs when expanding 3824 ShenandoahLoadReferenceBarrier. After transformations, a new Region is created, which becomes the backedge. The CountedLoopEnd is still there, but it is no longer the backedge.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5156581">JDK-8355212</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="108612" name="hs_err_pid2371025.log" size="705121" author="rkennke" created="Wed, 13 Mar 2024 09:34:45 -0700"/>
                            <attachment id="108613" name="replay_pid2371025.log" size="205778" author="rkennke" created="Wed, 13 Mar 2024 09:34:45 -0700"/>
                            <attachment id="108634" name="shen.xml" size="5161145" author="jcao" created="Thu, 14 Mar 2024 14:18:00 -0700"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17008"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i35fmb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17305"><![CDATA[b03]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>