<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 09:53:22 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8341715] PPC64: ObjectMonitor::_owner should be reset unconditionally in nmethod unlocking</title>
                <link>https://bugs.openjdk.org/browse/JDK-8341715</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The ObjectMonitor::_owner check in MacroAssembler::compiler_fast_unlock_object() [1] is redundant and should be removed because java code with unbalanced locking is never compiled to nmethods[2].&lt;br/&gt;
&lt;br/&gt;
ObjectMonitor::_owner can be a stack address with LM_LEGACY [3]. In that case the result of the check is wrong. Execution will take unnecessarily the slow path.&lt;br/&gt;
&lt;br/&gt;
[1] Redundant check: &lt;a href=&quot;https://github.com/openjdk/jdk/blob/20f36c666c30e50c446d09cca4ea52395317a7eb/src/hotspot/cpu/ppc/macroAssembler_ppc.cpp#L2700-L2705&quot;&gt;https://github.com/openjdk/jdk/blob/20f36c666c30e50c446d09cca4ea52395317a7eb/src/hotspot/cpu/ppc/macroAssembler_ppc.cpp#L2700-L2705&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
[2] ciMethod::has_balanced_monitors() &lt;a href=&quot;https://github.com/openjdk/jdk/blob/7a1e832ea997f9984eb5fc18474a8f1650ddb1bf/src/hotspot/share/ci/ciMethod.cpp#L290&quot;&gt;https://github.com/openjdk/jdk/blob/7a1e832ea997f9984eb5fc18474a8f1650ddb1bf/src/hotspot/share/ci/ciMethod.cpp#L290&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
[3] _owner can be a stack address: &lt;a href=&quot;https://github.com/openjdk/jdk/blob/a601cd2e100958e3f37ae65e32e4b3cac246c079/src/hotspot/share/runtime/synchronizer.cpp#L1530&quot;&gt;https://github.com/openjdk/jdk/blob/a601cd2e100958e3f37ae65e32e4b3cac246c079/src/hotspot/share/runtime/synchronizer.cpp#L1530&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
Background Info&lt;br/&gt;
&lt;br/&gt;
Also on x86 there used to be a diagnostic locking mode that checked `_owner` field before unlocking to defend against unbalanced locking done using JNI:&lt;br/&gt;
&lt;a href=&quot;https://github.com/openjdk/jdk/blob/84cf73f2a5d39240263bdb500fc98a6ec6590cf0/src/hotspot/cpu/x86/macroAssembler_x86.cpp#L2184&quot;&gt;https://github.com/openjdk/jdk/blob/84cf73f2a5d39240263bdb500fc98a6ec6590cf0/src/hotspot/cpu/x86/macroAssembler_x86.cpp#L2184&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8210381&quot; title=&quot;Obsolete EmitSync&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8210381&quot;&gt;&lt;strike&gt;JDK-8210381&lt;/strike&gt;&lt;/a&gt; removed it in jdk12: &lt;a href=&quot;https://github.com/openjdk/jdk/commit/0f68e5221f4d3cf262f09170c5182f34c6b9cc30&quot;&gt;https://github.com/openjdk/jdk/commit/0f68e5221f4d3cf262f09170c5182f34c6b9cc30&lt;/a&gt;&lt;br/&gt;
Even jdk24 has stale comments refering to it: &lt;a href=&quot;https://github.com/openjdk/jdk/blob/940aa7c4cf1bf770690660c8bb21fb3ddc5186e4/src/hotspot/cpu/x86/c2_MacroAssembler_x86.cpp#L415&quot;&gt;https://github.com/openjdk/jdk/blob/940aa7c4cf1bf770690660c8bb21fb3ddc5186e4/src/hotspot/cpu/x86/c2_MacroAssembler_x86.cpp#L415&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
On ppc64 the owner check didn&amp;#39;t depend on a special EmitSync diagnostic mode so &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8210381&quot; title=&quot;Obsolete EmitSync&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8210381&quot;&gt;&lt;strike&gt;JDK-8210381&lt;/strike&gt;&lt;/a&gt; didn&amp;#39;t remove it. It is unclear why there the check was always done.&lt;br/&gt;
</description>
                <environment></environment>
        <key id="5140937">JDK-8341715</key>
            <summary>PPC64: ObjectMonitor::_owner should be reset unconditionally in nmethod unlocking</summary>
                <type id="7" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14707&amp;avatarType=issuetype">Enhancement</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rrich">Richard Reingruber</assignee>
                                    <reporter username="rrich">Richard Reingruber</reporter>
                        <labels>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>oracle-triage-24</label>
                            <label>oraclejdk-na</label>
                    </labels>
                <created>Tue, 8 Oct 2024 04:42:04 -0700</created>
                <updated>Sun, 8 Dec 2024 23:41:55 -0800</updated>
                            <resolved>Thu, 17 Oct 2024 00:23:54 -0700</resolved>
                                    <version>17</version>
                    <version>21</version>
                    <version>23</version>
                    <version>24</version>
                                    <fixVersion>24</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                                                                <comments>
                            <comment id="14727741" author="roboduke" created="Tue, 3 Dec 2024 05:57:58 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1191&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1191&lt;/a&gt;&lt;br/&gt;
Date: 2024-12-02 16:45:46 +0000</comment>
                            <comment id="14727740" author="rrich" created="Tue, 3 Dec 2024 05:56:32 -0800"  >Fix request (21u)&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;d like to backport this to avoid the inefficiencies of doing the owner check and at times taking the slow path because the check is imprecise.&lt;br/&gt;
The original commit does not apply cleanly because the changed code handles RTM and LM_LIGHTWEIGHT locking which is separate in jdk24.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;d consider the risk low. Aside from the assertions, the change is very small and it just brings ppc64 in line with how unlocking is done on other platforms.&lt;br/&gt;
&lt;br/&gt;
The fix passed our CI testing: JTReg tests: tier1-4 of hotspot and jdk. All of Langtools and jaxp. JCK, SPECjvm2008, SPECjbb2015, Renaissance Suite, and SAP specific tests.&lt;br/&gt;
Testing was done with fastdebug builds on the main platforms and also on Linux/PPC64le and AIX.</comment>
                            <comment id="14714394" author="dukebot" created="Thu, 17 Oct 2024 00:23:53 -0700"  >Changeset: f9208fad&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Richard Reingruber &amp;lt;&lt;a href=&apos;mailto:rrich@openjdk.org&apos;&gt;rrich@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-10-17 07:21:42 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/f9208fadde8141e18a025ddb6ce28423861ba391&quot;&gt;https://git.openjdk.org/jdk/commit/f9208fadde8141e18a025ddb6ce28423861ba391&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14712895" author="roboduke" created="Mon, 14 Oct 2024 23:55:27 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/21494&quot;&gt;https://git.openjdk.org/jdk/pull/21494&lt;/a&gt;&lt;br/&gt;
Date: 2024-10-14 13:14:52 +0000</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5145697">JDK-8345771</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17024"><![CDATA[ppc]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17010"><![CDATA[generic]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i38817:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17351"><![CDATA[b20]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>