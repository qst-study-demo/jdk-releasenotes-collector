<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 09:35:20 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8320916] jdk/jfr/event/gc/stacktrace/TestParallelMarkSweepAllocationPendingStackTrace.java failed with &quot;OutOfMemoryError: GC overhead limit exceeded&quot;</title>
                <link>https://bugs.openjdk.org/browse/JDK-8320916</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>The following test failed in the JDK22 CI:&lt;br/&gt;
&lt;br/&gt;
jdk/jfr/event/gc/stacktrace/TestParallelMarkSweepAllocationPendingStackTrace.java&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s a snippet from the log file:&lt;br/&gt;
&lt;br/&gt;
#section:main&lt;br/&gt;
----------messages:(7/558)----------&lt;br/&gt;
command: main -XX:MaxNewSize=10M -Xmx64M -XX:+UseParallelGC -Xlog:gc* jdk.jfr.event.gc.stacktrace.TestParallelMarkSweepAllocationPendingStackTrace&lt;br/&gt;
reason: User specified action: run main/othervm -XX:MaxNewSize=10M -Xmx64M -XX:+UseParallelGC -Xlog:gc* jdk.jfr.event.gc.stacktrace.TestParallelMarkSweepAllocationPendingStackTrace &lt;br/&gt;
started: Tue Nov 28 14:42:35 GMT 2023&lt;br/&gt;
Mode: othervm [/othervm specified]&lt;br/&gt;
Additional options from @modules: --add-modules jdk.jfr,java.management,jdk.management&lt;br/&gt;
finished: Tue Nov 28 14:42:38 GMT 2023&lt;br/&gt;
elapsed time (seconds): 3.116&lt;br/&gt;
----------configuration:(3/66)----------&lt;br/&gt;
&lt;br/&gt;
&amp;lt;snip&amp;gt;&lt;br/&gt;
&lt;br/&gt;
[3.047s][info][gc,heap        ] GC(55) PSYoungGen: 4096K(7168K)-&amp;gt;2394K(7168K) Eden: 4096K(4096K)-&amp;gt;2394K(4096K) From: 0K(3072K)-&amp;gt;0K(3072K)&lt;br/&gt;
[3.047s][info][gc,heap        ] GC(55) ParOldGen: 54863K(55296K)-&amp;gt;54894K(55296K)&lt;br/&gt;
[3.047s][info][gc,metaspace   ] GC(55) Metaspace: 6549K(6912K)-&amp;gt;6547K(6912K) NonClass: 5863K(6080K)-&amp;gt;5861K(6080K) Class: 685K(832K)-&amp;gt;685K(832K)&lt;br/&gt;
[3.047s][info][gc             ] GC(55) Pause Full (Ergonomics) 57M-&amp;gt;55M(61M) 30.770ms&lt;br/&gt;
[3.047s][info][gc,cpu         ] GC(55) User=0.05s Sys=0.00s Real=0.03s&lt;br/&gt;
[3.059s][info][gc,heap,exit   ] Heap&lt;br/&gt;
[3.059s][info][gc,heap,exit   ]  PSYoungGen      total 7168K, used 2621K [0x00000007ff600000, 0x0000000800000000, 0x0000000800000000)&lt;br/&gt;
[3.059s][info][gc,heap,exit   ]   eden space 4096K, 63% used [0x00000007ff600000,0x00000007ff88f440,0x00000007ffa00000)&lt;br/&gt;
[3.059s][info][gc,heap,exit   ]   from space 3072K, 0% used [0x00000007ffa00000,0x00000007ffa00000,0x00000007ffd00000)&lt;br/&gt;
[3.059s][info][gc,heap,exit   ]   to   space 3072K, 0% used [0x00000007ffd00000,0x00000007ffd00000,0x0000000800000000)&lt;br/&gt;
[3.059s][info][gc,heap,exit   ]  ParOldGen       total 55296K, used 54894K [0x00000007fc000000, 0x00000007ff600000, 0x00000007ff600000)&lt;br/&gt;
[3.059s][info][gc,heap,exit   ]   object space 55296K, 99% used [0x00000007fc000000,0x00000007ff59ba90,0x00000007ff600000)&lt;br/&gt;
[3.059s][info][gc,heap,exit   ]  Metaspace       used 6601K, committed 6976K, reserved 1114112K&lt;br/&gt;
[3.059s][info][gc,heap,exit   ]   class space    used 696K, committed 896K, reserved 1048576K&lt;br/&gt;
----------System.err:(38/2923)----------&lt;br/&gt;
java.lang.OutOfMemoryError: GC overhead limit exceeded&lt;br/&gt;
	at java.base/jdk.internal.util.ReferencedKeyMap.lookupKey(ReferencedKeyMap.java:176)&lt;br/&gt;
	at java.base/jdk.internal.util.ReferencedKeyMap.get(ReferencedKeyMap.java:209)&lt;br/&gt;
	at java.base/jdk.internal.util.ReferencedKeySet.get(ReferencedKeySet.java:173)&lt;br/&gt;
	at java.base/java.lang.invoke.MethodType.makeImpl(MethodType.java:401)&lt;br/&gt;
	at java.base/java.lang.invoke.MethodType.methodType(MethodType.java:382)&lt;br/&gt;
	at java.base/java.lang.invoke.MethodTypeForm.canonicalize(MethodTypeForm.java:253)&lt;br/&gt;
	at java.base/java.lang.invoke.MethodTypeForm.findForm(MethodTypeForm.java:220)&lt;br/&gt;
	at java.base/java.lang.invoke.MethodType.makeImpl(MethodType.java:416)&lt;br/&gt;
	at java.base/java.lang.invoke.MethodType.methodType(MethodType.java:382)&lt;br/&gt;
	at java.base/java.lang.invoke.MethodType.changeReturnType(MethodType.java:704)&lt;br/&gt;
	at java.base/java.lang.invoke.InnerClassLambdaMetafactory.&amp;lt;init&amp;gt;(InnerClassLambdaMetafactory.java:174)&lt;br/&gt;
	at java.base/java.lang.invoke.LambdaMetafactory.metafactory(LambdaMetafactory.java:336)&lt;br/&gt;
	at java.base/java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(DirectMethodHandle$Holder)&lt;br/&gt;
	at java.base/java.lang.invoke.Invokers$Holder.invokeExact_MT(Invokers$Holder)&lt;br/&gt;
	at java.base/java.lang.invoke.BootstrapMethodInvoker.invoke(BootstrapMethodInvoker.java:134)&lt;br/&gt;
	at java.base/java.lang.invoke.CallSite.makeSite(CallSite.java:316)&lt;br/&gt;
	at java.base/java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:275)&lt;br/&gt;
	at java.base/java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:265)&lt;br/&gt;
	at jdk.jfr/jdk.jfr.internal.consumer.ConstantMap.resolve(ConstantMap.java:131)&lt;br/&gt;
	at jdk.jfr/jdk.jfr.internal.consumer.ChunkParser.lambda$new$2(ChunkParser.java:143)&lt;br/&gt;
	at jdk.jfr/jdk.jfr.internal.consumer.ChunkParser$$Lambda/0x00000001250adc58.accept(Unknown Source)&lt;br/&gt;
	at jdk.jfr/jdk.jfr.internal.LongMap.forEach(LongMap.java:246)&lt;br/&gt;
	at jdk.jfr/jdk.jfr.internal.consumer.ChunkParser.&amp;lt;init&amp;gt;(ChunkParser.java:143)&lt;br/&gt;
	at jdk.jfr/jdk.jfr.internal.consumer.ChunkParser.&amp;lt;init&amp;gt;(ChunkParser.java:109)&lt;br/&gt;
	at jdk.jfr/jdk.jfr.internal.consumer.ChunkParser.&amp;lt;init&amp;gt;(ChunkParser.java:105)&lt;br/&gt;
	at jdk.jfr/jdk.jfr.consumer.RecordingFile.createChunkParser(RecordingFile.java:318)&lt;br/&gt;
	at jdk.jfr/jdk.jfr.consumer.RecordingFile.findNext(RecordingFile.java:294)&lt;br/&gt;
	at jdk.jfr/jdk.jfr.consumer.RecordingFile.&amp;lt;init&amp;gt;(RecordingFile.java:89)&lt;br/&gt;
	at jdk.jfr/jdk.jfr.consumer.RecordingFile.readAllEvents(RecordingFile.java:271)&lt;br/&gt;
	at jdk.test.lib.jfr.Events.fromRecording(Events.java:275)&lt;br/&gt;
	at jdk.jfr.event.gc.stacktrace.AllocationStackTrace.allocAndCheck(AllocationStackTrace.java:386)&lt;br/&gt;
	at jdk.jfr.event.gc.stacktrace.AllocationStackTrace.testAllocEvent(AllocationStackTrace.java:343)&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test threw exception: java.lang.OutOfMemoryError: GC overhead limit exceeded&lt;br/&gt;
JavaTest Message: shutting down test&lt;br/&gt;
&lt;br/&gt;
STATUS:Failed.`main&amp;#39; threw exception: java.lang.OutOfMemoryError: GC overhead limit exceeded&lt;br/&gt;
----------rerun:(41/8701)*----------</description>
                <environment></environment>
        <key id="5115646">JDK-8320916</key>
            <summary>jdk/jfr/event/gc/stacktrace/TestParallelMarkSweepAllocationPendingStackTrace.java failed with &quot;OutOfMemoryError: GC overhead limit exceeded&quot;</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="ayang">Albert Yang</assignee>
                                    <reporter username="dcubed">Daniel Daugherty</reporter>
                        <labels>
                            <label>intermittent</label>
                            <label>jdk11u-fix-request</label>
                            <label>jdk11u-fix-yes</label>
                            <label>jdk17u-fix-request</label>
                            <label>jdk17u-fix-yes</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>noreg-self</label>
                            <label>tier3</label>
                            <label>tier5</label>
                            <label>tier8</label>
                    </labels>
                <created>Tue, 28 Nov 2023 08:57:57 -0800</created>
                <updated>Thu, 20 Feb 2025 17:53:34 -0800</updated>
                            <resolved>Thu, 30 Nov 2023 07:50:20 -0800</resolved>
                                    <version>22</version>
                                    <fixVersion>22</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14731517" author="roboduke" created="Thu, 12 Dec 2024 04:24:53 -0800"  >[jdk21u-fix-request] Approval Request from sendaoYan&lt;br/&gt;
Test bug fix to make test more robustness, test-fix only, no risk.</comment>
                            <comment id="14731516" author="roboduke" created="Thu, 12 Dec 2024 04:24:27 -0800"  >[jdk11u-fix-request] Approval Request from sendaoYan&lt;br/&gt;
Test bug fix to make test more robustness, test-fix only, no risk.</comment>
                            <comment id="14731515" author="roboduke" created="Thu, 12 Dec 2024 04:24:23 -0800"  >[jdk17u-fix-request] Approval Request from sendaoYan&lt;br/&gt;
Test bug fix to make test more robustness, test-fix only, no risk.</comment>
                            <comment id="14731294" author="roboduke" created="Wed, 11 Dec 2024 19:17:18 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk11u-dev/pull/2976&quot;&gt;https://git.openjdk.org/jdk11u-dev/pull/2976&lt;/a&gt;&lt;br/&gt;
Date: 2024-12-12 03:11:41 +0000</comment>
                            <comment id="14731293" author="roboduke" created="Wed, 11 Dec 2024 19:14:59 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk17u-dev/pull/3109&quot;&gt;https://git.openjdk.org/jdk17u-dev/pull/3109&lt;/a&gt;&lt;br/&gt;
Date: 2024-12-12 03:09:23 +0000</comment>
                            <comment id="14731292" author="roboduke" created="Wed, 11 Dec 2024 19:14:42 -0800"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1224&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1224&lt;/a&gt;&lt;br/&gt;
Date: 2024-12-12 03:09:21 +0000</comment>
                            <comment id="14630374" author="dcubed" created="Thu, 30 Nov 2023 08:23:29 -0800"  >The fix for this bug is integrated in jdk-22+27-2131.</comment>
                            <comment id="14630353" author="dukebot" created="Thu, 30 Nov 2023 07:50:14 -0800"  >Changeset: 69384745&lt;br/&gt;
Author:    Albert Mingkun Yang &amp;lt;&lt;a href=&apos;mailto:ayang@openjdk.org&apos;&gt;ayang@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2023-11-30 15:48:00 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/693847452f208446a34186f142fe2c56a49ceceb&quot;&gt;https://git.openjdk.org/jdk/commit/693847452f208446a34186f142fe2c56a49ceceb&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14629698" author="roboduke" created="Tue, 28 Nov 2023 16:42:25 -0800"  >A pull request was submitted for review.&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/16870&quot;&gt;https://git.openjdk.org/jdk/pull/16870&lt;/a&gt;&lt;br/&gt;
Date: 2023-11-29 00:35:47 +0000</comment>
                            <comment id="14629654" author="ayang" created="Tue, 28 Nov 2023 12:46:10 -0800"  >&lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8319713&quot; title=&quot;Parallel: Remove PSAdaptiveSizePolicy::should_full_GC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8319713&quot;&gt;&lt;strike&gt;JDK-8319713&lt;/strike&gt;&lt;/a&gt; removes the too-conservative Full GC, so this test needs to allocate a bit more to trigger a Full GC, which leaves less free memory for collecting and verifying jfr events. A easy fix is to reduce the live set.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5146197">JDK-8346155</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5146198">JDK-8346156</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5151132">JDK-8350467</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5114311">JDK-8319713</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19000"><![CDATA[x86_64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17017"><![CDATA[os_x]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i340y3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17419"><![CDATA[b27]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="374"><![CDATA[jfr]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>