<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 10:48:51 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8346888] [ubsan] block.cpp:1617:30: runtime error: 9.97582e+36 is outside the range of representable values of type &apos;int&apos;</title>
                <link>https://bugs.openjdk.org/browse/JDK-8346888</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>When running jtreg tests on macOS aarch64 with ubsanized binaries, in the test&lt;br/&gt;
java/foreign/TestHandshake&lt;br/&gt;
this error/warning is reported :&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
jdk/src/hotspot/share/opto/block.cpp:1617:30: runtime error: 9.97582e+36 is outside the range of representable values of type &amp;#39;int&amp;#39;&lt;br/&gt;
UndefinedBehaviorSanitizer:DEADLYSIGNAL&lt;br/&gt;
UndefinedBehaviorSanitizer: nested bug in the same thread, aborting.&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
seems it happens in this calculation (float value does not fit into an int)  :  int to_pct = (int) ((100 * freq) / target-&amp;gt;_freq);</description>
                <environment></environment>
        <key id="5147079">JDK-8346888</key>
            <summary>[ubsan] block.cpp:1617:30: runtime error: 9.97582e+36 is outside the range of representable values of type &apos;int&apos;</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="5" iconUrl="https://bugs.openjdk.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="mbaesken">Matthias Baesken</assignee>
                                    <reporter username="mbaesken">Matthias Baesken</reporter>
                        <labels>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>jdk24u-fix-SQE-ok</label>
                            <label>jdk24u-fix-request</label>
                            <label>jdk24u-fix-yes</label>
                            <label>oracle-triage-25</label>
                            <label>starter</label>
                    </labels>
                <created>Mon, 30 Dec 2024 10:01:46 -0800</created>
                <updated>Tue, 22 Apr 2025 03:35:52 -0700</updated>
                            <resolved>Fri, 28 Mar 2025 01:22:26 -0700</resolved>
                                    <version>21</version>
                    <version>24</version>
                    <version>25</version>
                                    <fixVersion>25</fixVersion>
                                    <component>hotspot</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                                                                <comments>
                            <comment id="14766750" author="roboduke" created="Thu, 3 Apr 2025 03:59:57 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1583&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1583&lt;/a&gt;&lt;br/&gt;
Date: 2025-04-03 10:51:04 +0000</comment>
                            <comment id="14766746" author="roboduke" created="Thu, 3 Apr 2025 03:51:06 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk24u/pull/177&quot;&gt;https://git.openjdk.org/jdk24u/pull/177&lt;/a&gt;&lt;br/&gt;
Date: 2025-04-03 10:43:36 +0000</comment>
                            <comment id="14766743" author="mbaesken" created="Thu, 3 Apr 2025 03:45:42 -0700"  >jdk24u backport request&lt;br/&gt;
I would like to have the patch in jdk24u as well, because the issue is present there too. The backport is clean and low risk.</comment>
                            <comment id="14764971" author="dukebot" created="Fri, 28 Mar 2025 01:22:25 -0700"  >Changeset: ddf326b8&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Matthias Baesken &amp;lt;&lt;a href=&apos;mailto:mbaesken@openjdk.org&apos;&gt;mbaesken@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2025-03-28 08:19:20 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/ddf326b8e6e50403303b410635e4c26d7bf56aaa&quot;&gt;https://git.openjdk.org/jdk/commit/ddf326b8e6e50403303b410635e4c26d7bf56aaa&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14759227" author="roboduke" created="Mon, 10 Mar 2025 06:44:43 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/23962&quot;&gt;https://git.openjdk.org/jdk/pull/23962&lt;/a&gt;&lt;br/&gt;
Date: 2025-03-10 13:37:23 +0000</comment>
                            <comment id="14758975" author="dlong" created="Fri, 7 Mar 2025 14:22:35 -0800"  >I came to the same conclusion, that using floats that can become infinity was better than checking for overlow/saturation on ints, which looking into &lt;a href=&quot;https://bugs.openjdk.org/browse/JDK-8306481&quot; title=&quot;Better handling of saturated values in Parse::dynamic_branch_prediction&quot; class=&quot;issue-link&quot; data-issue-key=&quot;JDK-8306481&quot;&gt;JDK-8306481&lt;/a&gt;.</comment>
                            <comment id="14758710" author="mbaesken" created="Fri, 7 Mar 2025 00:20:28 -0800"  >&amp;gt; I guess we could do that. I&amp;#39;m wondering though, if `from_pct` and `to_pct` should not just be floats as well.&lt;br/&gt;
&lt;br/&gt;
looks like these values are in the end compared to BlockLayoutMinDiamondPercentage which is an intx :&lt;br/&gt;
765    int  from_infrequent() const { return from_pct() &amp;lt; BlockLayoutMinDiamondPercentage; }&lt;br/&gt;
766    int  to_infrequent()   const { return to_pct()   &amp;lt; BlockLayoutMinDiamondPercentage; }&lt;br/&gt;
&lt;br/&gt;
I am not very familiar with this coding; should we maybe cast BlockLayoutMinDiamondPercentage  to float (or make it a float?)   and  then make `from_pct` and `to_pct&amp;#39;  float too?</comment>
                            <comment id="14758707" author="chagedorn" created="Thu, 6 Mar 2025 23:53:12 -0800"  >&amp;gt; Hi [~chagedorn] should we add a check and set the value to MAXINT in case it overflows ?&lt;br/&gt;
&lt;br/&gt;
I guess we could do that. I&amp;#39;m wondering though, if `from_pct` and `to_pct` should not just be floats as well.&lt;br/&gt;
&lt;br/&gt;
</comment>
                            <comment id="14758478" author="mbaesken" created="Thu, 6 Mar 2025 00:43:24 -0800"  >Seems java/text/Format/CompactNumberFormat/SPIProviderTest  triggers a similar issue (also on macosaarch64 with ubsan enabled) :&lt;br/&gt;
&lt;br/&gt;
src/hotspot/share/opto/block.cpp:1616:30: runtime error: 1.416e+33 is outside the range of representable values of type &amp;#39;int&amp;#39;&lt;br/&gt;
STATUS:Passed.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#0 0x108f59970 in PhaseBlockLayout::find_edges() block.cpp:1616&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#1 0x108f5be44 in PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;amp;) block.cpp:1832&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#2 0x108f5c1a0 in PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;amp;) block.cpp:1812&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#3 0x10920b3b8 in Compile::Code_Gen() compile.cpp:2988&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#4 0x109208250 in Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*) compile.cpp:881&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#5 0x10920b4fc in Compile::Compile(ciEnv*, ciMethod*, int, Options, DirectiveSet*) compile.cpp:683&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#6 0x109094e3c in C2Compiler::compile_method(ciEnv*, ciMethod*, int, bool, DirectiveSet*) c2compiler.cpp:141&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#7 0x10922e57c in CompileBroker::invoke_compiler_on_method(CompileTask*) compileBroker.cpp:2331&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#8 0x10922db64 in CompileBroker::compiler_thread_loop() compileBroker.cpp:1975&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#9 0x109840b18 in JavaThread::thread_main_inner() javaThread.cpp:776&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#10 0x10a211298 in Thread::call_run() thread.cpp:231&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#11 0x109daa890 in thread_native_entry(Thread*) os_bsd.cpp:601&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#12 0x1936fef90 in _pthread_start+0x84 (libsystem_pthread.dylib:arm64e+0x6f90)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#13 0x1936f9d30 in thread_start+0x4 (libsystem_pthread.dylib:arm64e+0x1d30)</comment>
                            <comment id="14758477" author="mbaesken" created="Thu, 6 Mar 2025 00:40:22 -0800"  >Hi [~chagedorn]  should we add a check and set the value to MAXINT in case it overflows ?</comment>
                            <comment id="14735894" author="chagedorn" created="Sun, 5 Jan 2025 23:26:43 -0800"  >Initial ILW = Int variable overflowed, no wrong execution/behavior observed, possibly disable compilation of affected method = MLM = P4</comment>
                            <comment id="14735559" author="mbaesken" created="Thu, 2 Jan 2025 06:44:44 -0800"  >Similar issue :&lt;br/&gt;
test jdk/jfr/jvm/TestGetEventWriter.java#default    (macOS aarch64)&lt;br/&gt;
&lt;br/&gt;
jdk/src/hotspot/share/opto/block.cpp:1617:30: runtime error: 9e+36 is outside the range of representable values of type &amp;#39;int&amp;#39;&lt;br/&gt;
UndefinedBehaviorSanitizer:DEADLYSIGNAL&lt;br/&gt;
UndefinedBehaviorSanitizer: nested bug in the same thread, aborting.&lt;br/&gt;
&lt;br/&gt;
compiler/escapeAnalysis/TestInvalidLocation.java   (macOS aarch64)&lt;br/&gt;
jdk/src/hotspot/share/opto/block.cpp:1617:30: runtime error: 3.64498e+36 is outside the range of representable values of type &amp;#39;int&amp;#39;&lt;br/&gt;
UndefinedBehaviorSanitizer:DEADLYSIGNAL</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5154864">JDK-8353705</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5155028">JDK-8353853</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5086811">JDK-8296389</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5154126">JDK-8353041</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="4296320">JDK-6510732</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10000" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>CPU</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="19300"><![CDATA[aarch64]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17017"><![CDATA[os_x]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i398dn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17417"><![CDATA[b17]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="208"><![CDATA[compiler]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>