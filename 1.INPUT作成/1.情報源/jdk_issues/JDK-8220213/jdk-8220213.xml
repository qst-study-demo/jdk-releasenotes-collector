<!-- 
RSS generated by JIRA (9.12.27#9120027-sha1:edc4490121e366e9e7bd2213d532dbe7e028fc5d) at Sat Sep 27 10:08:16 UTC 2025

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary append 'field=key&field=summary' to the URL of your request.
-->
<rss version="0.92" >
<channel>
    <title>Java Bug System</title>
    <link>https://bugs.openjdk.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>9.12.27</version>
        <build-number>9120027</build-number>
        <build-date>02-09-2025</build-date>
    </build-info>


<item>
            <title>[JDK-8220213] com/sun/jndi/dns/ConfigTests/Timeout.java failed intermittent</title>
                <link>https://bugs.openjdk.org/browse/JDK-8220213</link>
                <project id="10100" key="JDK">JDK</project>
                    <description>----------System.err:(15/852)----------&lt;br/&gt;
java.lang.RuntimeException: Failed: timeout in 7749 ms, expected7750ms&lt;br/&gt;
	at Timeout.handleException(Timeout.java:108)&lt;br/&gt;
	at TestBase.launch(TestBase.java:84)&lt;br/&gt;
	at TestBase.run(TestBase.java:50)&lt;br/&gt;
	at Timeout.main(Timeout.java:61)&lt;br/&gt;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run(MainActionHelper.java:298)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:835)&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test threw exception: java.lang.RuntimeException&lt;br/&gt;
JavaTest Message: shutting down test&lt;br/&gt;
&lt;br/&gt;
result: Failed. Execution failed: `main&amp;#39; threw exception: java.lang.RuntimeException: Failed: timeout in 7749 ms, expected7750ms</description>
                <environment></environment>
        <key id="4985005">JDK-8220213</key>
            <summary>com/sun/jndi/dns/ConfigTests/Timeout.java failed intermittent</summary>
                <type id="1" iconUrl="https://bugs.openjdk.org/secure/viewavatar?size=xsmall&amp;avatarId=14703&amp;avatarType=issuetype">Bug</type>
                                            <priority id="4" iconUrl="https://bugs.openjdk.org/images/jbsImages/p4.png">P4</priority>
                        <status id="6" iconUrl="https://bugs.openjdk.org/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="success"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="aefimov">Aleksej Efimov</assignee>
                                    <reporter username="xyin">Chris Yin</reporter>
                        <labels>
                            <label>amazon-interest</label>
                            <label>intermittent</label>
                            <label>jdk21u-fix-request</label>
                            <label>jdk21u-fix-yes</label>
                            <label>same-binary</label>
                            <label>tier2</label>
                    </labels>
                <created>Tue, 5 Mar 2019 19:22:20 -0800</created>
                <updated>Tue, 8 Apr 2025 01:27:07 -0700</updated>
                            <resolved>Thu, 10 Oct 2024 08:59:38 -0700</resolved>
                                    <version>11</version>
                    <version>13</version>
                    <version>17</version>
                    <version>20</version>
                    <version>21</version>
                    <version>22</version>
                    <version>23</version>
                                    <fixVersion>24</fixVersion>
                                    <component>core-libs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>12</watches>
                                                                                                                                                            <comments>
                            <comment id="14766465" author="roboduke" created="Wed, 2 Apr 2025 14:51:27 -0700"  >[jdk21u-fix-request] Approval Request from Paul Hohensee&lt;br/&gt;
Backport for parity with Oracle 21.0.8. Tier2 (includes jndi/dns tests) and modified/new tests pass. Low risk: DnsClient and Timeout test modified to use nano clock, Timeout test modified to increase allowed allowed difference between observed and actual timeout.</comment>
                            <comment id="14766382" author="roboduke" created="Wed, 2 Apr 2025 09:45:58 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk21u-dev/pull/1575&quot;&gt;https://git.openjdk.org/jdk21u-dev/pull/1575&lt;/a&gt;&lt;br/&gt;
Date: 2025-04-02 16:36:05 +0000</comment>
                            <comment id="14711931" author="dukebot" created="Thu, 10 Oct 2024 08:59:37 -0700"  >Changeset: 4beb7719&lt;br/&gt;
Branch: master&lt;br/&gt;
Author:    Aleksei Efimov &amp;lt;&lt;a href=&apos;mailto:aefimov@openjdk.org&apos;&gt;aefimov@openjdk.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
Date:      2024-10-10 15:56:04 +0000&lt;br/&gt;
URL:       &lt;a href=&quot;https://git.openjdk.org/jdk/commit/4beb77192f54f27183285400d7cae7528df64e43&quot;&gt;https://git.openjdk.org/jdk/commit/4beb77192f54f27183285400d7cae7528df64e43&lt;/a&gt;&lt;br/&gt;
</comment>
                            <comment id="14711635" author="roboduke" created="Wed, 9 Oct 2024 10:28:22 -0700"  >A pull request was submitted for review.&lt;br/&gt;
Branch: master&lt;br/&gt;
URL: &lt;a href=&quot;https://git.openjdk.org/jdk/pull/20892&quot;&gt;https://git.openjdk.org/jdk/pull/20892&lt;/a&gt;&lt;br/&gt;
Date: 2024-09-06 16:28:36 +0000</comment>
                            <comment id="14616726" author="msheppar" created="Mon, 9 Oct 2023 07:08:07 -0700"  >The expectation in this test is that the timeout should be equal to or slightly greater than the expects 7750msec&lt;br/&gt;
This is 5 retries for an initial timeout of 250msecs, and a backoff protocol of doubling the timeout for each retry.&lt;br/&gt;
&lt;br/&gt;
each receive is an invovation of blockingReceive from the DnsClient.doUdpQuery method, as in the extract below shows. &lt;br/&gt;
&amp;nbsp;MIN_TIMEOUT == 50 msecs&lt;br/&gt;
&amp;nbsp;the calculated timeoutLeft = pktTimeout - ((int) (end - start));&lt;br/&gt;
The significant conditional in the receive loop is  timeoutLeft  &amp;gt;  MIN_TIMEOUT&lt;br/&gt;
So if the select call in the blockingReceive were to return slightly early (early bird catches the worm) then end - start could be less than the select timeout,  i.e. &amp;lt; pktTimeout. thus  pktTimeout - ((int) (end - start))  is  &amp;lt;= MIN_TIMEOUT.  Then theorectically the test actual time could be as much as 250 msecs off e.g. 7750 - 250 == 7500 and then adding in additional processing overhead in the retry mechanism and the test execution overhead the execution time could be less than the expected 7750&lt;br/&gt;
&lt;br/&gt;
Typically the blockingReceive takes longer than the specified timeout for each iteration. But, the timeout calculations allow for an earlier than exepcted timeout, and the possibility of timeoutLeft  &amp;gt;  MIN_TIMEOUT occuring is not reflected in the tests calculation for the elapsed time i.e.&lt;br/&gt;
&lt;br/&gt;
if (elapsedTime.compareTo(expectedTime) &amp;gt;= 0 &amp;amp;&amp;amp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;elapsedTime.multipliedBy(2)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.compareTo(expectedTime.multipliedBy(3)) &amp;lt;= 0) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;elapsed time is as long as expected.&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return true;&lt;br/&gt;
&lt;br/&gt;
the elapsedTime.compareTo(expectedTime)  should allow for the MIN_TIMEOUT tolerance in the DnsClient::doUdpQuery&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
extract from DnsClient::doUdpQuery&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;do {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// prepare for retry&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (gotData) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Arrays.fill(data, 0, ipkt.position(), (byte) 0);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ipkt.clear();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (debug) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cnt++;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dprint(&amp;quot;Trying RECEIVE(&amp;quot; +&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cnt + &amp;quot;) retry(&amp;quot; + (retry + 1) +&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;) for:&amp;quot; + xid + &amp;quot;    sock-timeout:&amp;quot; +&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;timeoutLeft + &amp;quot; ms.&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long start = System.currentTimeMillis();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gotData = blockingReceive(udpChannel, ipkt, timeoutLeft);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long end = System.currentTimeMillis();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assert gotData || ipkt.position() == 0;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (gotData &amp;amp;&amp;amp; isMatchResponse(data, xid)) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return data;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else if (resps.size() &amp;gt; 0) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// If the matching response is not found, check if&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// the response was enqueued by some other thread,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// if not continue&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;byte[] cachedMsg = lookupResponse(xid);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (cachedMsg != null) { // found in cache&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return cachedMsg;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;timeoutLeft = pktTimeout - ((int) (end - start));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} while (timeoutLeft &amp;gt; MIN_TIMEOUT);</comment>
                            <comment id="14571125" author="dcubed" created="Sun, 2 Apr 2023 07:10:08 -0700"  >Here&amp;#39;s a log file snippet from the jdk-21+17-1363-tier2 sighting:&lt;br/&gt;
&lt;br/&gt;
com/sun/jndi/dns/ConfigTests/Timeout.java&lt;br/&gt;
&lt;br/&gt;
#section:main&lt;br/&gt;
----------messages:(8/285)----------&lt;br/&gt;
command: main Timeout&lt;br/&gt;
reason: User specified action: run main Timeout &lt;br/&gt;
started: Sun Apr 02 07:56:32 GMT 2023&lt;br/&gt;
Mode: agentvm&lt;br/&gt;
Agent id: 8&lt;br/&gt;
Additional exports to unnamed modules from @modules: java.base/sun.security.util&lt;br/&gt;
finished: Sun Apr 02 07:56:39 GMT 2023&lt;br/&gt;
elapsed time (seconds): 7.284&lt;br/&gt;
----------configuration:(17/2492)----------&lt;br/&gt;
&lt;br/&gt;
&amp;lt;snip&amp;gt;&lt;br/&gt;
&lt;br/&gt;
----------System.out:(3/72)----------&lt;br/&gt;
Skip local DNS Server creation &lt;br/&gt;
Elapsed (ms):  7257&lt;br/&gt;
Expected (ms): 7750&lt;br/&gt;
----------System.err:(13/651)----------&lt;br/&gt;
java.lang.RuntimeException: Failed: timeout in 7257 ms, expected7750ms&lt;br/&gt;
	at Timeout.handleException(Timeout.java:116)&lt;br/&gt;
	at TestBase.launch(TestBase.java:84)&lt;br/&gt;
	at TestBase.run(TestBase.java:50)&lt;br/&gt;
	at Timeout.main(Timeout.java:59)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run(MainActionHelper.java:312)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1623)&lt;br/&gt;
&lt;br/&gt;
JavaTest Message: Test threw exception: java.lang.RuntimeException&lt;br/&gt;
JavaTest Message: shutting down test&lt;br/&gt;
&lt;br/&gt;
result: Failed. Execution failed: `main&amp;#39; threw exception: java.lang.RuntimeException: Failed: timeout in 7257 ms, expected7750ms</comment>
                            <comment id="14545888" author="msheppar" created="Thu, 15 Dec 2022 16:41:26 -0800"  >It&amp;#39;s the DnsClient.doUdpQuery that sets the select timeout for the DatagramChannel UDP send and receive and that&amp;#39;s part of the getAttributes invocation on the InitalDirContext This is the call stack when it sets the timeout for the receive.&lt;br/&gt;
&lt;br/&gt;
DNS: SEND ID (1): 24872&lt;br/&gt;
DNS: Trying RECEIVE(1) retry(1) for:24872    sock-timeout:250 ms.&lt;br/&gt;
java.lang.Exception: Stack trace&lt;br/&gt;
	at java.base/java.lang.Thread.dumpStack(Thread.java:2201)&lt;br/&gt;
	at jdk.naming.dns/com.sun.jndi.dns.DnsClient.blockingReceive(DnsClient.java:482)&lt;br/&gt;
	at jdk.naming.dns/com.sun.jndi.dns.DnsClient.doUdpQuery(DnsClient.java:457)&lt;br/&gt;
	at jdk.naming.dns/com.sun.jndi.dns.DnsClient.query(DnsClient.java:244)&lt;br/&gt;
	at jdk.naming.dns/com.sun.jndi.dns.Resolver.query(Resolver.java:81)&lt;br/&gt;
	at jdk.naming.dns/com.sun.jndi.dns.DnsContext.c_getAttributes(DnsContext.java:434)&lt;br/&gt;
	at java.naming/com.sun.jndi.toolkit.ctx.ComponentDirContext.p_getAttributes(ComponentDirContext.java:236)&lt;br/&gt;
	at java.naming/com.sun.jndi.toolkit.ctx.PartialCompositeDirContext.getAttributes(PartialCompositeDirContext.java:141)&lt;br/&gt;
	at java.naming/com.sun.jndi.toolkit.ctx.PartialCompositeDirContext.getAttributes(PartialCompositeDirContext.java:129)&lt;br/&gt;
	at java.naming/javax.naming.directory.InitialDirContext.getAttributes(InitialDirContext.java:177)&lt;br/&gt;
	at java.naming/javax.naming.directory.InitialDirContext.getAttributes(InitialDirContext.java:172)&lt;br/&gt;
	at Timeout.runTest(Timeout.java:86)&lt;br/&gt;
	at TestBase.launch(TestBase.java:82)&lt;br/&gt;
	at TestBase.run(TestBase.java:50)&lt;br/&gt;
	at Timeout.main(Timeout.java:59)&lt;br/&gt;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)&lt;br/&gt;
	at com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run(MainActionHelper.java:312)&lt;br/&gt;
	at java.base/java.lang.Thread.run(Thread.java:1591)&lt;br/&gt;
&lt;br/&gt;
It&amp;#39;s the InitialDirContext.getAttributes that&amp;#39;s the genesis, which is after the start time has been recorded.</comment>
                            <comment id="14545875" author="dholmes" created="Thu, 15 Dec 2022 16:05:04 -0800"  >Are we sure the start time is not set after the operations have commenced?</comment>
                            <comment id="14545754" author="msheppar" created="Thu, 15 Dec 2022 08:15:36 -0800"  >&lt;br/&gt;
if the actual timeout is less than the expected timeout then this would allude to an issue with Selector. The scenario is that the client is communicating with a &amp;quot;ghost&amp;quot; endpoint i.e. a server that does exists, but does not respond and  as such no response is received. Thus, for retry == 5 and timeout of 250, the DncClient appears to apply a backoff policy of doubling the last timeout =&amp;gt; 250 + 500 + 1000 + 2000 + 4000 == 7750, and if  the actual elapse test time is less than this expected cumulative value, then it woul have to be because the Selector::select(timeout) returns before the supplied timeout value of a select call.&lt;br/&gt;
&lt;br/&gt;
There is a debug flag in the DnsClient which, if set, would give a runtime indication of the expiry times of each select during the test. Enabling this increases the execution time of the test, but not that of the actual Selector::select&lt;br/&gt;
&lt;br/&gt;
DNS: SEND ID (1): 44650&lt;br/&gt;
DNS: Trying RECEIVE(1) retry(1) for:44650    sock-timeout:250 ms.&lt;br/&gt;
DNS: Caught IOException:java.net.SocketTimeoutException&lt;br/&gt;
DNS: SEND ID (2): 44650&lt;br/&gt;
DNS: Trying RECEIVE(1) retry(2) for:44650    sock-timeout:500 ms.&lt;br/&gt;
DNS: Caught IOException:java.net.SocketTimeoutException&lt;br/&gt;
DNS: SEND ID (3): 44650&lt;br/&gt;
DNS: Trying RECEIVE(1) retry(3) for:44650    sock-timeout:1000 ms.&lt;br/&gt;
DNS: Caught IOException:java.net.SocketTimeoutException&lt;br/&gt;
DNS: SEND ID (4): 44650&lt;br/&gt;
DNS: Trying RECEIVE(1) retry(4) for:44650    sock-timeout:2000 ms.&lt;br/&gt;
DNS: Caught IOException:java.net.SocketTimeoutException&lt;br/&gt;
DNS: SEND ID (5): 44650&lt;br/&gt;
DNS: Trying RECEIVE(1) retry(5) for:44650    sock-timeout:4000 ms.&lt;br/&gt;
DNS: Caught IOException:java.net.SocketTimeoutException&lt;br/&gt;
&lt;br/&gt;
For elapsedTime &amp;lt; expectedTime then there may be a &amp;quot;select&amp;quot; precision issue on the failing host&amp;#39;s OS ?&lt;br/&gt;
</comment>
                            <comment id="14545566" author="dholmes" created="Wed, 14 Dec 2022 16:29:54 -0800"  >The test is failing because the elapsed time is shorter than the expected accumulated timeout. It is somewhat unclear to me exactly when the test logic starts relative to when the startTime is taken:&lt;br/&gt;
&lt;br/&gt;
setContext(new InitialDirContext(env()));&lt;br/&gt;
// Any request should fail after timeouts have expired.&lt;br/&gt;
startTime = Instant.now();&lt;br/&gt;
context().getAttributes(&amp;quot;&amp;quot;);&lt;br/&gt;
&lt;br/&gt;
If the test actually commences with the setContext then the elapsed time can certainly be shorter than the timeout.</comment>
                            <comment id="14477932" author="JIRAUSER19203" created="Thu, 17 Feb 2022 05:51:08 -0800"  >Failed in master for me too:&lt;br/&gt;
&lt;br/&gt;
STDOUT:&lt;br/&gt;
Skip local DNS Server creation&lt;br/&gt;
Elapsed (ms):  4420&lt;br/&gt;
Expected (ms): 7750&lt;br/&gt;
STDERR:&lt;br/&gt;
java.lang.RuntimeException: Failed: timeout in 4420 ms, expected7750ms&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at Timeout.handleException(Timeout.java:108)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at TestBase.launch(TestBase.java:84)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at TestBase.run(TestBase.java:50)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at Timeout.main(Timeout.java:61)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.lang.reflect.Method.invoke(Method.java:577)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at com.sun.javatest.regtest.agent.MainActionHelper$AgentVMRunnable.run(MainActionHelper.java:312)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.base/java.lang.Thread.run(Thread.java:828)&lt;br/&gt;
</comment>
                            <comment id="14412470" author="cslucas" created="Fri, 9 Apr 2021 14:46:23 -0700"  >Seeing this same error on JDK11 + Shenandoah + Linux.</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10200">
                    <name>Backport</name>
                                            <outwardlinks description="backported by">
                                        <issuelink>
            <issuekey id="5152469">JDK-8351598</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5154798">JDK-8353647</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5152551">JDK-8351677</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10002">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="5070063">JDK-8282993</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10003">
                    <name>Relates</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="5138407">JDK-8339538</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="5135827">JDK-8337720</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                                              <subtask id="5130126">JDK-8332771</subtask>
                                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_11700" key="com.atlassian.jira.plugins.jira-development-integration-plugin:devsummary">
                        <customfieldname>Development</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10600" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-fixedBackportedCustomfield">
                        <customfieldname>Fixed</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_10005" key="com.atlassian.jira.plugin.system.customfieldtypes:multiselect">
                        <customfieldname>OS</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17023"><![CDATA[linux]]></customfieldvalue>
    <customfieldvalue key="17005"><![CDATA[windows]]></customfieldvalue>
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                            <customfield id="customfield_11100" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2i0qj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_11004" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10006" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Resolved In Build</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17351"><![CDATA[b20]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10008" key="com.oracle.jira.jira-subcomponent-plugin:oracle-subComponentField">
                        <customfieldname>Subcomponent</customfieldname>
                        <customfieldvalues>
                             <customfieldvalue key="227"><![CDATA[javax.naming]]></customfieldvalue> 
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10601" key="com.oracle.jira.javabugsystem-jira-plugin:jbs-targetBackportedCustomfield">
                        <customfieldname>Targeted</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10100" key="com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons">
                        <customfieldname>Verification</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="17000"><![CDATA[Verified]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>